Loading plugins phase: Elapsed time ==> 5s.621ms
<CYPRESSTAG name="CyDsfit arguments...">
cydsfit arguments: -.fdsnotice -.fdswarpdepfile=warp_dependencies.txt -.fdselabdepfile=elab_dependencies.txt -.fdsbldfile=generated_files.txt -.fdsreffile=referenced_files.txt -p C:\Sandbox\Sem2\EAA\Lab\Lab01\Lab01EAA\EGasPedal\EGasPedal.cydsn\EGasPedal.cyprj -d CY8C5888LTI-LP097 -s C:\Sandbox\Sem2\EAA\Lab\Lab01\Lab01EAA\EGasPedal\EGasPedal.cydsn\Generated_Source\PSoC5 -- -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE
</CYPRESSTAG>
<CYPRESSTAG name="Design elaboration results...">
ADD: sdb.M0065: information: Analog terminal "vdac_ref" on ADC_SAR_SEQ_v2_10 is unconnected.
 * C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\ADC_SAR_SEQ_v2_10\PSoC5\ADC_SAR_SEQ_v2_10.cysch (Signal: vdac_ref)
 * C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\ADC_SAR_SEQ_v2_10\PSoC5\ADC_SAR_SEQ_v2_10.cysch (Shape_798)
 * C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\ADC_SAR_SEQ_v2_10\PSoC5\ADC_SAR_SEQ_v2_10.cysch (Shape_885)

</CYPRESSTAG>
Elaboration phase: Elapsed time ==> 29s.130ms
<CYPRESSTAG name="HDL generation results...">
</CYPRESSTAG>
HDL generation phase: Elapsed time ==> 0s.046ms
<CYPRESSTAG name="Synthesis results...">

     | | | | | | |
   _________________
  -|               |-
  -|               |-
  -|               |-
  -|    CYPRESS    |-
  -|               |-
  -|               |-   Warp Verilog Synthesis Compiler: Version 6.3 IR 41
  -|               |-   Copyright (C) 1991-2001 Cypress Semiconductor
   |_______________|
     | | | | | | |

======================================================================
Compiling:  EGasPedal.v
Program  :   C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\bin\warp.exe
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Sandbox\Sem2\EAA\Lab\Lab01\Lab01EAA\EGasPedal\EGasPedal.cydsn\EGasPedal.cyprj -dcpsoc3 EGasPedal.v -verilog
======================================================================

======================================================================
Compiling:  EGasPedal.v
Program  :   C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\bin\warp.exe
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Sandbox\Sem2\EAA\Lab\Lab01\Lab01EAA\EGasPedal\EGasPedal.cydsn\EGasPedal.cyprj -dcpsoc3 EGasPedal.v -verilog
======================================================================

======================================================================
Compiling:  EGasPedal.v
Program  :   vlogfe
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Sandbox\Sem2\EAA\Lab\Lab01\Lab01EAA\EGasPedal\EGasPedal.cydsn\EGasPedal.cyprj -dcpsoc3 -verilog EGasPedal.v
======================================================================

vlogfe V6.3 IR 41:  Verilog parser
Mon Jun 03 14:23:06 2024


======================================================================
Compiling:  EGasPedal.v
Program  :   vpp
Options  :    -yv2 -q10 EGasPedal.v
======================================================================

vpp V6.3 IR 41:  Verilog Pre-Processor
Mon Jun 03 14:23:06 2024

Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\ADC_AMUX_v2_0\ADC_AMUX_v2_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\cypress.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\cy_psoc3_inc.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_analog_virtualmux_v1_0\cy_analog_virtualmux_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\ZeroTerminal\ZeroTerminal.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_virtualmux_v1_0\cy_virtualmux_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_vref_v1_70\cy_vref_v1_70.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\or_v1_0\or_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_constant_v1_0\cy_constant_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\bADC_SAR_SEQ_v2_0\bADC_SAR_SEQ_v2_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\cypress.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_sync_v1_0\cy_sync_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\cypress.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_PWM_v3_30\B_PWM_v3_30.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\cypress.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\OneTerminal\OneTerminal.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\cypress.v'

vpp:  No errors.

Library 'work' => directory 'lcpsoc3'
General_symbol_table
General_symbol_table
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\std.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\cypress.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\work\cypress.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\ieee\work\stdlogic.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\stdlogic\lpmpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\stdlogic\rtlpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\stdlogic\mod_cnst.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\stdlogic\mod_mthv.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\stdlogic\mod_genv.vif'.
Using control file 'EGasPedal.ctl'.
EGasPedal.v (line 732, col 82):  Note: Substituting module 'cmp_vv_vv' for '='.
C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_PWM_v3_30\B_PWM_v3_30.v (line 947, col 46):  Note: Substituting module 'sub_vi_vv' for '-'.
C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_PWM_v3_30\B_PWM_v3_30.v (line 977, col 46):  Note: Substituting module 'add_vi_vv' for '+'.
C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1113, col 55):  Note: Substituting module 'add_vv_vv' for '+'.
C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1122, col 48):  Note: Substituting module 'cmp_vv_vv' for '<'.
C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1122, col 77):  Note: Substituting module 'cmp_vv_vv' for '<'.
C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1389, col 59):  Note: Substituting module 'cmp_vv_vv' for '<'.
C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1424, col 61):  Note: Substituting module 'cmp_vv_vv' for '/='.
C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1547, col 106):  Note: Substituting module 'cmp_vv_vv' for '<'.
C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1603, col 68):  Note: Substituting module 'cmp_vv_vv' for '<'.
C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1604, col 68):  Note: Substituting module 'cmp_vv_vv' for '<'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3pkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3.vif'.

vlogfe:  No errors.


======================================================================
Compiling:  EGasPedal.v
Program  :   tovif
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Sandbox\Sem2\EAA\Lab\Lab01\Lab01EAA\EGasPedal\EGasPedal.cydsn\EGasPedal.cyprj -dcpsoc3 -verilog EGasPedal.v
======================================================================

tovif V6.3 IR 41:  High-level synthesis
Mon Jun 03 14:23:08 2024

Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\std.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\cypress.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\work\cypress.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\ieee\work\stdlogic.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\stdlogic\lpmpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\stdlogic\rtlpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\stdlogic\mod_cnst.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\stdlogic\mod_mthv.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\stdlogic\mod_genv.vif'.
Linking 'C:\Sandbox\Sem2\EAA\Lab\Lab01\Lab01EAA\EGasPedal\EGasPedal.cydsn\codegentemp\EGasPedal.ctl'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\ADC_AMUX_v2_0\ADC_AMUX_v2_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\cypress.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\cy_psoc3_inc.v'.
Linking 'C:\Sandbox\Sem2\EAA\Lab\Lab01\Lab01EAA\EGasPedal\EGasPedal.cydsn\codegentemp\EGasPedal.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_analog_virtualmux_v1_0\cy_analog_virtualmux_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\ZeroTerminal\ZeroTerminal.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_virtualmux_v1_0\cy_virtualmux_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_vref_v1_70\cy_vref_v1_70.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\or_v1_0\or_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_constant_v1_0\cy_constant_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\bADC_SAR_SEQ_v2_0\bADC_SAR_SEQ_v2_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_sync_v1_0\cy_sync_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_PWM_v3_30\B_PWM_v3_30.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\OneTerminal\OneTerminal.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3pkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\stdlogic\mcompare.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\lcpsoc3\stdlogic\mod_cnst.vif'.

tovif:  No errors.


======================================================================
Compiling:  EGasPedal.v
Program  :   topld
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Sandbox\Sem2\EAA\Lab\Lab01\Lab01EAA\EGasPedal\EGasPedal.cydsn\EGasPedal.cyprj -dcpsoc3 -verilog EGasPedal.v
======================================================================

topld V6.3 IR 41:  Synthesis and optimization
Mon Jun 03 14:23:09 2024

Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\std.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\cypress.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\work\cypress.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\ieee\work\stdlogic.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\stdlogic\lpmpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\stdlogic\rtlpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\stdlogic\mod_cnst.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\stdlogic\mod_mthv.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\stdlogic\mod_genv.vif'.
Linking 'C:\Sandbox\Sem2\EAA\Lab\Lab01\Lab01EAA\EGasPedal\EGasPedal.cydsn\codegentemp\EGasPedal.ctl'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\ADC_AMUX_v2_0\ADC_AMUX_v2_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\cypress.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\cy_psoc3_inc.v'.
Linking 'C:\Sandbox\Sem2\EAA\Lab\Lab01\Lab01EAA\EGasPedal\EGasPedal.cydsn\codegentemp\EGasPedal.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_analog_virtualmux_v1_0\cy_analog_virtualmux_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\ZeroTerminal\ZeroTerminal.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_virtualmux_v1_0\cy_virtualmux_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_vref_v1_70\cy_vref_v1_70.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\or_v1_0\or_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_constant_v1_0\cy_constant_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\bADC_SAR_SEQ_v2_0\bADC_SAR_SEQ_v2_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_sync_v1_0\cy_sync_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_PWM_v3_30\B_PWM_v3_30.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\OneTerminal\OneTerminal.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3pkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\stdlogic\mcompare.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\lcpsoc3\stdlogic\mod_cnst.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\lcpsoc3\stdlogic\cpsoc3.vif'.

----------------------------------------------------------
Detecting unused logic.
----------------------------------------------------------
    User names
	\Joystick_ADC:SAR:Net_221\
	\Joystick_ADC:SAR:Net_383\
	\Joystick_ADC:bSAR_SEQ:sw_soc\
	\Joystick_ADC:soc_out\
	\Joystick_ADC:Net_3905\
	\Joystick_ADC:Net_3867\
	\Joystick_ADC:MODULE_1:g1:a0:gx:u0:albi_2\
	\Joystick_ADC:MODULE_1:g1:a0:gx:u0:agbi_2\
	\Joystick_ADC:MODULE_1:g1:a0:gx:u0:albi_1\
	\Joystick_ADC:MODULE_1:g1:a0:gx:u0:agbi_1\
	\Joystick_ADC:MODULE_1:g1:a0:gx:u0:albi_0\
	\Joystick_ADC:MODULE_1:g1:a0:gx:u0:agbi_0\
	\Joystick_ADC:MODULE_1:g1:a0:xneq\
	\Joystick_ADC:MODULE_1:g1:a0:xlt\
	\Joystick_ADC:MODULE_1:g1:a0:xlte\
	\Joystick_ADC:MODULE_1:g1:a0:xgt\
	\Joystick_ADC:MODULE_1:g1:a0:xgte\
	\Joystick_ADC:MODULE_1:lt\
	\Joystick_ADC:MODULE_1:gt\
	\Joystick_ADC:MODULE_1:gte\
	\Joystick_ADC:MODULE_1:lte\
	\Joystick_ADC:MODULE_1:neq\
	\RGB_PWM_green:PWMUDB:km_run\
	\RGB_PWM_green:PWMUDB:ctrl_cmpmode2_2\
	\RGB_PWM_green:PWMUDB:ctrl_cmpmode2_1\
	\RGB_PWM_green:PWMUDB:ctrl_cmpmode2_0\
	\RGB_PWM_green:PWMUDB:ctrl_cmpmode1_2\
	\RGB_PWM_green:PWMUDB:ctrl_cmpmode1_1\
	\RGB_PWM_green:PWMUDB:ctrl_cmpmode1_0\
	\RGB_PWM_green:PWMUDB:capt_rising\
	\RGB_PWM_green:PWMUDB:capt_falling\
	\RGB_PWM_green:PWMUDB:trig_rise\
	\RGB_PWM_green:PWMUDB:trig_fall\
	\RGB_PWM_green:PWMUDB:sc_kill\
	\RGB_PWM_green:PWMUDB:min_kill\
	\RGB_PWM_green:PWMUDB:km_tc\
	\RGB_PWM_green:PWMUDB:db_tc\
	\RGB_PWM_green:PWMUDB:dith_sel\
	\RGB_PWM_green:PWMUDB:compare2\
	\RGB_PWM_green:Net_101\
	Net_2187
	Net_2188
	\RGB_PWM_green:PWMUDB:cmp2\
	\RGB_PWM_green:PWMUDB:MODULE_2:b_31\
	\RGB_PWM_green:PWMUDB:MODULE_2:b_30\
	\RGB_PWM_green:PWMUDB:MODULE_2:b_29\
	\RGB_PWM_green:PWMUDB:MODULE_2:b_28\
	\RGB_PWM_green:PWMUDB:MODULE_2:b_27\
	\RGB_PWM_green:PWMUDB:MODULE_2:b_26\
	\RGB_PWM_green:PWMUDB:MODULE_2:b_25\
	\RGB_PWM_green:PWMUDB:MODULE_2:b_24\
	\RGB_PWM_green:PWMUDB:MODULE_2:b_23\
	\RGB_PWM_green:PWMUDB:MODULE_2:b_22\
	\RGB_PWM_green:PWMUDB:MODULE_2:b_21\
	\RGB_PWM_green:PWMUDB:MODULE_2:b_20\
	\RGB_PWM_green:PWMUDB:MODULE_2:b_19\
	\RGB_PWM_green:PWMUDB:MODULE_2:b_18\
	\RGB_PWM_green:PWMUDB:MODULE_2:b_17\
	\RGB_PWM_green:PWMUDB:MODULE_2:b_16\
	\RGB_PWM_green:PWMUDB:MODULE_2:b_15\
	\RGB_PWM_green:PWMUDB:MODULE_2:b_14\
	\RGB_PWM_green:PWMUDB:MODULE_2:b_13\
	\RGB_PWM_green:PWMUDB:MODULE_2:b_12\
	\RGB_PWM_green:PWMUDB:MODULE_2:b_11\
	\RGB_PWM_green:PWMUDB:MODULE_2:b_10\
	\RGB_PWM_green:PWMUDB:MODULE_2:b_9\
	\RGB_PWM_green:PWMUDB:MODULE_2:b_8\
	\RGB_PWM_green:PWMUDB:MODULE_2:b_7\
	\RGB_PWM_green:PWMUDB:MODULE_2:b_6\
	\RGB_PWM_green:PWMUDB:MODULE_2:b_5\
	\RGB_PWM_green:PWMUDB:MODULE_2:b_4\
	\RGB_PWM_green:PWMUDB:MODULE_2:b_3\
	\RGB_PWM_green:PWMUDB:MODULE_2:b_2\
	\RGB_PWM_green:PWMUDB:MODULE_2:b_1\
	\RGB_PWM_green:PWMUDB:MODULE_2:b_0\
	\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:a_31\
	\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:a_30\
	\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:a_29\
	\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:a_28\
	\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:a_27\
	\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:a_26\
	\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:a_25\
	\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:a_24\
	\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:b_31\
	\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:b_30\
	\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:b_29\
	\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:b_28\
	\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:b_27\
	\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:b_26\
	\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:b_25\
	\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:b_24\
	\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:b_23\
	\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:b_22\
	\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:b_21\
	\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:b_20\
	\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:b_19\
	\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:b_18\
	\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:b_17\
	\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:b_16\
	\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:b_15\
	\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:b_14\
	\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:b_13\
	\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:b_12\
	\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:b_11\
	\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:b_10\
	\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:b_9\
	\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:b_8\
	\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:b_7\
	\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:b_6\
	\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:b_5\
	\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:b_4\
	\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:b_3\
	\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:b_2\
	\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:b_1\
	\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:b_0\
	\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:s_31\
	\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:s_30\
	\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:s_29\
	\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:s_28\
	\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:s_27\
	\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:s_26\
	\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:s_25\
	\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:s_24\
	\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:s_23\
	\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:s_22\
	\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:s_21\
	\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:s_20\
	\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:s_19\
	\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:s_18\
	\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:s_17\
	\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:s_16\
	\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:s_15\
	\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:s_14\
	\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:s_13\
	\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:s_12\
	\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:s_11\
	\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:s_10\
	\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:s_9\
	\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:s_8\
	\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:s_7\
	\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:s_6\
	\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:s_5\
	\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:s_4\
	\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:s_3\
	\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:s_2\
	\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_31\
	\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_30\
	\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_29\
	\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_28\
	\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_27\
	\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_26\
	\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_25\
	Net_2183
	Net_2190
	\RGB_PWM_green:Net_113\
	\RGB_PWM_green:Net_107\
	\RGB_PWM_green:Net_114\
	\UART_LOG:BUART:reset_sr\
	Net_2256
	Net_2251
	\UART_LOG:BUART:sRX:s23Poll:MODULE_3:g2:a0:b_1\
	\UART_LOG:BUART:sRX:s23Poll:MODULE_3:g2:a0:b_0\
	\UART_LOG:BUART:sRX:s23Poll:MODULE_4:g2:a0:gta_0\
	\UART_LOG:BUART:sRX:s23Poll:MODULE_5:g2:a0:gta_0\
	Net_2247
	\UART_LOG:BUART:sRX:MODULE_6:g2:a0:gta_0\
	\UART_LOG:BUART:sRX:MODULE_7:g1:a0:gx:u0:albi_1\
	\UART_LOG:BUART:sRX:MODULE_7:g1:a0:gx:u0:agbi_1\
	\UART_LOG:BUART:sRX:MODULE_7:g1:a0:gx:u0:lt_0\
	\UART_LOG:BUART:sRX:MODULE_7:g1:a0:gx:u0:gt_0\
	\UART_LOG:BUART:sRX:MODULE_7:g1:a0:gx:u0:lti_0\
	\UART_LOG:BUART:sRX:MODULE_7:g1:a0:gx:u0:gti_0\
	\UART_LOG:BUART:sRX:MODULE_7:g1:a0:gx:u0:albi_0\
	\UART_LOG:BUART:sRX:MODULE_7:g1:a0:gx:u0:agbi_0\
	\UART_LOG:BUART:sRX:MODULE_7:g1:a0:xeq\
	\UART_LOG:BUART:sRX:MODULE_7:g1:a0:xlt\
	\UART_LOG:BUART:sRX:MODULE_7:g1:a0:xlte\
	\UART_LOG:BUART:sRX:MODULE_7:g1:a0:xgt\
	\UART_LOG:BUART:sRX:MODULE_7:g1:a0:xgte\
	\UART_LOG:BUART:sRX:MODULE_7:lt\
	\UART_LOG:BUART:sRX:MODULE_7:eq\
	\UART_LOG:BUART:sRX:MODULE_7:gt\
	\UART_LOG:BUART:sRX:MODULE_7:gte\
	\UART_LOG:BUART:sRX:MODULE_7:lte\

    Synthesized names
	\RGB_PWM_green:PWMUDB:add_vi_vv_MODGEN_2_31\
	\RGB_PWM_green:PWMUDB:add_vi_vv_MODGEN_2_30\
	\RGB_PWM_green:PWMUDB:add_vi_vv_MODGEN_2_29\
	\RGB_PWM_green:PWMUDB:add_vi_vv_MODGEN_2_28\
	\RGB_PWM_green:PWMUDB:add_vi_vv_MODGEN_2_27\
	\RGB_PWM_green:PWMUDB:add_vi_vv_MODGEN_2_26\
	\RGB_PWM_green:PWMUDB:add_vi_vv_MODGEN_2_25\
	\RGB_PWM_green:PWMUDB:add_vi_vv_MODGEN_2_24\
	\RGB_PWM_green:PWMUDB:add_vi_vv_MODGEN_2_23\
	\RGB_PWM_green:PWMUDB:add_vi_vv_MODGEN_2_22\
	\RGB_PWM_green:PWMUDB:add_vi_vv_MODGEN_2_21\
	\RGB_PWM_green:PWMUDB:add_vi_vv_MODGEN_2_20\
	\RGB_PWM_green:PWMUDB:add_vi_vv_MODGEN_2_19\
	\RGB_PWM_green:PWMUDB:add_vi_vv_MODGEN_2_18\
	\RGB_PWM_green:PWMUDB:add_vi_vv_MODGEN_2_17\
	\RGB_PWM_green:PWMUDB:add_vi_vv_MODGEN_2_16\
	\RGB_PWM_green:PWMUDB:add_vi_vv_MODGEN_2_15\
	\RGB_PWM_green:PWMUDB:add_vi_vv_MODGEN_2_14\
	\RGB_PWM_green:PWMUDB:add_vi_vv_MODGEN_2_13\
	\RGB_PWM_green:PWMUDB:add_vi_vv_MODGEN_2_12\
	\RGB_PWM_green:PWMUDB:add_vi_vv_MODGEN_2_11\
	\RGB_PWM_green:PWMUDB:add_vi_vv_MODGEN_2_10\
	\RGB_PWM_green:PWMUDB:add_vi_vv_MODGEN_2_9\
	\RGB_PWM_green:PWMUDB:add_vi_vv_MODGEN_2_8\
	\RGB_PWM_green:PWMUDB:add_vi_vv_MODGEN_2_7\
	\RGB_PWM_green:PWMUDB:add_vi_vv_MODGEN_2_6\
	\RGB_PWM_green:PWMUDB:add_vi_vv_MODGEN_2_5\
	\RGB_PWM_green:PWMUDB:add_vi_vv_MODGEN_2_4\
	\RGB_PWM_green:PWMUDB:add_vi_vv_MODGEN_2_3\
	\RGB_PWM_green:PWMUDB:add_vi_vv_MODGEN_2_2\

Deleted 184 User equations/components.
Deleted 30 Synthesized equations/components.

------------------------------------------------------
Alias Detection
------------------------------------------------------
Aliasing one to tmpOE__Joystick_YPos_net_0
Aliasing tmpOE__Joystick_XPos_net_0 to tmpOE__Joystick_YPos_net_0
Aliasing \Joystick_ADC:AMuxHw_2_Decoder_enable\ to tmpOE__Joystick_YPos_net_0
Aliasing \Joystick_ADC:SAR:vp_ctl_0\ to zero
Aliasing \Joystick_ADC:SAR:vp_ctl_2\ to zero
Aliasing \Joystick_ADC:SAR:vn_ctl_1\ to zero
Aliasing \Joystick_ADC:SAR:vn_ctl_3\ to zero
Aliasing \Joystick_ADC:SAR:vp_ctl_1\ to zero
Aliasing \Joystick_ADC:SAR:vp_ctl_3\ to zero
Aliasing \Joystick_ADC:SAR:vn_ctl_0\ to zero
Aliasing \Joystick_ADC:SAR:vn_ctl_2\ to zero
Aliasing \Joystick_ADC:SAR:soc\ to zero
Aliasing \Joystick_ADC:bSAR_SEQ:status_7\ to zero
Aliasing \Joystick_ADC:bSAR_SEQ:status_6\ to zero
Aliasing \Joystick_ADC:bSAR_SEQ:status_5\ to zero
Aliasing \Joystick_ADC:bSAR_SEQ:status_4\ to zero
Aliasing \Joystick_ADC:bSAR_SEQ:status_3\ to zero
Aliasing \Joystick_ADC:bSAR_SEQ:status_2\ to zero
Aliasing \Joystick_ADC:bSAR_SEQ:status_1\ to zero
Aliasing Net_207 to \Joystick_ADC:bSAR_SEQ:status_0\
Aliasing \Joystick_ADC:MODULE_1:g1:a0:gx:u0:aeqb_0\ to tmpOE__Joystick_YPos_net_0
Aliasing \RGB_PWM_green:PWMUDB:hwCapture\ to zero
Aliasing \RGB_PWM_green:PWMUDB:trig_out\ to tmpOE__Joystick_YPos_net_0
Aliasing \RGB_PWM_green:PWMUDB:runmode_enable\\R\ to zero
Aliasing \RGB_PWM_green:PWMUDB:runmode_enable\\S\ to zero
Aliasing \RGB_PWM_green:PWMUDB:ltch_kill_reg\\R\ to zero
Aliasing \RGB_PWM_green:PWMUDB:ltch_kill_reg\\S\ to zero
Aliasing \RGB_PWM_green:PWMUDB:min_kill_reg\\R\ to zero
Aliasing \RGB_PWM_green:PWMUDB:min_kill_reg\\S\ to zero
Aliasing \RGB_PWM_green:PWMUDB:final_kill\ to tmpOE__Joystick_YPos_net_0
Aliasing \RGB_PWM_green:PWMUDB:dith_count_1\\R\ to zero
Aliasing \RGB_PWM_green:PWMUDB:dith_count_1\\S\ to zero
Aliasing \RGB_PWM_green:PWMUDB:dith_count_0\\R\ to zero
Aliasing \RGB_PWM_green:PWMUDB:dith_count_0\\S\ to zero
Aliasing \RGB_PWM_green:PWMUDB:cs_addr_0\ to zero
Aliasing \RGB_PWM_green:PWMUDB:pwm1_i\ to zero
Aliasing \RGB_PWM_green:PWMUDB:pwm2_i\ to zero
Aliasing \RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:a_23\ to zero
Aliasing \RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:a_22\ to zero
Aliasing \RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:a_21\ to zero
Aliasing \RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:a_20\ to zero
Aliasing \RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:a_19\ to zero
Aliasing \RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:a_18\ to zero
Aliasing \RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:a_17\ to zero
Aliasing \RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:a_16\ to zero
Aliasing \RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:a_15\ to zero
Aliasing \RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:a_14\ to zero
Aliasing \RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:a_13\ to zero
Aliasing \RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:a_12\ to zero
Aliasing \RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:a_11\ to zero
Aliasing \RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:a_10\ to zero
Aliasing \RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:a_9\ to zero
Aliasing \RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:a_8\ to zero
Aliasing \RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:a_7\ to zero
Aliasing \RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:a_6\ to zero
Aliasing \RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:a_5\ to zero
Aliasing \RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:a_4\ to zero
Aliasing \RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:a_3\ to zero
Aliasing \RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:a_2\ to zero
Aliasing \RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:b_0\ to tmpOE__Joystick_YPos_net_0
Aliasing tmpOE__RGB_G_net_0 to tmpOE__Joystick_YPos_net_0
Aliasing tmpOE__LED_red_net_0 to tmpOE__Joystick_YPos_net_0
Aliasing tmpOE__Tx_port_net_0 to tmpOE__Joystick_YPos_net_0
Aliasing tmpOE__Rx_port_net_0 to tmpOE__Joystick_YPos_net_0
Aliasing \UART_LOG:BUART:tx_hd_send_break\ to zero
Aliasing \UART_LOG:BUART:HalfDuplexSend\ to zero
Aliasing \UART_LOG:BUART:FinalParityType_1\ to zero
Aliasing \UART_LOG:BUART:FinalParityType_0\ to zero
Aliasing \UART_LOG:BUART:FinalAddrMode_2\ to zero
Aliasing \UART_LOG:BUART:FinalAddrMode_1\ to zero
Aliasing \UART_LOG:BUART:FinalAddrMode_0\ to zero
Aliasing \UART_LOG:BUART:tx_ctrl_mark\ to zero
Aliasing \UART_LOG:BUART:tx_status_6\ to zero
Aliasing \UART_LOG:BUART:tx_status_5\ to zero
Aliasing \UART_LOG:BUART:tx_status_4\ to zero
Aliasing \UART_LOG:BUART:rx_count7_bit8_wire\ to zero
Aliasing \UART_LOG:BUART:sRX:s23Poll:MODULE_3:g2:a0:g1:z1:s0:g1:u0:b_0\ to tmpOE__Joystick_YPos_net_0
Aliasing \UART_LOG:BUART:sRX:s23Poll:MODIN5_1\ to \UART_LOG:BUART:sRX:s23Poll:MODIN4_1\
Aliasing \UART_LOG:BUART:sRX:s23Poll:MODIN5_0\ to \UART_LOG:BUART:sRX:s23Poll:MODIN4_0\
Aliasing \UART_LOG:BUART:sRX:s23Poll:MODULE_4:g2:a0:newb_1\ to zero
Aliasing \UART_LOG:BUART:sRX:s23Poll:MODULE_4:g2:a0:newb_0\ to tmpOE__Joystick_YPos_net_0
Aliasing \UART_LOG:BUART:sRX:s23Poll:MODIN6_1\ to \UART_LOG:BUART:sRX:s23Poll:MODIN4_1\
Aliasing \UART_LOG:BUART:sRX:s23Poll:MODIN6_0\ to \UART_LOG:BUART:sRX:s23Poll:MODIN4_0\
Aliasing \UART_LOG:BUART:sRX:s23Poll:MODULE_5:g2:a0:newb_1\ to tmpOE__Joystick_YPos_net_0
Aliasing \UART_LOG:BUART:sRX:s23Poll:MODULE_5:g2:a0:newb_0\ to zero
Aliasing \UART_LOG:BUART:rx_status_1\ to zero
Aliasing \UART_LOG:BUART:sRX:MODULE_6:g2:a0:newa_6\ to zero
Aliasing \UART_LOG:BUART:sRX:MODULE_6:g2:a0:newa_5\ to zero
Aliasing \UART_LOG:BUART:sRX:MODULE_6:g2:a0:newa_4\ to zero
Aliasing \UART_LOG:BUART:sRX:MODULE_6:g2:a0:newb_6\ to zero
Aliasing \UART_LOG:BUART:sRX:MODULE_6:g2:a0:newb_5\ to zero
Aliasing \UART_LOG:BUART:sRX:MODULE_6:g2:a0:newb_4\ to zero
Aliasing \UART_LOG:BUART:sRX:MODULE_6:g2:a0:newb_3\ to zero
Aliasing \UART_LOG:BUART:sRX:MODULE_6:g2:a0:newb_2\ to tmpOE__Joystick_YPos_net_0
Aliasing \UART_LOG:BUART:sRX:MODULE_6:g2:a0:newb_1\ to tmpOE__Joystick_YPos_net_0
Aliasing \UART_LOG:BUART:sRX:MODULE_6:g2:a0:newb_0\ to zero
Aliasing \UART_LOG:BUART:sRX:MODULE_7:g1:a0:gx:u0:aeqb_0\ to tmpOE__Joystick_YPos_net_0
Aliasing tmpOE__WD_ResetButton_net_0 to tmpOE__Joystick_YPos_net_0
Aliasing \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\\D\ to \Joystick_ADC:MODIN1_5\
Aliasing \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\\D\ to \Joystick_ADC:MODIN1_4\
Aliasing \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\\D\ to \Joystick_ADC:MODIN1_3\
Aliasing \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\\D\ to \Joystick_ADC:MODIN1_2\
Aliasing \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\\D\ to \Joystick_ADC:MODIN1_1\
Aliasing \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\\D\ to \Joystick_ADC:MODIN1_0\
Aliasing \RGB_PWM_green:PWMUDB:min_kill_reg\\D\ to tmpOE__Joystick_YPos_net_0
Aliasing \RGB_PWM_green:PWMUDB:prevCapture\\D\ to zero
Aliasing \RGB_PWM_green:PWMUDB:trig_last\\D\ to zero
Aliasing \RGB_PWM_green:PWMUDB:ltch_kill_reg\\D\ to tmpOE__Joystick_YPos_net_0
Aliasing \UART_LOG:BUART:reset_reg\\D\ to zero
Aliasing \UART_LOG:BUART:rx_break_status\\D\ to zero
Removing Lhs of wire one[7] = tmpOE__Joystick_YPos_net_0[1]
Removing Lhs of wire tmpOE__Joystick_XPos_net_0[10] = tmpOE__Joystick_YPos_net_0[1]
Removing Lhs of wire \Joystick_ADC:AMuxHw_2_Decoder_enable\[16] = tmpOE__Joystick_YPos_net_0[1]
Removing Lhs of wire \Joystick_ADC:cmp_vv_vv_MODGEN_1\[18] = \Joystick_ADC:MODULE_1:g1:a0:xeq\[351]
Removing Rhs of wire \Joystick_ADC:clock\[19] = \Joystick_ADC:Net_3874\[251]
Removing Rhs of wire \Joystick_ADC:ch_addr_5\[21] = \Joystick_ADC:bSAR_SEQ:count_5\[218]
Removing Rhs of wire \Joystick_ADC:ch_addr_4\[23] = \Joystick_ADC:bSAR_SEQ:count_4\[219]
Removing Rhs of wire \Joystick_ADC:ch_addr_3\[25] = \Joystick_ADC:bSAR_SEQ:count_3\[220]
Removing Rhs of wire \Joystick_ADC:ch_addr_2\[27] = \Joystick_ADC:bSAR_SEQ:count_2\[221]
Removing Rhs of wire \Joystick_ADC:ch_addr_1\[29] = \Joystick_ADC:bSAR_SEQ:count_1\[222]
Removing Rhs of wire \Joystick_ADC:ch_addr_0\[31] = \Joystick_ADC:bSAR_SEQ:count_0\[223]
Removing Lhs of wire \Joystick_ADC:SAR:vp_ctl_0\[163] = zero[2]
Removing Lhs of wire \Joystick_ADC:SAR:vp_ctl_2\[164] = zero[2]
Removing Lhs of wire \Joystick_ADC:SAR:vn_ctl_1\[165] = zero[2]
Removing Lhs of wire \Joystick_ADC:SAR:vn_ctl_3\[166] = zero[2]
Removing Lhs of wire \Joystick_ADC:SAR:vp_ctl_1\[167] = zero[2]
Removing Lhs of wire \Joystick_ADC:SAR:vp_ctl_3\[168] = zero[2]
Removing Lhs of wire \Joystick_ADC:SAR:vn_ctl_0\[169] = zero[2]
Removing Lhs of wire \Joystick_ADC:SAR:vn_ctl_2\[170] = zero[2]
Removing Lhs of wire \Joystick_ADC:SAR:Net_188\[171] = \Joystick_ADC:clock\[19]
Removing Lhs of wire \Joystick_ADC:SAR:soc\[177] = zero[2]
Removing Rhs of wire \Joystick_ADC:bSAR_SEQ:enable\[208] = \Joystick_ADC:bSAR_SEQ:control_0\[209]
Removing Rhs of wire \Joystick_ADC:bSAR_SEQ:load_period\[210] = \Joystick_ADC:bSAR_SEQ:control_1\[211]
Removing Lhs of wire \Joystick_ADC:bSAR_SEQ:status_7\[224] = zero[2]
Removing Lhs of wire \Joystick_ADC:bSAR_SEQ:status_6\[225] = zero[2]
Removing Lhs of wire \Joystick_ADC:bSAR_SEQ:status_5\[226] = zero[2]
Removing Lhs of wire \Joystick_ADC:bSAR_SEQ:status_4\[227] = zero[2]
Removing Lhs of wire \Joystick_ADC:bSAR_SEQ:status_3\[228] = zero[2]
Removing Lhs of wire \Joystick_ADC:bSAR_SEQ:status_2\[229] = zero[2]
Removing Lhs of wire \Joystick_ADC:bSAR_SEQ:status_1\[230] = zero[2]
Removing Rhs of wire \Joystick_ADC:bSAR_SEQ:status_0\[231] = \Joystick_ADC:bSAR_SEQ:nrq_edge_detect_reg\[232]
Removing Rhs of wire Net_207[239] = \Joystick_ADC:bSAR_SEQ:status_0\[231]
Removing Lhs of wire \Joystick_ADC:MODULE_1:g1:a0:newa_5\[262] = \Joystick_ADC:MODIN1_5\[263]
Removing Lhs of wire \Joystick_ADC:MODIN1_5\[263] = \Joystick_ADC:ch_addr_5\[21]
Removing Lhs of wire \Joystick_ADC:MODULE_1:g1:a0:newa_4\[264] = \Joystick_ADC:MODIN1_4\[265]
Removing Lhs of wire \Joystick_ADC:MODIN1_4\[265] = \Joystick_ADC:ch_addr_4\[23]
Removing Lhs of wire \Joystick_ADC:MODULE_1:g1:a0:newa_3\[266] = \Joystick_ADC:MODIN1_3\[267]
Removing Lhs of wire \Joystick_ADC:MODIN1_3\[267] = \Joystick_ADC:ch_addr_3\[25]
Removing Lhs of wire \Joystick_ADC:MODULE_1:g1:a0:newa_2\[268] = \Joystick_ADC:MODIN1_2\[269]
Removing Lhs of wire \Joystick_ADC:MODIN1_2\[269] = \Joystick_ADC:ch_addr_2\[27]
Removing Lhs of wire \Joystick_ADC:MODULE_1:g1:a0:newa_1\[270] = \Joystick_ADC:MODIN1_1\[271]
Removing Lhs of wire \Joystick_ADC:MODIN1_1\[271] = \Joystick_ADC:ch_addr_1\[29]
Removing Lhs of wire \Joystick_ADC:MODULE_1:g1:a0:newa_0\[272] = \Joystick_ADC:MODIN1_0\[273]
Removing Lhs of wire \Joystick_ADC:MODIN1_0\[273] = \Joystick_ADC:ch_addr_0\[31]
Removing Lhs of wire \Joystick_ADC:MODULE_1:g1:a0:newb_5\[274] = \Joystick_ADC:MODIN2_5\[275]
Removing Lhs of wire \Joystick_ADC:MODIN2_5\[275] = \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\[20]
Removing Lhs of wire \Joystick_ADC:MODULE_1:g1:a0:newb_4\[276] = \Joystick_ADC:MODIN2_4\[277]
Removing Lhs of wire \Joystick_ADC:MODIN2_4\[277] = \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\[22]
Removing Lhs of wire \Joystick_ADC:MODULE_1:g1:a0:newb_3\[278] = \Joystick_ADC:MODIN2_3\[279]
Removing Lhs of wire \Joystick_ADC:MODIN2_3\[279] = \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\[24]
Removing Lhs of wire \Joystick_ADC:MODULE_1:g1:a0:newb_2\[280] = \Joystick_ADC:MODIN2_2\[281]
Removing Lhs of wire \Joystick_ADC:MODIN2_2\[281] = \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\[26]
Removing Lhs of wire \Joystick_ADC:MODULE_1:g1:a0:newb_1\[282] = \Joystick_ADC:MODIN2_1\[283]
Removing Lhs of wire \Joystick_ADC:MODIN2_1\[283] = \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\[28]
Removing Lhs of wire \Joystick_ADC:MODULE_1:g1:a0:newb_0\[284] = \Joystick_ADC:MODIN2_0\[285]
Removing Lhs of wire \Joystick_ADC:MODIN2_0\[285] = \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\[30]
Removing Lhs of wire \Joystick_ADC:MODULE_1:g1:a0:dataa_5\[286] = \Joystick_ADC:ch_addr_5\[21]
Removing Lhs of wire \Joystick_ADC:MODULE_1:g1:a0:dataa_4\[287] = \Joystick_ADC:ch_addr_4\[23]
Removing Lhs of wire \Joystick_ADC:MODULE_1:g1:a0:dataa_3\[288] = \Joystick_ADC:ch_addr_3\[25]
Removing Lhs of wire \Joystick_ADC:MODULE_1:g1:a0:dataa_2\[289] = \Joystick_ADC:ch_addr_2\[27]
Removing Lhs of wire \Joystick_ADC:MODULE_1:g1:a0:dataa_1\[290] = \Joystick_ADC:ch_addr_1\[29]
Removing Lhs of wire \Joystick_ADC:MODULE_1:g1:a0:dataa_0\[291] = \Joystick_ADC:ch_addr_0\[31]
Removing Lhs of wire \Joystick_ADC:MODULE_1:g1:a0:datab_5\[292] = \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\[20]
Removing Lhs of wire \Joystick_ADC:MODULE_1:g1:a0:datab_4\[293] = \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\[22]
Removing Lhs of wire \Joystick_ADC:MODULE_1:g1:a0:datab_3\[294] = \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\[24]
Removing Lhs of wire \Joystick_ADC:MODULE_1:g1:a0:datab_2\[295] = \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\[26]
Removing Lhs of wire \Joystick_ADC:MODULE_1:g1:a0:datab_1\[296] = \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\[28]
Removing Lhs of wire \Joystick_ADC:MODULE_1:g1:a0:datab_0\[297] = \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\[30]
Removing Lhs of wire \Joystick_ADC:MODULE_1:g1:a0:gx:u0:a_5\[298] = \Joystick_ADC:ch_addr_5\[21]
Removing Lhs of wire \Joystick_ADC:MODULE_1:g1:a0:gx:u0:a_4\[299] = \Joystick_ADC:ch_addr_4\[23]
Removing Lhs of wire \Joystick_ADC:MODULE_1:g1:a0:gx:u0:a_3\[300] = \Joystick_ADC:ch_addr_3\[25]
Removing Lhs of wire \Joystick_ADC:MODULE_1:g1:a0:gx:u0:a_2\[301] = \Joystick_ADC:ch_addr_2\[27]
Removing Lhs of wire \Joystick_ADC:MODULE_1:g1:a0:gx:u0:a_1\[302] = \Joystick_ADC:ch_addr_1\[29]
Removing Lhs of wire \Joystick_ADC:MODULE_1:g1:a0:gx:u0:a_0\[303] = \Joystick_ADC:ch_addr_0\[31]
Removing Lhs of wire \Joystick_ADC:MODULE_1:g1:a0:gx:u0:b_5\[304] = \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\[20]
Removing Lhs of wire \Joystick_ADC:MODULE_1:g1:a0:gx:u0:b_4\[305] = \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\[22]
Removing Lhs of wire \Joystick_ADC:MODULE_1:g1:a0:gx:u0:b_3\[306] = \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\[24]
Removing Lhs of wire \Joystick_ADC:MODULE_1:g1:a0:gx:u0:b_2\[307] = \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\[26]
Removing Lhs of wire \Joystick_ADC:MODULE_1:g1:a0:gx:u0:b_1\[308] = \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\[28]
Removing Lhs of wire \Joystick_ADC:MODULE_1:g1:a0:gx:u0:b_0\[309] = \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\[30]
Removing Lhs of wire \Joystick_ADC:MODULE_1:g1:a0:gx:u0:aeqb_0\[316] = tmpOE__Joystick_YPos_net_0[1]
Removing Lhs of wire \Joystick_ADC:MODULE_1:g1:a0:gx:u0:eq_0\[317] = \Joystick_ADC:MODULE_1:g1:a0:gx:u0:xnor_array_0\[315]
Removing Lhs of wire \Joystick_ADC:MODULE_1:g1:a0:gx:u0:eqi_0\[323] = \Joystick_ADC:MODULE_1:g1:a0:gx:u0:eq_5\[322]
Removing Rhs of wire \Joystick_ADC:MODULE_1:g1:a0:xeq\[351] = \Joystick_ADC:MODULE_1:g1:a0:gx:u0:aeqb_1\[324]
Removing Lhs of wire \RGB_PWM_green:PWMUDB:ctrl_enable\[377] = \RGB_PWM_green:PWMUDB:control_7\[369]
Removing Lhs of wire \RGB_PWM_green:PWMUDB:hwCapture\[387] = zero[2]
Removing Lhs of wire \RGB_PWM_green:PWMUDB:hwEnable\[388] = \RGB_PWM_green:PWMUDB:control_7\[369]
Removing Lhs of wire \RGB_PWM_green:PWMUDB:trig_out\[392] = tmpOE__Joystick_YPos_net_0[1]
Removing Lhs of wire \RGB_PWM_green:PWMUDB:runmode_enable\\R\[394] = zero[2]
Removing Lhs of wire \RGB_PWM_green:PWMUDB:runmode_enable\\S\[395] = zero[2]
Removing Lhs of wire \RGB_PWM_green:PWMUDB:final_enable\[396] = \RGB_PWM_green:PWMUDB:runmode_enable\[393]
Removing Lhs of wire \RGB_PWM_green:PWMUDB:ltch_kill_reg\\R\[400] = zero[2]
Removing Lhs of wire \RGB_PWM_green:PWMUDB:ltch_kill_reg\\S\[401] = zero[2]
Removing Lhs of wire \RGB_PWM_green:PWMUDB:min_kill_reg\\R\[402] = zero[2]
Removing Lhs of wire \RGB_PWM_green:PWMUDB:min_kill_reg\\S\[403] = zero[2]
Removing Lhs of wire \RGB_PWM_green:PWMUDB:final_kill\[406] = tmpOE__Joystick_YPos_net_0[1]
Removing Lhs of wire \RGB_PWM_green:PWMUDB:add_vi_vv_MODGEN_2_1\[410] = \RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:s_1\[628]
Removing Lhs of wire \RGB_PWM_green:PWMUDB:add_vi_vv_MODGEN_2_0\[412] = \RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:s_0\[629]
Removing Lhs of wire \RGB_PWM_green:PWMUDB:dith_count_1\\R\[413] = zero[2]
Removing Lhs of wire \RGB_PWM_green:PWMUDB:dith_count_1\\S\[414] = zero[2]
Removing Lhs of wire \RGB_PWM_green:PWMUDB:dith_count_0\\R\[415] = zero[2]
Removing Lhs of wire \RGB_PWM_green:PWMUDB:dith_count_0\\S\[416] = zero[2]
Removing Lhs of wire \RGB_PWM_green:PWMUDB:cs_addr_2\[418] = \RGB_PWM_green:PWMUDB:tc_i\[398]
Removing Lhs of wire \RGB_PWM_green:PWMUDB:cs_addr_1\[419] = \RGB_PWM_green:PWMUDB:runmode_enable\[393]
Removing Lhs of wire \RGB_PWM_green:PWMUDB:cs_addr_0\[420] = zero[2]
Removing Lhs of wire \RGB_PWM_green:PWMUDB:compare1\[454] = \RGB_PWM_green:PWMUDB:cmp1_less\[424]
Removing Lhs of wire \RGB_PWM_green:PWMUDB:pwm1_i\[459] = zero[2]
Removing Lhs of wire \RGB_PWM_green:PWMUDB:pwm2_i\[461] = zero[2]
Removing Rhs of wire \RGB_PWM_green:Net_96\[464] = \RGB_PWM_green:PWMUDB:pwm_i_reg\[456]
Removing Rhs of wire \RGB_PWM_green:PWMUDB:pwm_temp\[467] = \RGB_PWM_green:PWMUDB:cmp1\[468]
Removing Lhs of wire \RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:a_23\[510] = zero[2]
Removing Lhs of wire \RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:a_22\[511] = zero[2]
Removing Lhs of wire \RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:a_21\[512] = zero[2]
Removing Lhs of wire \RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:a_20\[513] = zero[2]
Removing Lhs of wire \RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:a_19\[514] = zero[2]
Removing Lhs of wire \RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:a_18\[515] = zero[2]
Removing Lhs of wire \RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:a_17\[516] = zero[2]
Removing Lhs of wire \RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:a_16\[517] = zero[2]
Removing Lhs of wire \RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:a_15\[518] = zero[2]
Removing Lhs of wire \RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:a_14\[519] = zero[2]
Removing Lhs of wire \RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:a_13\[520] = zero[2]
Removing Lhs of wire \RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:a_12\[521] = zero[2]
Removing Lhs of wire \RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:a_11\[522] = zero[2]
Removing Lhs of wire \RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:a_10\[523] = zero[2]
Removing Lhs of wire \RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:a_9\[524] = zero[2]
Removing Lhs of wire \RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:a_8\[525] = zero[2]
Removing Lhs of wire \RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:a_7\[526] = zero[2]
Removing Lhs of wire \RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:a_6\[527] = zero[2]
Removing Lhs of wire \RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:a_5\[528] = zero[2]
Removing Lhs of wire \RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:a_4\[529] = zero[2]
Removing Lhs of wire \RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:a_3\[530] = zero[2]
Removing Lhs of wire \RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:a_2\[531] = zero[2]
Removing Lhs of wire \RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:a_1\[532] = \RGB_PWM_green:PWMUDB:MODIN3_1\[533]
Removing Lhs of wire \RGB_PWM_green:PWMUDB:MODIN3_1\[533] = \RGB_PWM_green:PWMUDB:dith_count_1\[409]
Removing Lhs of wire \RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:a_0\[534] = \RGB_PWM_green:PWMUDB:MODIN3_0\[535]
Removing Lhs of wire \RGB_PWM_green:PWMUDB:MODIN3_0\[535] = \RGB_PWM_green:PWMUDB:dith_count_0\[411]
Removing Lhs of wire \RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_0\[667] = tmpOE__Joystick_YPos_net_0[1]
Removing Lhs of wire \RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:b_0\[668] = tmpOE__Joystick_YPos_net_0[1]
Removing Rhs of wire Net_481[669] = \RGB_PWM_green:Net_96\[464]
Removing Lhs of wire tmpOE__RGB_G_net_0[677] = tmpOE__Joystick_YPos_net_0[1]
Removing Lhs of wire tmpOE__LED_red_net_0[683] = tmpOE__Joystick_YPos_net_0[1]
Removing Lhs of wire tmpOE__Tx_port_net_0[689] = tmpOE__Joystick_YPos_net_0[1]
Removing Lhs of wire tmpOE__Rx_port_net_0[696] = tmpOE__Joystick_YPos_net_0[1]
Removing Lhs of wire \UART_LOG:Net_61\[703] = \UART_LOG:Net_9\[702]
Removing Lhs of wire \UART_LOG:BUART:tx_hd_send_break\[707] = zero[2]
Removing Lhs of wire \UART_LOG:BUART:HalfDuplexSend\[708] = zero[2]
Removing Lhs of wire \UART_LOG:BUART:FinalParityType_1\[709] = zero[2]
Removing Lhs of wire \UART_LOG:BUART:FinalParityType_0\[710] = zero[2]
Removing Lhs of wire \UART_LOG:BUART:FinalAddrMode_2\[711] = zero[2]
Removing Lhs of wire \UART_LOG:BUART:FinalAddrMode_1\[712] = zero[2]
Removing Lhs of wire \UART_LOG:BUART:FinalAddrMode_0\[713] = zero[2]
Removing Lhs of wire \UART_LOG:BUART:tx_ctrl_mark\[714] = zero[2]
Removing Rhs of wire \UART_LOG:BUART:tx_bitclk_enable_pre\[725] = \UART_LOG:BUART:tx_bitclk_dp\[761]
Removing Lhs of wire \UART_LOG:BUART:tx_counter_tc\[771] = \UART_LOG:BUART:tx_counter_dp\[762]
Removing Lhs of wire \UART_LOG:BUART:tx_status_6\[772] = zero[2]
Removing Lhs of wire \UART_LOG:BUART:tx_status_5\[773] = zero[2]
Removing Lhs of wire \UART_LOG:BUART:tx_status_4\[774] = zero[2]
Removing Lhs of wire \UART_LOG:BUART:tx_status_1\[776] = \UART_LOG:BUART:tx_fifo_empty\[739]
Removing Lhs of wire \UART_LOG:BUART:tx_status_3\[778] = \UART_LOG:BUART:tx_fifo_notfull\[738]
Removing Lhs of wire \UART_LOG:BUART:rx_count7_bit8_wire\[838] = zero[2]
Removing Lhs of wire \UART_LOG:BUART:sRX:s23Poll:add_vv_vv_MODGEN_3_1\[845] = \UART_LOG:BUART:sRX:s23Poll:MODULE_3:g2:a0:s_1\[856]
Removing Lhs of wire \UART_LOG:BUART:sRX:s23Poll:add_vv_vv_MODGEN_3_0\[847] = \UART_LOG:BUART:sRX:s23Poll:MODULE_3:g2:a0:s_0\[857]
Removing Lhs of wire \UART_LOG:BUART:sRX:s23Poll:cmp_vv_vv_MODGEN_4\[848] = \UART_LOG:BUART:sRX:s23Poll:MODULE_4:g2:a0:lta_0\[873]
Removing Lhs of wire \UART_LOG:BUART:sRX:s23Poll:cmp_vv_vv_MODGEN_5\[849] = \UART_LOG:BUART:sRX:s23Poll:MODULE_5:g2:a0:lta_0\[887]
Removing Lhs of wire \UART_LOG:BUART:sRX:s23Poll:MODULE_3:g2:a0:a_1\[850] = \UART_LOG:BUART:sRX:s23Poll:MODIN4_1\[851]
Removing Lhs of wire \UART_LOG:BUART:sRX:s23Poll:MODIN4_1\[851] = \UART_LOG:BUART:pollcount_1\[844]
Removing Lhs of wire \UART_LOG:BUART:sRX:s23Poll:MODULE_3:g2:a0:a_0\[852] = \UART_LOG:BUART:sRX:s23Poll:MODIN4_0\[853]
Removing Lhs of wire \UART_LOG:BUART:sRX:s23Poll:MODIN4_0\[853] = \UART_LOG:BUART:pollcount_0\[846]
Removing Lhs of wire \UART_LOG:BUART:sRX:s23Poll:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_0\[859] = tmpOE__Joystick_YPos_net_0[1]
Removing Lhs of wire \UART_LOG:BUART:sRX:s23Poll:MODULE_3:g2:a0:g1:z1:s0:g1:u0:b_0\[860] = tmpOE__Joystick_YPos_net_0[1]
Removing Lhs of wire \UART_LOG:BUART:sRX:s23Poll:MODULE_4:g2:a0:newa_1\[861] = \UART_LOG:BUART:pollcount_1\[844]
Removing Lhs of wire \UART_LOG:BUART:sRX:s23Poll:MODIN5_1\[862] = \UART_LOG:BUART:pollcount_1\[844]
Removing Lhs of wire \UART_LOG:BUART:sRX:s23Poll:MODULE_4:g2:a0:newa_0\[863] = \UART_LOG:BUART:pollcount_0\[846]
Removing Lhs of wire \UART_LOG:BUART:sRX:s23Poll:MODIN5_0\[864] = \UART_LOG:BUART:pollcount_0\[846]
Removing Lhs of wire \UART_LOG:BUART:sRX:s23Poll:MODULE_4:g2:a0:newb_1\[865] = zero[2]
Removing Lhs of wire \UART_LOG:BUART:sRX:s23Poll:MODULE_4:g2:a0:newb_0\[866] = tmpOE__Joystick_YPos_net_0[1]
Removing Lhs of wire \UART_LOG:BUART:sRX:s23Poll:MODULE_4:g2:a0:dataa_1\[867] = \UART_LOG:BUART:pollcount_1\[844]
Removing Lhs of wire \UART_LOG:BUART:sRX:s23Poll:MODULE_4:g2:a0:dataa_0\[868] = \UART_LOG:BUART:pollcount_0\[846]
Removing Lhs of wire \UART_LOG:BUART:sRX:s23Poll:MODULE_4:g2:a0:datab_1\[869] = zero[2]
Removing Lhs of wire \UART_LOG:BUART:sRX:s23Poll:MODULE_4:g2:a0:datab_0\[870] = tmpOE__Joystick_YPos_net_0[1]
Removing Lhs of wire \UART_LOG:BUART:sRX:s23Poll:MODULE_5:g2:a0:newa_1\[875] = \UART_LOG:BUART:pollcount_1\[844]
Removing Lhs of wire \UART_LOG:BUART:sRX:s23Poll:MODIN6_1\[876] = \UART_LOG:BUART:pollcount_1\[844]
Removing Lhs of wire \UART_LOG:BUART:sRX:s23Poll:MODULE_5:g2:a0:newa_0\[877] = \UART_LOG:BUART:pollcount_0\[846]
Removing Lhs of wire \UART_LOG:BUART:sRX:s23Poll:MODIN6_0\[878] = \UART_LOG:BUART:pollcount_0\[846]
Removing Lhs of wire \UART_LOG:BUART:sRX:s23Poll:MODULE_5:g2:a0:newb_1\[879] = tmpOE__Joystick_YPos_net_0[1]
Removing Lhs of wire \UART_LOG:BUART:sRX:s23Poll:MODULE_5:g2:a0:newb_0\[880] = zero[2]
Removing Lhs of wire \UART_LOG:BUART:sRX:s23Poll:MODULE_5:g2:a0:dataa_1\[881] = \UART_LOG:BUART:pollcount_1\[844]
Removing Lhs of wire \UART_LOG:BUART:sRX:s23Poll:MODULE_5:g2:a0:dataa_0\[882] = \UART_LOG:BUART:pollcount_0\[846]
Removing Lhs of wire \UART_LOG:BUART:sRX:s23Poll:MODULE_5:g2:a0:datab_1\[883] = tmpOE__Joystick_YPos_net_0[1]
Removing Lhs of wire \UART_LOG:BUART:sRX:s23Poll:MODULE_5:g2:a0:datab_0\[884] = zero[2]
Removing Lhs of wire \UART_LOG:BUART:rx_status_1\[891] = zero[2]
Removing Rhs of wire \UART_LOG:BUART:rx_status_2\[892] = \UART_LOG:BUART:rx_parity_error_status\[893]
Removing Rhs of wire \UART_LOG:BUART:rx_status_3\[894] = \UART_LOG:BUART:rx_stop_bit_error\[895]
Removing Lhs of wire \UART_LOG:BUART:sRX:cmp_vv_vv_MODGEN_6\[905] = \UART_LOG:BUART:sRX:MODULE_6:g2:a0:lta_0\[954]
Removing Lhs of wire \UART_LOG:BUART:sRX:cmp_vv_vv_MODGEN_7\[909] = \UART_LOG:BUART:sRX:MODULE_7:g1:a0:xneq\[976]
Removing Lhs of wire \UART_LOG:BUART:sRX:MODULE_6:g2:a0:newa_6\[910] = zero[2]
Removing Lhs of wire \UART_LOG:BUART:sRX:MODULE_6:g2:a0:newa_5\[911] = zero[2]
Removing Lhs of wire \UART_LOG:BUART:sRX:MODULE_6:g2:a0:newa_4\[912] = zero[2]
Removing Lhs of wire \UART_LOG:BUART:sRX:MODULE_6:g2:a0:newa_3\[913] = \UART_LOG:BUART:sRX:MODIN7_6\[914]
Removing Lhs of wire \UART_LOG:BUART:sRX:MODIN7_6\[914] = \UART_LOG:BUART:rx_count_6\[833]
Removing Lhs of wire \UART_LOG:BUART:sRX:MODULE_6:g2:a0:newa_2\[915] = \UART_LOG:BUART:sRX:MODIN7_5\[916]
Removing Lhs of wire \UART_LOG:BUART:sRX:MODIN7_5\[916] = \UART_LOG:BUART:rx_count_5\[834]
Removing Lhs of wire \UART_LOG:BUART:sRX:MODULE_6:g2:a0:newa_1\[917] = \UART_LOG:BUART:sRX:MODIN7_4\[918]
Removing Lhs of wire \UART_LOG:BUART:sRX:MODIN7_4\[918] = \UART_LOG:BUART:rx_count_4\[835]
Removing Lhs of wire \UART_LOG:BUART:sRX:MODULE_6:g2:a0:newa_0\[919] = \UART_LOG:BUART:sRX:MODIN7_3\[920]
Removing Lhs of wire \UART_LOG:BUART:sRX:MODIN7_3\[920] = \UART_LOG:BUART:rx_count_3\[836]
Removing Lhs of wire \UART_LOG:BUART:sRX:MODULE_6:g2:a0:newb_6\[921] = zero[2]
Removing Lhs of wire \UART_LOG:BUART:sRX:MODULE_6:g2:a0:newb_5\[922] = zero[2]
Removing Lhs of wire \UART_LOG:BUART:sRX:MODULE_6:g2:a0:newb_4\[923] = zero[2]
Removing Lhs of wire \UART_LOG:BUART:sRX:MODULE_6:g2:a0:newb_3\[924] = zero[2]
Removing Lhs of wire \UART_LOG:BUART:sRX:MODULE_6:g2:a0:newb_2\[925] = tmpOE__Joystick_YPos_net_0[1]
Removing Lhs of wire \UART_LOG:BUART:sRX:MODULE_6:g2:a0:newb_1\[926] = tmpOE__Joystick_YPos_net_0[1]
Removing Lhs of wire \UART_LOG:BUART:sRX:MODULE_6:g2:a0:newb_0\[927] = zero[2]
Removing Lhs of wire \UART_LOG:BUART:sRX:MODULE_6:g2:a0:dataa_6\[928] = zero[2]
Removing Lhs of wire \UART_LOG:BUART:sRX:MODULE_6:g2:a0:dataa_5\[929] = zero[2]
Removing Lhs of wire \UART_LOG:BUART:sRX:MODULE_6:g2:a0:dataa_4\[930] = zero[2]
Removing Lhs of wire \UART_LOG:BUART:sRX:MODULE_6:g2:a0:dataa_3\[931] = \UART_LOG:BUART:rx_count_6\[833]
Removing Lhs of wire \UART_LOG:BUART:sRX:MODULE_6:g2:a0:dataa_2\[932] = \UART_LOG:BUART:rx_count_5\[834]
Removing Lhs of wire \UART_LOG:BUART:sRX:MODULE_6:g2:a0:dataa_1\[933] = \UART_LOG:BUART:rx_count_4\[835]
Removing Lhs of wire \UART_LOG:BUART:sRX:MODULE_6:g2:a0:dataa_0\[934] = \UART_LOG:BUART:rx_count_3\[836]
Removing Lhs of wire \UART_LOG:BUART:sRX:MODULE_6:g2:a0:datab_6\[935] = zero[2]
Removing Lhs of wire \UART_LOG:BUART:sRX:MODULE_6:g2:a0:datab_5\[936] = zero[2]
Removing Lhs of wire \UART_LOG:BUART:sRX:MODULE_6:g2:a0:datab_4\[937] = zero[2]
Removing Lhs of wire \UART_LOG:BUART:sRX:MODULE_6:g2:a0:datab_3\[938] = zero[2]
Removing Lhs of wire \UART_LOG:BUART:sRX:MODULE_6:g2:a0:datab_2\[939] = tmpOE__Joystick_YPos_net_0[1]
Removing Lhs of wire \UART_LOG:BUART:sRX:MODULE_6:g2:a0:datab_1\[940] = tmpOE__Joystick_YPos_net_0[1]
Removing Lhs of wire \UART_LOG:BUART:sRX:MODULE_6:g2:a0:datab_0\[941] = zero[2]
Removing Lhs of wire \UART_LOG:BUART:sRX:MODULE_7:g1:a0:newa_0\[956] = \UART_LOG:BUART:rx_postpoll\[792]
Removing Lhs of wire \UART_LOG:BUART:sRX:MODULE_7:g1:a0:newb_0\[957] = \UART_LOG:BUART:rx_parity_bit\[908]
Removing Lhs of wire \UART_LOG:BUART:sRX:MODULE_7:g1:a0:dataa_0\[958] = \UART_LOG:BUART:rx_postpoll\[792]
Removing Lhs of wire \UART_LOG:BUART:sRX:MODULE_7:g1:a0:datab_0\[959] = \UART_LOG:BUART:rx_parity_bit\[908]
Removing Lhs of wire \UART_LOG:BUART:sRX:MODULE_7:g1:a0:gx:u0:a_0\[960] = \UART_LOG:BUART:rx_postpoll\[792]
Removing Lhs of wire \UART_LOG:BUART:sRX:MODULE_7:g1:a0:gx:u0:b_0\[961] = \UART_LOG:BUART:rx_parity_bit\[908]
Removing Lhs of wire \UART_LOG:BUART:sRX:MODULE_7:g1:a0:gx:u0:aeqb_0\[963] = tmpOE__Joystick_YPos_net_0[1]
Removing Lhs of wire \UART_LOG:BUART:sRX:MODULE_7:g1:a0:gx:u0:eq_0\[964] = \UART_LOG:BUART:sRX:MODULE_7:g1:a0:gx:u0:xnor_array_0\[962]
Removing Lhs of wire \UART_LOG:BUART:sRX:MODULE_7:g1:a0:gx:u0:eqi_0\[965] = \UART_LOG:BUART:sRX:MODULE_7:g1:a0:gx:u0:xnor_array_0\[962]
Removing Lhs of wire tmpOE__WD_ResetButton_net_0[989] = tmpOE__Joystick_YPos_net_0[1]
Removing Lhs of wire \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\\D\[993] = \Joystick_ADC:ch_addr_5\[21]
Removing Lhs of wire \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\\D\[994] = \Joystick_ADC:ch_addr_4\[23]
Removing Lhs of wire \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\\D\[995] = \Joystick_ADC:ch_addr_3\[25]
Removing Lhs of wire \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\\D\[996] = \Joystick_ADC:ch_addr_2\[27]
Removing Lhs of wire \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\\D\[997] = \Joystick_ADC:ch_addr_1\[29]
Removing Lhs of wire \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\\D\[998] = \Joystick_ADC:ch_addr_0\[31]
Removing Lhs of wire \Joystick_ADC:bSAR_SEQ:nrq_edge_detect_reg\\D\[1063] = \Joystick_ADC:bSAR_SEQ:nrq_edge_detect\[238]
Removing Lhs of wire \Joystick_ADC:bSAR_SEQ:nrq_reg\\D\[1065] = \Joystick_ADC:bSAR_SEQ:bus_clk_nrq_reg\[235]
Removing Lhs of wire \RGB_PWM_green:PWMUDB:min_kill_reg\\D\[1066] = tmpOE__Joystick_YPos_net_0[1]
Removing Lhs of wire \RGB_PWM_green:PWMUDB:prevCapture\\D\[1067] = zero[2]
Removing Lhs of wire \RGB_PWM_green:PWMUDB:trig_last\\D\[1068] = zero[2]
Removing Lhs of wire \RGB_PWM_green:PWMUDB:ltch_kill_reg\\D\[1071] = tmpOE__Joystick_YPos_net_0[1]
Removing Lhs of wire \RGB_PWM_green:PWMUDB:pwm_i_reg\\D\[1074] = \RGB_PWM_green:PWMUDB:pwm_i\[457]
Removing Lhs of wire \RGB_PWM_green:PWMUDB:pwm1_i_reg\\D\[1075] = zero[2]
Removing Lhs of wire \RGB_PWM_green:PWMUDB:pwm2_i_reg\\D\[1076] = zero[2]
Removing Lhs of wire \UART_LOG:BUART:reset_reg\\D\[1078] = zero[2]
Removing Lhs of wire \UART_LOG:BUART:rx_bitclk\\D\[1093] = \UART_LOG:BUART:rx_bitclk_pre\[827]
Removing Lhs of wire \UART_LOG:BUART:rx_parity_error_pre\\D\[1102] = \UART_LOG:BUART:rx_parity_error_pre\[903]
Removing Lhs of wire \UART_LOG:BUART:rx_break_status\\D\[1103] = zero[2]

------------------------------------------------------
Aliased 0 equations, 256 wires.
------------------------------------------------------

----------------------------------------------------------
Circuit simplification
----------------------------------------------------------

Substituting virtuals - pass 1:

Note:  Expanding virtual equation for 'tmpOE__Joystick_YPos_net_0' (cost = 0):
tmpOE__Joystick_YPos_net_0 <=  ('1') ;

Note:  Expanding virtual equation for 'zero' (cost = 0):
zero <=  ('0') ;

Note:  Expanding virtual equation for '\Joystick_ADC:MODULE_1:g1:a0:gx:u0:xnor_array_5\' (cost = 6):
\Joystick_ADC:MODULE_1:g1:a0:gx:u0:xnor_array_5\ <= ((not \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and not \Joystick_ADC:ch_addr_5\)
	OR (\Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and \Joystick_ADC:ch_addr_5\));

Note:  Expanding virtual equation for '\Joystick_ADC:MODULE_1:g1:a0:gx:u0:xnor_array_4\' (cost = 6):
\Joystick_ADC:MODULE_1:g1:a0:gx:u0:xnor_array_4\ <= ((not \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and not \Joystick_ADC:ch_addr_4\)
	OR (\Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and \Joystick_ADC:ch_addr_4\));

Note:  Expanding virtual equation for '\Joystick_ADC:MODULE_1:g1:a0:gx:u0:xnor_array_3\' (cost = 2):
\Joystick_ADC:MODULE_1:g1:a0:gx:u0:xnor_array_3\ <= ((not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\)
	OR (\Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\));

Note:  Expanding virtual equation for '\Joystick_ADC:MODULE_1:g1:a0:gx:u0:xnor_array_2\' (cost = 6):
\Joystick_ADC:MODULE_1:g1:a0:gx:u0:xnor_array_2\ <= ((not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\)
	OR (\Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\));

Note:  Expanding virtual equation for '\Joystick_ADC:MODULE_1:g1:a0:gx:u0:xnor_array_1\' (cost = 6):
\Joystick_ADC:MODULE_1:g1:a0:gx:u0:xnor_array_1\ <= ((not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\)
	OR (\Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\));

Note:  Expanding virtual equation for '\Joystick_ADC:MODULE_1:g1:a0:gx:u0:xnor_array_0\' (cost = 4):
\Joystick_ADC:MODULE_1:g1:a0:gx:u0:xnor_array_0\ <= ((not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\)
	OR (\Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\));

Note:  Expanding virtual equation for '\Joystick_ADC:MODULE_1:g1:a0:gx:u0:eq_1\' (cost = 8):
\Joystick_ADC:MODULE_1:g1:a0:gx:u0:eq_1\ <= ((not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\)
	OR (\Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\));

Note:  Expanding virtual equation for '\Joystick_ADC:MODULE_1:g1:a0:gx:u0:eq_2\' (cost = 16):
\Joystick_ADC:MODULE_1:g1:a0:gx:u0:eq_2\ <= ((not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\)
	OR (\Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\));

Note:  Expanding virtual equation for '\Joystick_ADC:MODULE_1:g1:a0:gx:u0:eq_3\' (cost = 32):
\Joystick_ADC:MODULE_1:g1:a0:gx:u0:eq_3\ <= ((not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\)
	OR (\Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\));

Note:  Expanding virtual equation for '\Joystick_ADC:MODULE_1:g1:a0:gx:u0:eq_4\' (cost = 64):
\Joystick_ADC:MODULE_1:g1:a0:gx:u0:eq_4\ <= ((not \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and not \Joystick_ADC:ch_addr_4\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and not \Joystick_ADC:ch_addr_4\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and not \Joystick_ADC:ch_addr_4\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and not \Joystick_ADC:ch_addr_4\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and not \Joystick_ADC:ch_addr_4\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and not \Joystick_ADC:ch_addr_4\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and not \Joystick_ADC:ch_addr_4\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and not \Joystick_ADC:ch_addr_4\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and not \Joystick_ADC:ch_addr_4\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and not \Joystick_ADC:ch_addr_4\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and not \Joystick_ADC:ch_addr_4\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and not \Joystick_ADC:ch_addr_4\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and not \Joystick_ADC:ch_addr_4\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and not \Joystick_ADC:ch_addr_4\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and not \Joystick_ADC:ch_addr_4\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and not \Joystick_ADC:ch_addr_4\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and \Joystick_ADC:ch_addr_4\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and \Joystick_ADC:ch_addr_4\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and \Joystick_ADC:ch_addr_4\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and \Joystick_ADC:ch_addr_4\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and \Joystick_ADC:ch_addr_4\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and \Joystick_ADC:ch_addr_4\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and \Joystick_ADC:ch_addr_4\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and \Joystick_ADC:ch_addr_4\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and \Joystick_ADC:ch_addr_4\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and \Joystick_ADC:ch_addr_4\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and \Joystick_ADC:ch_addr_4\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and \Joystick_ADC:ch_addr_4\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and \Joystick_ADC:ch_addr_4\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and \Joystick_ADC:ch_addr_4\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and \Joystick_ADC:ch_addr_4\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\)
	OR (\Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and \Joystick_ADC:ch_addr_4\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\));

Note:  Expanding virtual equation for '\Joystick_ADC:MODULE_1:g1:a0:gx:u0:eq_5\' (cost = 64):
\Joystick_ADC:MODULE_1:g1:a0:gx:u0:eq_5\ <= ((not \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and not \Joystick_ADC:ch_addr_5\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and not \Joystick_ADC:ch_addr_4\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and not \Joystick_ADC:ch_addr_4\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and \Joystick_ADC:ch_addr_5\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and not \Joystick_ADC:ch_addr_5\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and \Joystick_ADC:ch_addr_4\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and \Joystick_ADC:ch_addr_5\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and \Joystick_ADC:ch_addr_4\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and not \Joystick_ADC:ch_addr_5\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and not \Joystick_ADC:ch_addr_4\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and not \Joystick_ADC:ch_addr_4\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and \Joystick_ADC:ch_addr_5\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and not \Joystick_ADC:ch_addr_5\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and \Joystick_ADC:ch_addr_4\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and \Joystick_ADC:ch_addr_5\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and \Joystick_ADC:ch_addr_4\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and not \Joystick_ADC:ch_addr_5\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and not \Joystick_ADC:ch_addr_4\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and not \Joystick_ADC:ch_addr_4\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and \Joystick_ADC:ch_addr_5\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and not \Joystick_ADC:ch_addr_5\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and \Joystick_ADC:ch_addr_4\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and \Joystick_ADC:ch_addr_5\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and \Joystick_ADC:ch_addr_4\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and not \Joystick_ADC:ch_addr_5\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and not \Joystick_ADC:ch_addr_4\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and not \Joystick_ADC:ch_addr_4\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and \Joystick_ADC:ch_addr_5\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and not \Joystick_ADC:ch_addr_5\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and \Joystick_ADC:ch_addr_4\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and \Joystick_ADC:ch_addr_5\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and \Joystick_ADC:ch_addr_4\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and not \Joystick_ADC:ch_addr_5\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and not \Joystick_ADC:ch_addr_4\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and not \Joystick_ADC:ch_addr_4\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and \Joystick_ADC:ch_addr_5\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and not \Joystick_ADC:ch_addr_5\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and \Joystick_ADC:ch_addr_4\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and \Joystick_ADC:ch_addr_5\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and \Joystick_ADC:ch_addr_4\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and not \Joystick_ADC:ch_addr_5\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and not \Joystick_ADC:ch_addr_4\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and not \Joystick_ADC:ch_addr_4\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and \Joystick_ADC:ch_addr_5\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and not \Joystick_ADC:ch_addr_5\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and \Joystick_ADC:ch_addr_4\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and \Joystick_ADC:ch_addr_5\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and \Joystick_ADC:ch_addr_4\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and not \Joystick_ADC:ch_addr_5\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and not \Joystick_ADC:ch_addr_4\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and not \Joystick_ADC:ch_addr_4\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and \Joystick_ADC:ch_addr_5\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and not \Joystick_ADC:ch_addr_5\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and \Joystick_ADC:ch_addr_4\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and \Joystick_ADC:ch_addr_5\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and \Joystick_ADC:ch_addr_4\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and not \Joystick_ADC:ch_addr_5\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and not \Joystick_ADC:ch_addr_4\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and not \Joystick_ADC:ch_addr_4\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and \Joystick_ADC:ch_addr_5\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and not \Joystick_ADC:ch_addr_5\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and \Joystick_ADC:ch_addr_4\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and \Joystick_ADC:ch_addr_5\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and \Joystick_ADC:ch_addr_4\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and not \Joystick_ADC:ch_addr_5\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and not \Joystick_ADC:ch_addr_4\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and not \Joystick_ADC:ch_addr_4\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and \Joystick_ADC:ch_addr_5\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and not \Joystick_ADC:ch_addr_5\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and \Joystick_ADC:ch_addr_4\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and \Joystick_ADC:ch_addr_5\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and \Joystick_ADC:ch_addr_4\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and not \Joystick_ADC:ch_addr_5\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and not \Joystick_ADC:ch_addr_4\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and not \Joystick_ADC:ch_addr_4\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and \Joystick_ADC:ch_addr_5\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and not \Joystick_ADC:ch_addr_5\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and \Joystick_ADC:ch_addr_4\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and \Joystick_ADC:ch_addr_5\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and \Joystick_ADC:ch_addr_4\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and not \Joystick_ADC:ch_addr_5\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and not \Joystick_ADC:ch_addr_4\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and not \Joystick_ADC:ch_addr_4\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and \Joystick_ADC:ch_addr_5\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and not \Joystick_ADC:ch_addr_5\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and \Joystick_ADC:ch_addr_4\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and \Joystick_ADC:ch_addr_5\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and \Joystick_ADC:ch_addr_4\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and not \Joystick_ADC:ch_addr_5\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and not \Joystick_ADC:ch_addr_4\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and not \Joystick_ADC:ch_addr_4\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and \Joystick_ADC:ch_addr_5\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and not \Joystick_ADC:ch_addr_5\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and \Joystick_ADC:ch_addr_4\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and \Joystick_ADC:ch_addr_5\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and \Joystick_ADC:ch_addr_4\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and not \Joystick_ADC:ch_addr_5\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and not \Joystick_ADC:ch_addr_4\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and not \Joystick_ADC:ch_addr_4\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and \Joystick_ADC:ch_addr_5\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and not \Joystick_ADC:ch_addr_5\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and \Joystick_ADC:ch_addr_4\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and \Joystick_ADC:ch_addr_5\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and \Joystick_ADC:ch_addr_4\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and not \Joystick_ADC:ch_addr_5\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and not \Joystick_ADC:ch_addr_4\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and not \Joystick_ADC:ch_addr_4\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and \Joystick_ADC:ch_addr_5\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and not \Joystick_ADC:ch_addr_5\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and \Joystick_ADC:ch_addr_4\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and \Joystick_ADC:ch_addr_5\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and \Joystick_ADC:ch_addr_4\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and not \Joystick_ADC:ch_addr_5\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and not \Joystick_ADC:ch_addr_4\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and not \Joystick_ADC:ch_addr_4\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and \Joystick_ADC:ch_addr_5\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and not \Joystick_ADC:ch_addr_5\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and \Joystick_ADC:ch_addr_4\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and \Joystick_ADC:ch_addr_5\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and \Joystick_ADC:ch_addr_4\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and not \Joystick_ADC:ch_addr_5\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and not \Joystick_ADC:ch_addr_4\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and not \Joystick_ADC:ch_addr_4\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and \Joystick_ADC:ch_addr_5\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and not \Joystick_ADC:ch_addr_5\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and \Joystick_ADC:ch_addr_4\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (\Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and \Joystick_ADC:ch_addr_5\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and \Joystick_ADC:ch_addr_4\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\));

Note:  Expanding virtual equation for '\Joystick_ADC:MODULE_1:g1:a0:gx:u0:lt_3\' (cost = 2):
\Joystick_ADC:MODULE_1:g1:a0:gx:u0:lt_3\ <= ((not \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\));

Note:  Expanding virtual equation for '\Joystick_ADC:MODULE_1:g1:a0:gx:u0:gt_3\' (cost = 2):
\Joystick_ADC:MODULE_1:g1:a0:gx:u0:gt_3\ <= ((not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\));

Note:  Expanding virtual equation for '\Joystick_ADC:MODULE_1:g1:a0:gx:u0:lt_4\' (cost = 6):
\Joystick_ADC:MODULE_1:g1:a0:gx:u0:lt_4\ <= ((not \Joystick_ADC:ch_addr_4\ and not \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\)
	OR (not \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\)
	OR (not \Joystick_ADC:ch_addr_4\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\));

Note:  Expanding virtual equation for '\Joystick_ADC:MODULE_1:g1:a0:gx:u0:gt_4\' (cost = 6):
\Joystick_ADC:MODULE_1:g1:a0:gx:u0:gt_4\ <= ((not \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_4\ and \Joystick_ADC:ch_addr_3\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and \Joystick_ADC:ch_addr_4\));

Note:  Expanding virtual equation for '\Joystick_ADC:MODULE_1:g1:a0:gx:u0:lt_0\' (cost = 2):
\Joystick_ADC:MODULE_1:g1:a0:gx:u0:lt_0\ <= ((not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\));

Note:  Expanding virtual equation for '\Joystick_ADC:MODULE_1:g1:a0:gx:u0:gt_0\' (cost = 2):
\Joystick_ADC:MODULE_1:g1:a0:gx:u0:gt_0\ <= ((not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\));

Note:  Expanding virtual equation for '\Joystick_ADC:MODULE_1:g1:a0:gx:u0:lt_1\' (cost = 6):
\Joystick_ADC:MODULE_1:g1:a0:gx:u0:lt_1\ <= ((not \Joystick_ADC:ch_addr_1\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\)
	OR (not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\)
	OR (not \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\));

Note:  Expanding virtual equation for '\Joystick_ADC:MODULE_1:g1:a0:gx:u0:gt_1\' (cost = 6):
\Joystick_ADC:MODULE_1:g1:a0:gx:u0:gt_1\ <= ((not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\));

Note:  Expanding virtual equation for '\RGB_PWM_green:PWMUDB:pwm_temp\' (cost = 0):
\RGB_PWM_green:PWMUDB:pwm_temp\ <= (\RGB_PWM_green:PWMUDB:cmp1_less\);

Note:  Expanding virtual equation for '\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_1\' (cost = 0):
\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_1\ <= (\RGB_PWM_green:PWMUDB:dith_count_0\);

Note:  Expanding virtual equation for '\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:s_0\' (cost = 0):
\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:s_0\ <= (not \RGB_PWM_green:PWMUDB:dith_count_0\);

Note:  Expanding virtual equation for '\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_17\' (cost = 0):
\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_17\ <=  ('0') ;

Note:  Expanding virtual equation for '\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_9\' (cost = 0):
\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_9\ <=  ('0') ;

Note:  Expanding virtual equation for '\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_2\' (cost = 0):
\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_2\ <= ((\RGB_PWM_green:PWMUDB:dith_count_1\ and \RGB_PWM_green:PWMUDB:dith_count_0\));

Note:  Expanding virtual equation for '\UART_LOG:BUART:rx_addressmatch\' (cost = 0):
\UART_LOG:BUART:rx_addressmatch\ <= (\UART_LOG:BUART:rx_addressmatch2\
	OR \UART_LOG:BUART:rx_addressmatch1\);

Note:  Expanding virtual equation for '\UART_LOG:BUART:rx_bitclk_pre\' (cost = 1):
\UART_LOG:BUART:rx_bitclk_pre\ <= ((not \UART_LOG:BUART:rx_count_2\ and not \UART_LOG:BUART:rx_count_1\ and not \UART_LOG:BUART:rx_count_0\));

Note:  Expanding virtual equation for '\UART_LOG:BUART:rx_bitclk_pre16x\' (cost = 0):
\UART_LOG:BUART:rx_bitclk_pre16x\ <= ((not \UART_LOG:BUART:rx_count_2\ and \UART_LOG:BUART:rx_count_1\ and \UART_LOG:BUART:rx_count_0\));

Note:  Expanding virtual equation for '\UART_LOG:BUART:rx_poll_bit1\' (cost = 1):
\UART_LOG:BUART:rx_poll_bit1\ <= ((not \UART_LOG:BUART:rx_count_2\ and not \UART_LOG:BUART:rx_count_1\ and \UART_LOG:BUART:rx_count_0\));

Note:  Expanding virtual equation for '\UART_LOG:BUART:rx_poll_bit2\' (cost = 1):
\UART_LOG:BUART:rx_poll_bit2\ <= ((not \UART_LOG:BUART:rx_count_2\ and not \UART_LOG:BUART:rx_count_1\ and not \UART_LOG:BUART:rx_count_0\));

Note:  Expanding virtual equation for '\UART_LOG:BUART:pollingrange\' (cost = 4):
\UART_LOG:BUART:pollingrange\ <= ((not \UART_LOG:BUART:rx_count_2\ and not \UART_LOG:BUART:rx_count_1\));

Note:  Expanding virtual equation for '\UART_LOG:BUART:sRX:s23Poll:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_1\' (cost = 0):
\UART_LOG:BUART:sRX:s23Poll:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_1\ <= (\UART_LOG:BUART:pollcount_0\);

Note:  Expanding virtual equation for '\UART_LOG:BUART:sRX:s23Poll:MODULE_3:g2:a0:s_0\' (cost = 0):
\UART_LOG:BUART:sRX:s23Poll:MODULE_3:g2:a0:s_0\ <= (not \UART_LOG:BUART:pollcount_0\);

Note:  Expanding virtual equation for '\UART_LOG:BUART:sRX:s23Poll:MODULE_4:g2:a0:lta_1\' (cost = 0):
\UART_LOG:BUART:sRX:s23Poll:MODULE_4:g2:a0:lta_1\ <=  ('0') ;

Note:  Expanding virtual equation for '\UART_LOG:BUART:sRX:s23Poll:MODULE_4:g2:a0:gta_1\' (cost = 0):
\UART_LOG:BUART:sRX:s23Poll:MODULE_4:g2:a0:gta_1\ <= (\UART_LOG:BUART:pollcount_1\);

Note:  Expanding virtual equation for '\UART_LOG:BUART:sRX:s23Poll:MODULE_5:g2:a0:lta_1\' (cost = 0):
\UART_LOG:BUART:sRX:s23Poll:MODULE_5:g2:a0:lta_1\ <= (not \UART_LOG:BUART:pollcount_1\);

Note:  Expanding virtual equation for '\UART_LOG:BUART:sRX:s23Poll:MODULE_5:g2:a0:gta_1\' (cost = 0):
\UART_LOG:BUART:sRX:s23Poll:MODULE_5:g2:a0:gta_1\ <=  ('0') ;

Note:  Expanding virtual equation for '\UART_LOG:BUART:sRX:MODULE_6:g2:a0:lta_6\' (cost = 0):
\UART_LOG:BUART:sRX:MODULE_6:g2:a0:lta_6\ <=  ('0') ;

Note:  Expanding virtual equation for '\UART_LOG:BUART:sRX:MODULE_6:g2:a0:gta_6\' (cost = 0):
\UART_LOG:BUART:sRX:MODULE_6:g2:a0:gta_6\ <=  ('0') ;

Note:  Expanding virtual equation for '\UART_LOG:BUART:sRX:MODULE_6:g2:a0:lta_5\' (cost = 0):
\UART_LOG:BUART:sRX:MODULE_6:g2:a0:lta_5\ <=  ('0') ;

Note:  Expanding virtual equation for '\UART_LOG:BUART:sRX:MODULE_6:g2:a0:gta_5\' (cost = 0):
\UART_LOG:BUART:sRX:MODULE_6:g2:a0:gta_5\ <=  ('0') ;

Note:  Expanding virtual equation for '\UART_LOG:BUART:sRX:MODULE_6:g2:a0:lta_4\' (cost = 0):
\UART_LOG:BUART:sRX:MODULE_6:g2:a0:lta_4\ <=  ('0') ;

Note:  Expanding virtual equation for '\UART_LOG:BUART:sRX:MODULE_6:g2:a0:gta_4\' (cost = 0):
\UART_LOG:BUART:sRX:MODULE_6:g2:a0:gta_4\ <=  ('0') ;

Note:  Expanding virtual equation for '\UART_LOG:BUART:sRX:MODULE_6:g2:a0:lta_3\' (cost = 0):
\UART_LOG:BUART:sRX:MODULE_6:g2:a0:lta_3\ <=  ('0') ;

Note:  Expanding virtual equation for '\UART_LOG:BUART:sRX:MODULE_6:g2:a0:gta_3\' (cost = 0):
\UART_LOG:BUART:sRX:MODULE_6:g2:a0:gta_3\ <= (\UART_LOG:BUART:rx_count_6\);

Note:  Expanding virtual equation for '\UART_LOG:BUART:sRX:MODULE_6:g2:a0:lta_2\' (cost = 1):
\UART_LOG:BUART:sRX:MODULE_6:g2:a0:lta_2\ <= ((not \UART_LOG:BUART:rx_count_6\ and not \UART_LOG:BUART:rx_count_5\));

Note:  Expanding virtual equation for '\UART_LOG:BUART:sRX:MODULE_6:g2:a0:gta_2\' (cost = 0):
\UART_LOG:BUART:sRX:MODULE_6:g2:a0:gta_2\ <= (\UART_LOG:BUART:rx_count_6\);

Note:  Expanding virtual equation for '\UART_LOG:BUART:sRX:MODULE_6:g2:a0:lta_1\' (cost = 2):
\UART_LOG:BUART:sRX:MODULE_6:g2:a0:lta_1\ <= ((not \UART_LOG:BUART:rx_count_6\ and not \UART_LOG:BUART:rx_count_4\)
	OR (not \UART_LOG:BUART:rx_count_6\ and not \UART_LOG:BUART:rx_count_5\));

Note:  Expanding virtual equation for '\UART_LOG:BUART:sRX:MODULE_6:g2:a0:gta_1\' (cost = 0):
\UART_LOG:BUART:sRX:MODULE_6:g2:a0:gta_1\ <= (\UART_LOG:BUART:rx_count_6\);

Note:  Expanding virtual equation for '\UART_LOG:BUART:sRX:MODULE_6:g2:a0:lta_0\' (cost = 8):
\UART_LOG:BUART:sRX:MODULE_6:g2:a0:lta_0\ <= ((not \UART_LOG:BUART:rx_count_6\ and not \UART_LOG:BUART:rx_count_4\)
	OR (not \UART_LOG:BUART:rx_count_6\ and not \UART_LOG:BUART:rx_count_5\));


Substituting virtuals - pass 2:

Note:  Expanding virtual equation for '\Joystick_ADC:MODULE_1:g1:a0:xeq\' (cost = 64):
\Joystick_ADC:MODULE_1:g1:a0:xeq\ <= ((not \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and not \Joystick_ADC:ch_addr_5\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and not \Joystick_ADC:ch_addr_4\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and not \Joystick_ADC:ch_addr_4\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and \Joystick_ADC:ch_addr_5\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and not \Joystick_ADC:ch_addr_5\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and \Joystick_ADC:ch_addr_4\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and \Joystick_ADC:ch_addr_5\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and \Joystick_ADC:ch_addr_4\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and not \Joystick_ADC:ch_addr_5\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and not \Joystick_ADC:ch_addr_4\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and not \Joystick_ADC:ch_addr_4\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and \Joystick_ADC:ch_addr_5\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and not \Joystick_ADC:ch_addr_5\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and \Joystick_ADC:ch_addr_4\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and \Joystick_ADC:ch_addr_5\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and \Joystick_ADC:ch_addr_4\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and not \Joystick_ADC:ch_addr_5\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and not \Joystick_ADC:ch_addr_4\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and not \Joystick_ADC:ch_addr_4\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and \Joystick_ADC:ch_addr_5\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and not \Joystick_ADC:ch_addr_5\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and \Joystick_ADC:ch_addr_4\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and \Joystick_ADC:ch_addr_5\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and \Joystick_ADC:ch_addr_4\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and not \Joystick_ADC:ch_addr_5\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and not \Joystick_ADC:ch_addr_4\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and not \Joystick_ADC:ch_addr_4\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and \Joystick_ADC:ch_addr_5\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and not \Joystick_ADC:ch_addr_5\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and \Joystick_ADC:ch_addr_4\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and \Joystick_ADC:ch_addr_5\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and \Joystick_ADC:ch_addr_4\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and not \Joystick_ADC:ch_addr_5\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and not \Joystick_ADC:ch_addr_4\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and not \Joystick_ADC:ch_addr_4\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and \Joystick_ADC:ch_addr_5\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and not \Joystick_ADC:ch_addr_5\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and \Joystick_ADC:ch_addr_4\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and \Joystick_ADC:ch_addr_5\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and \Joystick_ADC:ch_addr_4\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and not \Joystick_ADC:ch_addr_5\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and not \Joystick_ADC:ch_addr_4\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and not \Joystick_ADC:ch_addr_4\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and \Joystick_ADC:ch_addr_5\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and not \Joystick_ADC:ch_addr_5\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and \Joystick_ADC:ch_addr_4\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and \Joystick_ADC:ch_addr_5\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and \Joystick_ADC:ch_addr_4\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and not \Joystick_ADC:ch_addr_5\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and not \Joystick_ADC:ch_addr_4\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and not \Joystick_ADC:ch_addr_4\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and \Joystick_ADC:ch_addr_5\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and not \Joystick_ADC:ch_addr_5\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and \Joystick_ADC:ch_addr_4\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and \Joystick_ADC:ch_addr_5\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and \Joystick_ADC:ch_addr_4\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and not \Joystick_ADC:ch_addr_5\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and not \Joystick_ADC:ch_addr_4\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and not \Joystick_ADC:ch_addr_4\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and \Joystick_ADC:ch_addr_5\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and not \Joystick_ADC:ch_addr_5\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and \Joystick_ADC:ch_addr_4\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and \Joystick_ADC:ch_addr_5\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and \Joystick_ADC:ch_addr_4\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and not \Joystick_ADC:ch_addr_5\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and not \Joystick_ADC:ch_addr_4\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and not \Joystick_ADC:ch_addr_4\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and \Joystick_ADC:ch_addr_5\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and not \Joystick_ADC:ch_addr_5\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and \Joystick_ADC:ch_addr_4\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and \Joystick_ADC:ch_addr_5\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and \Joystick_ADC:ch_addr_4\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and not \Joystick_ADC:ch_addr_5\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and not \Joystick_ADC:ch_addr_4\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and not \Joystick_ADC:ch_addr_4\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and \Joystick_ADC:ch_addr_5\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and not \Joystick_ADC:ch_addr_5\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and \Joystick_ADC:ch_addr_4\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and \Joystick_ADC:ch_addr_5\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and \Joystick_ADC:ch_addr_4\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and not \Joystick_ADC:ch_addr_5\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and not \Joystick_ADC:ch_addr_4\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and not \Joystick_ADC:ch_addr_4\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and \Joystick_ADC:ch_addr_5\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and not \Joystick_ADC:ch_addr_5\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and \Joystick_ADC:ch_addr_4\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and \Joystick_ADC:ch_addr_5\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and \Joystick_ADC:ch_addr_4\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and not \Joystick_ADC:ch_addr_5\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and not \Joystick_ADC:ch_addr_4\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and not \Joystick_ADC:ch_addr_4\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and \Joystick_ADC:ch_addr_5\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and not \Joystick_ADC:ch_addr_5\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and \Joystick_ADC:ch_addr_4\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and \Joystick_ADC:ch_addr_5\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and \Joystick_ADC:ch_addr_4\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and not \Joystick_ADC:ch_addr_5\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and not \Joystick_ADC:ch_addr_4\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and not \Joystick_ADC:ch_addr_4\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and \Joystick_ADC:ch_addr_5\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and not \Joystick_ADC:ch_addr_5\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and \Joystick_ADC:ch_addr_4\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and \Joystick_ADC:ch_addr_5\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and \Joystick_ADC:ch_addr_4\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and not \Joystick_ADC:ch_addr_5\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and not \Joystick_ADC:ch_addr_4\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and not \Joystick_ADC:ch_addr_4\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and \Joystick_ADC:ch_addr_5\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and not \Joystick_ADC:ch_addr_5\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and \Joystick_ADC:ch_addr_4\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and \Joystick_ADC:ch_addr_5\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and \Joystick_ADC:ch_addr_4\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and not \Joystick_ADC:ch_addr_5\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and not \Joystick_ADC:ch_addr_4\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and not \Joystick_ADC:ch_addr_4\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and \Joystick_ADC:ch_addr_5\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and not \Joystick_ADC:ch_addr_5\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and \Joystick_ADC:ch_addr_4\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and \Joystick_ADC:ch_addr_5\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and \Joystick_ADC:ch_addr_4\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and not \Joystick_ADC:ch_addr_5\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and not \Joystick_ADC:ch_addr_4\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and not \Joystick_ADC:ch_addr_4\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and \Joystick_ADC:ch_addr_5\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and not \Joystick_ADC:ch_addr_5\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and \Joystick_ADC:ch_addr_4\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (\Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and \Joystick_ADC:ch_addr_5\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and \Joystick_ADC:ch_addr_4\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\));

Note:  Expanding virtual equation for '\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:s_1\' (cost = 2):
\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:s_1\ <= ((not \RGB_PWM_green:PWMUDB:dith_count_0\ and \RGB_PWM_green:PWMUDB:dith_count_1\)
	OR (not \RGB_PWM_green:PWMUDB:dith_count_1\ and \RGB_PWM_green:PWMUDB:dith_count_0\));

Note:  Expanding virtual equation for '\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_18\' (cost = 0):
\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_18\ <=  ('0') ;

Note:  Expanding virtual equation for '\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_10\' (cost = 0):
\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_10\ <=  ('0') ;

Note:  Expanding virtual equation for '\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_3\' (cost = 0):
\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_3\ <=  ('0') ;

Note:  Expanding virtual equation for '\UART_LOG:BUART:sRX:s23Poll:MODULE_4:g2:a0:lta_0\' (cost = 4):
\UART_LOG:BUART:sRX:s23Poll:MODULE_4:g2:a0:lta_0\ <= ((not \UART_LOG:BUART:pollcount_1\ and not \UART_LOG:BUART:pollcount_0\));

Note:  Expanding virtual equation for '\UART_LOG:BUART:sRX:s23Poll:MODULE_5:g2:a0:lta_0\' (cost = 0):
\UART_LOG:BUART:sRX:s23Poll:MODULE_5:g2:a0:lta_0\ <= (not \UART_LOG:BUART:pollcount_1\);

Note:  Expanding virtual equation for '\UART_LOG:BUART:sRX:s23Poll:MODULE_3:g2:a0:s_1\' (cost = 2):
\UART_LOG:BUART:sRX:s23Poll:MODULE_3:g2:a0:s_1\ <= ((not \UART_LOG:BUART:pollcount_0\ and \UART_LOG:BUART:pollcount_1\)
	OR (not \UART_LOG:BUART:pollcount_1\ and \UART_LOG:BUART:pollcount_0\));


Substituting virtuals - pass 3:

Note:  Virtual signal \Joystick_ADC:AMuxHw_2_Decoder_is_active\ with ( cost: 128 or cost_inv: -1)  > 90 or with size: 64 > 102 has been made a (soft) node.
\Joystick_ADC:AMuxHw_2_Decoder_is_active\ <= ((not \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and not \Joystick_ADC:ch_addr_5\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and not \Joystick_ADC:ch_addr_4\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and not \Joystick_ADC:ch_addr_4\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and \Joystick_ADC:ch_addr_5\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and not \Joystick_ADC:ch_addr_5\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and \Joystick_ADC:ch_addr_4\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and \Joystick_ADC:ch_addr_5\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and \Joystick_ADC:ch_addr_4\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and not \Joystick_ADC:ch_addr_5\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and not \Joystick_ADC:ch_addr_4\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and not \Joystick_ADC:ch_addr_4\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and \Joystick_ADC:ch_addr_5\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and not \Joystick_ADC:ch_addr_5\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and \Joystick_ADC:ch_addr_4\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and \Joystick_ADC:ch_addr_5\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and \Joystick_ADC:ch_addr_4\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and not \Joystick_ADC:ch_addr_5\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and not \Joystick_ADC:ch_addr_4\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and not \Joystick_ADC:ch_addr_4\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and \Joystick_ADC:ch_addr_5\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and not \Joystick_ADC:ch_addr_5\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and \Joystick_ADC:ch_addr_4\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and \Joystick_ADC:ch_addr_5\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and \Joystick_ADC:ch_addr_4\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and not \Joystick_ADC:ch_addr_5\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and not \Joystick_ADC:ch_addr_4\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and not \Joystick_ADC:ch_addr_4\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and \Joystick_ADC:ch_addr_5\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and not \Joystick_ADC:ch_addr_5\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and \Joystick_ADC:ch_addr_4\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and \Joystick_ADC:ch_addr_5\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and \Joystick_ADC:ch_addr_4\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and not \Joystick_ADC:ch_addr_5\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and not \Joystick_ADC:ch_addr_4\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and not \Joystick_ADC:ch_addr_4\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and \Joystick_ADC:ch_addr_5\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and not \Joystick_ADC:ch_addr_5\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and \Joystick_ADC:ch_addr_4\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and \Joystick_ADC:ch_addr_5\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and \Joystick_ADC:ch_addr_4\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and not \Joystick_ADC:ch_addr_5\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and not \Joystick_ADC:ch_addr_4\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and not \Joystick_ADC:ch_addr_4\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and \Joystick_ADC:ch_addr_5\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and not \Joystick_ADC:ch_addr_5\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and \Joystick_ADC:ch_addr_4\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and \Joystick_ADC:ch_addr_5\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and \Joystick_ADC:ch_addr_4\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and not \Joystick_ADC:ch_addr_5\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and not \Joystick_ADC:ch_addr_4\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and not \Joystick_ADC:ch_addr_4\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and \Joystick_ADC:ch_addr_5\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and not \Joystick_ADC:ch_addr_5\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and \Joystick_ADC:ch_addr_4\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and \Joystick_ADC:ch_addr_5\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and \Joystick_ADC:ch_addr_4\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and not \Joystick_ADC:ch_addr_5\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and not \Joystick_ADC:ch_addr_4\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and not \Joystick_ADC:ch_addr_4\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and \Joystick_ADC:ch_addr_5\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and not \Joystick_ADC:ch_addr_5\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and \Joystick_ADC:ch_addr_4\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and not \Joystick_ADC:ch_addr_0\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and \Joystick_ADC:ch_addr_5\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and \Joystick_ADC:ch_addr_4\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and not \Joystick_ADC:ch_addr_5\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and not \Joystick_ADC:ch_addr_4\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and not \Joystick_ADC:ch_addr_4\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and \Joystick_ADC:ch_addr_5\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and not \Joystick_ADC:ch_addr_5\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and \Joystick_ADC:ch_addr_4\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and \Joystick_ADC:ch_addr_5\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and \Joystick_ADC:ch_addr_4\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and not \Joystick_ADC:ch_addr_5\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and not \Joystick_ADC:ch_addr_4\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and not \Joystick_ADC:ch_addr_4\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and \Joystick_ADC:ch_addr_5\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and not \Joystick_ADC:ch_addr_5\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and \Joystick_ADC:ch_addr_4\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and \Joystick_ADC:ch_addr_5\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and \Joystick_ADC:ch_addr_4\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and not \Joystick_ADC:ch_addr_5\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and not \Joystick_ADC:ch_addr_4\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and not \Joystick_ADC:ch_addr_4\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and \Joystick_ADC:ch_addr_5\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and not \Joystick_ADC:ch_addr_5\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and \Joystick_ADC:ch_addr_4\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and \Joystick_ADC:ch_addr_5\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and \Joystick_ADC:ch_addr_4\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and not \Joystick_ADC:ch_addr_5\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and not \Joystick_ADC:ch_addr_4\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and not \Joystick_ADC:ch_addr_4\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and \Joystick_ADC:ch_addr_5\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and not \Joystick_ADC:ch_addr_5\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and \Joystick_ADC:ch_addr_4\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and not \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and \Joystick_ADC:ch_addr_5\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and \Joystick_ADC:ch_addr_4\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and not \Joystick_ADC:ch_addr_5\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and not \Joystick_ADC:ch_addr_4\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and not \Joystick_ADC:ch_addr_4\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and \Joystick_ADC:ch_addr_5\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and not \Joystick_ADC:ch_addr_5\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and \Joystick_ADC:ch_addr_4\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and \Joystick_ADC:ch_addr_5\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and \Joystick_ADC:ch_addr_4\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and not \Joystick_ADC:ch_addr_5\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and not \Joystick_ADC:ch_addr_4\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and not \Joystick_ADC:ch_addr_4\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and \Joystick_ADC:ch_addr_5\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and not \Joystick_ADC:ch_addr_5\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and \Joystick_ADC:ch_addr_4\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and not \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and \Joystick_ADC:ch_addr_5\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and \Joystick_ADC:ch_addr_4\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and not \Joystick_ADC:ch_addr_5\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and not \Joystick_ADC:ch_addr_4\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and not \Joystick_ADC:ch_addr_4\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and \Joystick_ADC:ch_addr_5\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and not \Joystick_ADC:ch_addr_5\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and \Joystick_ADC:ch_addr_4\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and not \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and \Joystick_ADC:ch_addr_5\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and \Joystick_ADC:ch_addr_4\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and not \Joystick_ADC:ch_addr_5\ and not \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and not \Joystick_ADC:ch_addr_4\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and not \Joystick_ADC:ch_addr_4\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and \Joystick_ADC:ch_addr_5\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (not \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and not \Joystick_ADC:ch_addr_5\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and \Joystick_ADC:ch_addr_4\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\)
	OR (\Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ and \Joystick_ADC:ch_addr_5\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ and \Joystick_ADC:ch_addr_4\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ and \Joystick_ADC:ch_addr_3\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ and \Joystick_ADC:ch_addr_2\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ and \Joystick_ADC:ch_addr_1\ and \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ and \Joystick_ADC:ch_addr_0\));

Note:  Expanding virtual equation for '\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_19\' (cost = 0):
\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_19\ <=  ('0') ;

Note:  Expanding virtual equation for '\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_11\' (cost = 0):
\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_11\ <=  ('0') ;

Note:  Expanding virtual equation for '\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_4\' (cost = 0):
\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_4\ <=  ('0') ;

Note:  Expanding virtual equation for '\UART_LOG:BUART:rx_postpoll\' (cost = 72):
\UART_LOG:BUART:rx_postpoll\ <= (\UART_LOG:BUART:pollcount_1\
	OR (Net_2248 and \UART_LOG:BUART:pollcount_0\));

Note:  Expanding virtual equation for '\UART_LOG:BUART:sRX:MODULE_7:g1:a0:gx:u0:xnor_array_0\' (cost = 4):
\UART_LOG:BUART:sRX:MODULE_7:g1:a0:gx:u0:xnor_array_0\ <= ((not Net_2248 and not \UART_LOG:BUART:pollcount_1\ and not \UART_LOG:BUART:rx_parity_bit\)
	OR (not \UART_LOG:BUART:pollcount_1\ and not \UART_LOG:BUART:pollcount_0\ and not \UART_LOG:BUART:rx_parity_bit\)
	OR (\UART_LOG:BUART:pollcount_1\ and \UART_LOG:BUART:rx_parity_bit\)
	OR (Net_2248 and \UART_LOG:BUART:pollcount_0\ and \UART_LOG:BUART:rx_parity_bit\));

Note:  Expanding virtual equation for '\UART_LOG:BUART:sRX:MODULE_7:g1:a0:gx:u0:aeqb_1\' (cost = 4):
\UART_LOG:BUART:sRX:MODULE_7:g1:a0:gx:u0:aeqb_1\ <= ((not Net_2248 and not \UART_LOG:BUART:pollcount_1\ and not \UART_LOG:BUART:rx_parity_bit\)
	OR (not \UART_LOG:BUART:pollcount_1\ and not \UART_LOG:BUART:pollcount_0\ and not \UART_LOG:BUART:rx_parity_bit\)
	OR (\UART_LOG:BUART:pollcount_1\ and \UART_LOG:BUART:rx_parity_bit\)
	OR (Net_2248 and \UART_LOG:BUART:pollcount_0\ and \UART_LOG:BUART:rx_parity_bit\));


Substituting virtuals - pass 4:

Note:  Expanding virtual equation for '\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_20\' (cost = 0):
\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_20\ <=  ('0') ;

Note:  Expanding virtual equation for '\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_12\' (cost = 0):
\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_12\ <=  ('0') ;

Note:  Expanding virtual equation for '\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_5\' (cost = 0):
\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_5\ <=  ('0') ;


Substituting virtuals - pass 5:

Note:  Expanding virtual equation for '\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_21\' (cost = 0):
\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_21\ <=  ('0') ;

Note:  Expanding virtual equation for '\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_13\' (cost = 0):
\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_13\ <=  ('0') ;

Note:  Expanding virtual equation for '\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_6\' (cost = 0):
\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_6\ <=  ('0') ;


Substituting virtuals - pass 6:

Note:  Expanding virtual equation for '\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_22\' (cost = 0):
\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_22\ <=  ('0') ;

Note:  Expanding virtual equation for '\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_14\' (cost = 0):
\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_14\ <=  ('0') ;

Note:  Expanding virtual equation for '\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_7\' (cost = 0):
\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_7\ <=  ('0') ;


Substituting virtuals - pass 7:

Note:  Expanding virtual equation for '\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_23\' (cost = 0):
\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_23\ <=  ('0') ;

Note:  Expanding virtual equation for '\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_15\' (cost = 0):
\RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_15\ <=  ('0') ;


Substituting virtuals - pass 8:


----------------------------------------------------------
Circuit simplification results:

	Expanded 77 signals.
	Turned 1 signals into soft nodes.
	Maximum default expansion cost was set at 3.
----------------------------------------------------------

------------------------------------------------------
Alias Detection
------------------------------------------------------
Aliasing \RGB_PWM_green:PWMUDB:final_capture\ to zero
Aliasing \RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:b_24\ to zero
Aliasing \RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:b_16\ to zero
Aliasing \RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:b_8\ to zero
Aliasing \UART_LOG:BUART:rx_status_0\ to zero
Aliasing \UART_LOG:BUART:rx_status_6\ to zero
Aliasing \UART_LOG:BUART:rx_markspace_status\\D\ to zero
Aliasing \UART_LOG:BUART:rx_parity_error_status\\D\ to zero
Aliasing \UART_LOG:BUART:rx_addr_match_status\\D\ to zero
Removing Lhs of wire \RGB_PWM_green:PWMUDB:final_capture\[422] = zero[2]
Removing Lhs of wire \RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:b_24\[638] = zero[2]
Removing Lhs of wire \RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:b_16\[648] = zero[2]
Removing Lhs of wire \RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:b_8\[658] = zero[2]
Removing Rhs of wire \UART_LOG:BUART:rx_bitclk_enable\[791] = \UART_LOG:BUART:rx_bitclk\[839]
Removing Lhs of wire \UART_LOG:BUART:rx_status_0\[889] = zero[2]
Removing Lhs of wire \UART_LOG:BUART:rx_status_6\[898] = zero[2]
Removing Lhs of wire \RGB_PWM_green:PWMUDB:runmode_enable\\D\[1069] = \RGB_PWM_green:PWMUDB:control_7\[369]
Removing Lhs of wire \UART_LOG:BUART:tx_ctrl_mark_last\\D\[1085] = \UART_LOG:BUART:tx_ctrl_mark_last\[782]
Removing Lhs of wire \UART_LOG:BUART:rx_markspace_status\\D\[1097] = zero[2]
Removing Lhs of wire \UART_LOG:BUART:rx_parity_error_status\\D\[1098] = zero[2]
Removing Lhs of wire \UART_LOG:BUART:rx_addr_match_status\\D\[1100] = zero[2]
Removing Lhs of wire \UART_LOG:BUART:rx_markspace_pre\\D\[1101] = \UART_LOG:BUART:rx_markspace_pre\[902]
Removing Lhs of wire \UART_LOG:BUART:rx_parity_bit\\D\[1106] = \UART_LOG:BUART:rx_parity_bit\[908]

------------------------------------------------------
Aliased 0 equations, 14 wires.
------------------------------------------------------

----------------------------------------------------------
Circuit simplification
----------------------------------------------------------

Eliminating unused logic - pass 1:

Note:  Deleted unused equation:
\UART_LOG:BUART:sRX:MODULE_7:g1:a0:xneq\ <= ((not \UART_LOG:BUART:rx_parity_bit\ and Net_2248 and \UART_LOG:BUART:pollcount_0\)
	OR (not \UART_LOG:BUART:pollcount_1\ and not \UART_LOG:BUART:pollcount_0\ and \UART_LOG:BUART:rx_parity_bit\)
	OR (not Net_2248 and not \UART_LOG:BUART:pollcount_1\ and \UART_LOG:BUART:rx_parity_bit\)
	OR (not \UART_LOG:BUART:rx_parity_bit\ and \UART_LOG:BUART:pollcount_1\));


Eliminating unused logic - pass 2:


Substituting virtuals - pass 1:


----------------------------------------------------------
Circuit simplification results:

	Expanded 0 signals.
	Turned 0 signals into soft nodes.
	Maximum default expansion cost was set at 3.
----------------------------------------------------------

topld:  No errors.

CYPRESS_DIR    : C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp
Warp Program   : C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\bin\warp.exe
Warp Arguments : -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Sandbox\Sem2\EAA\Lab\Lab01\Lab01EAA\EGasPedal\EGasPedal.cydsn\EGasPedal.cyprj -dcpsoc3 EGasPedal.v -verilog
</CYPRESSTAG>
Warp synthesis phase: Elapsed time ==> 3s.487ms
<CYPRESSTAG name="Fitter results...">
<CYPRESSTAG name="Fitter startup details...">
cyp3fit: V4.4.0.80, Family: PSoC3, Started at: Monday, 03 June 2024 14:23:09
Options: -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Sandbox\Sem2\EAA\Lab\Lab01\Lab01EAA\EGasPedal\EGasPedal.cydsn\EGasPedal.cyprj -d CY8C5888LTI-LP097 EGasPedal.v -verilog
</CYPRESSTAG>
<CYPRESSTAG name="Design parsing">
Design parsing phase: Elapsed time ==> 0s.060ms
</CYPRESSTAG>
<CYPRESSTAG name="Tech Mapping">
<CYPRESSTAG name="Initial Mapping" icon="FILE_RPT_TECHM">
    Removed wire end \Joystick_ADC:MODULE_1:g1:a0:gx:u0:lti_1\ kept \Joystick_ADC:MODULE_1:g1:a0:gx:u0:lt_5\
    Removed wire end \Joystick_ADC:MODULE_1:g1:a0:gx:u0:gti_1\ kept \Joystick_ADC:MODULE_1:g1:a0:gx:u0:gt_5\
    Removed wire end \Joystick_ADC:MODULE_1:g1:a0:gx:u0:lti_0\ kept \Joystick_ADC:MODULE_1:g1:a0:gx:u0:lt_2\
    Removed wire end \Joystick_ADC:MODULE_1:g1:a0:gx:u0:gti_0\ kept \Joystick_ADC:MODULE_1:g1:a0:gx:u0:gt_2\
    Removed wire end \RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_24\ kept zero
    Removed wire end \RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_16\ kept zero
    Removed wire end \RGB_PWM_green:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_8\ kept zero
    Converted constant MacroCell: \RGB_PWM_green:PWMUDB:prevCapture\ from registered to combinatorial
    Converted constant MacroCell: \RGB_PWM_green:PWMUDB:trig_last\ from registered to combinatorial
    Converted constant MacroCell: \RGB_PWM_green:PWMUDB:pwm1_i_reg\ from registered to combinatorial
    Converted constant MacroCell: \RGB_PWM_green:PWMUDB:pwm2_i_reg\ from registered to combinatorial
    Converted constant MacroCell: \UART_LOG:BUART:reset_reg\ from registered to combinatorial
    Converted constant MacroCell: \UART_LOG:BUART:rx_markspace_status\ from registered to combinatorial
    Converted constant MacroCell: \UART_LOG:BUART:rx_status_2\ from registered to combinatorial
    Converted constant MacroCell: \UART_LOG:BUART:rx_addr_match_status\ from registered to combinatorial
    Converted constant MacroCell: \UART_LOG:BUART:rx_break_status\ from registered to combinatorial
Assigning clock Joystick_ADC_BusClock to clock BUS_CLK because it is a pass-through
<CYPRESSTAG name="Global Clock Selection" icon="FILE_RPT_TECHM">
    Digital Clock 0: Automatic-assigning  clock 'Joystick_ADC_IntClock'. Fanout=73, Signal=\Joystick_ADC:clock\
    Digital Clock 1: Automatic-assigning  clock 'UART_LOG_IntClock'. Fanout=1, Signal=\UART_LOG:Net_9\
    Digital Clock 2: Automatic-assigning  clock 'PWM_Clock'. Fanout=1, Signal=Net_2605
</CYPRESSTAG>

Removing unused cells resulting from optimization
Done removing unused cells.
<CYPRESSTAG name="UDB Clock/Enable Remapping Results">
    UDB Clk/Enable \Joystick_ADC:bSAR_SEQ:ClkEn\: with output requested to be synchronous
        ClockIn: Joystick_ADC_IntClock was determined to be a global clock that is synchronous to BUS_CLK
        EnableIn: \Joystick_ADC:bSAR_SEQ:CtrlReg\:controlcell.control_0 was determined to be synchronous to ClockIn
        ClockOut: Joystick_ADC_IntClock, EnableOut: \Joystick_ADC:bSAR_SEQ:CtrlReg\:controlcell.control_0
    UDB Clk/Enable \Joystick_ADC:bSAR_SEQ:ClkCtrl\: with output requested to be synchronous
        ClockIn: Joystick_ADC_IntClock was determined to be a global clock that is synchronous to BUS_CLK
        EnableIn: Constant 1 was determined to be synchronous to ClockIn
        ClockOut: Joystick_ADC_IntClock, EnableOut: Constant 1
    UDB Clk/Enable \RGB_PWM_green:PWMUDB:clock_enable_block\: with output requested to be synchronous
        ClockIn: PWM_Clock was determined to be a global clock that is synchronous to BUS_CLK
        EnableIn: Constant 1 was determined to be synchronous to ClockIn
        ClockOut: PWM_Clock, EnableOut: Constant 1
    UDB Clk/Enable \UART_LOG:BUART:ClkSync\: with output requested to be synchronous
        ClockIn: UART_LOG_IntClock was determined to be a global clock that is synchronous to BUS_CLK
        EnableIn: Constant 1 was determined to be synchronous to ClockIn
        ClockOut: UART_LOG_IntClock, EnableOut: Constant 1
</CYPRESSTAG>
ADD: pft.M0040: information: The following 1 pin(s) will be assigned a location by the fitter: WD_ResetButton(0)


Removing unused cells resulting from optimization
Done removing unused cells.
<CYPRESSTAG name="Duplicate Macrocell detection">
</CYPRESSTAG>
</CYPRESSTAG>
<CYPRESSTAG name="Duplicate Macrocell detection">

Removing duplicate macrocells
    Removing \UART_LOG:BUART:rx_parity_bit\, Duplicate of \UART_LOG:BUART:tx_ctrl_mark_last\ 
    MacroCell: Name=\UART_LOG:BUART:rx_parity_bit\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\UART_LOG:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \UART_LOG:BUART:rx_parity_bit\ (fanout=0)

    Removing \UART_LOG:BUART:rx_address_detected\, Duplicate of \UART_LOG:BUART:tx_ctrl_mark_last\ 
    MacroCell: Name=\UART_LOG:BUART:rx_address_detected\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\UART_LOG:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \UART_LOG:BUART:rx_address_detected\ (fanout=0)

    Removing \UART_LOG:BUART:rx_parity_error_pre\, Duplicate of \UART_LOG:BUART:tx_ctrl_mark_last\ 
    MacroCell: Name=\UART_LOG:BUART:rx_parity_error_pre\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\UART_LOG:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \UART_LOG:BUART:rx_parity_error_pre\ (fanout=0)

    Removing \UART_LOG:BUART:rx_markspace_pre\, Duplicate of \UART_LOG:BUART:tx_ctrl_mark_last\ 
    MacroCell: Name=\UART_LOG:BUART:rx_markspace_pre\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\UART_LOG:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \UART_LOG:BUART:rx_markspace_pre\ (fanout=0)

    Removing \UART_LOG:BUART:rx_state_1\, Duplicate of \UART_LOG:BUART:tx_ctrl_mark_last\ 
    MacroCell: Name=\UART_LOG:BUART:rx_state_1\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\UART_LOG:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \UART_LOG:BUART:rx_state_1\ (fanout=8)

    Removing \UART_LOG:BUART:tx_parity_bit\, Duplicate of \UART_LOG:BUART:tx_ctrl_mark_last\ 
    MacroCell: Name=\UART_LOG:BUART:tx_parity_bit\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\UART_LOG:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \UART_LOG:BUART:tx_parity_bit\ (fanout=0)

    Removing \UART_LOG:BUART:tx_mark\, Duplicate of \UART_LOG:BUART:tx_ctrl_mark_last\ 
    MacroCell: Name=\UART_LOG:BUART:tx_mark\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\UART_LOG:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \UART_LOG:BUART:tx_mark\ (fanout=0)


Removing unused cells resulting from optimization
Done removing unused cells.
End removing duplicate macrocells: used 1 pass
</CYPRESSTAG>
<CYPRESSTAG name="Design Equations" icon="FILE_RPT_EQUATION">

------------------------------------------------------------
Design Equations
------------------------------------------------------------
    <CYPRESSTAG name="Pin listing">

    ------------------------------------------------------------
    Pin listing
    ------------------------------------------------------------

    Pin : Name = Joystick_YPos(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => Joystick_YPos(0)__PA ,
            analog_term => Net_212 ,
            pad => Joystick_YPos(0)_PAD ,
            pin_input => \Joystick_ADC:AMuxHw_2_Decoder_one_hot_1\ );
        Properties:
        {
        }

    Pin : Name = Joystick_XPos(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => Joystick_XPos(0)__PA ,
            analog_term => Net_13 ,
            pad => Joystick_XPos(0)_PAD ,
            pin_input => \Joystick_ADC:AMuxHw_2_Decoder_one_hot_0\ );
        Properties:
        {
        }

    Pin : Name = RGB_G(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL, ROUTABLE
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => RGB_G(0)__PA ,
            pin_input => Net_481 ,
            pad => RGB_G(0)_PAD );
        Properties:
        {
        }

    Pin : Name = LED_red(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => LED_red(0)__PA ,
            pad => LED_red(0)_PAD );
        Properties:
        {
        }

    Pin : Name = Tx_port(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL, ROUTABLE
            Initial Value: 1
            IO Voltage: 0
        PORT MAP (
            pa_out => Tx_port(0)__PA ,
            pin_input => Net_2252 ,
            pad => Tx_port(0)_PAD );
        Properties:
        {
        }

    Pin : Name = Rx_port(0)
        Attributes:
            In Group/Port: True
            In Sync Option: SYNC
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_DIGITAL
            VTrip: CMOS
            Slew: FAST
            Input Sync needed: True
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL, ROUTABLE
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => Rx_port(0)__PA ,
            fb => Net_2248 ,
            pad => Rx_port(0)_PAD );
        Properties:
        {
        }

    Pin : Name = WD_ResetButton(0)
        Attributes:
            In Group/Port: True
            In Sync Option: NOSYNC
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_DIGITAL
            VTrip: CMOS
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL, ROUTABLE
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => WD_ResetButton(0)__PA ,
            fb => Net_2257 ,
            pad => WD_ResetButton(0)_PAD );
    </CYPRESSTAG>
    <CYPRESSTAG name="Macrocell listing" icon="FILE_RPT_EQUATION">

    ------------------------------------------------------------
    Macrocell listing
    ------------------------------------------------------------

    MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_is_active_split\, Mode=(Combinatorial)
        Total # of inputs        : 12
        Total # of product terms : 8
            Clock Enable: True
        Main Equation            : 8 pterms
        (
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\Joystick_ADC:ch_addr_5\
            + \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\Joystick_ADC:ch_addr_4\
            + \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\Joystick_ADC:ch_addr_3\
            + \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\Joystick_ADC:ch_addr_2\
            + !\Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \Joystick_ADC:ch_addr_1\
            + \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\Joystick_ADC:ch_addr_1\
            + !\Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ * 
              \Joystick_ADC:ch_addr_0\
            + \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ * 
              !\Joystick_ADC:ch_addr_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_is_active_split\ (fanout=1)

    MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_is_active\, Mode=(Combinatorial)
        Total # of inputs        : 9
        Total # of product terms : 5
            Clock Enable: True
        Main Equation            : 5 pterms
        !(
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \Joystick_ADC:ch_addr_5\
            + !\Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \Joystick_ADC:ch_addr_4\
            + !\Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \Joystick_ADC:ch_addr_3\
            + !\Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \Joystick_ADC:ch_addr_2\
            + \Joystick_ADC:AMuxHw_2_Decoder_is_active_split\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_is_active\ (fanout=64)
        Properties               : 
        {
            soft = 1
        }

    MacroCell: Name=\Joystick_ADC:bSAR_SEQ:cnt_enable\, Mode=(Combinatorial)
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        !(
              !Net_208 * !\Joystick_ADC:bSAR_SEQ:load_period\
        );
        Output = \Joystick_ADC:bSAR_SEQ:cnt_enable\ (fanout=1)

    MacroCell: Name=Net_2252, Mode=(Combinatorial)
        Total # of inputs        : 1
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\UART_LOG:BUART:txn\
        );
        Output = Net_2252 (fanout=1)

    MacroCell: Name=\UART_LOG:BUART:counter_load_not\, Mode=(Combinatorial)
        Total # of inputs        : 4
        Total # of product terms : 2
            Clock Enable: True
        Main Equation            : 2 pterms
        !(
              !\UART_LOG:BUART:tx_state_1\ * !\UART_LOG:BUART:tx_state_0\ * 
              \UART_LOG:BUART:tx_bitclk_enable_pre\
            + !\UART_LOG:BUART:tx_state_1\ * !\UART_LOG:BUART:tx_state_0\ * 
              !\UART_LOG:BUART:tx_state_2\
        );
        Output = \UART_LOG:BUART:counter_load_not\ (fanout=1)

    MacroCell: Name=\UART_LOG:BUART:tx_status_0\, Mode=(Combinatorial)
        Total # of inputs        : 5
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\UART_LOG:BUART:tx_state_1\ * !\UART_LOG:BUART:tx_state_0\ * 
              \UART_LOG:BUART:tx_bitclk_enable_pre\ * 
              \UART_LOG:BUART:tx_fifo_empty\ * \UART_LOG:BUART:tx_state_2\
        );
        Output = \UART_LOG:BUART:tx_status_0\ (fanout=1)

    MacroCell: Name=\UART_LOG:BUART:tx_status_2\, Mode=(Combinatorial)
        Total # of inputs        : 1
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\UART_LOG:BUART:tx_fifo_notfull\
        );
        Output = \UART_LOG:BUART:tx_status_2\ (fanout=1)

    MacroCell: Name=\UART_LOG:BUART:rx_counter_load\, Mode=(Combinatorial)
        Total # of inputs        : 4
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\UART_LOG:BUART:tx_ctrl_mark_last\ * 
              !\UART_LOG:BUART:rx_state_0\ * !\UART_LOG:BUART:rx_state_3\ * 
              !\UART_LOG:BUART:rx_state_2\
        );
        Output = \UART_LOG:BUART:rx_counter_load\ (fanout=1)

    MacroCell: Name=\UART_LOG:BUART:rx_postpoll\, Mode=(Combinatorial)
        Total # of inputs        : 3
        Total # of product terms : 2
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              Net_2248 * \UART_LOG:BUART:pollcount_0\
            + \UART_LOG:BUART:pollcount_1\
        );
        Output = \UART_LOG:BUART:rx_postpoll\ (fanout=1)

    MacroCell: Name=\UART_LOG:BUART:rx_status_4\, Mode=(Combinatorial)
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \UART_LOG:BUART:rx_load_fifo\ * \UART_LOG:BUART:rx_fifofull\
        );
        Output = \UART_LOG:BUART:rx_status_4\ (fanout=1)

    MacroCell: Name=\UART_LOG:BUART:rx_status_5\, Mode=(Combinatorial)
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \UART_LOG:BUART:rx_fifonotempty\ * 
              \UART_LOG:BUART:rx_state_stop1_reg\
        );
        Output = \UART_LOG:BUART:rx_status_5\ (fanout=1)

    MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_old_id_5\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:ch_addr_5\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ (fanout=66)

    MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_old_id_4\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:ch_addr_4\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ (fanout=66)

    MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_old_id_3\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:ch_addr_3\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ (fanout=66)

    MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_old_id_2\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:ch_addr_2\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ (fanout=66)

    MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_old_id_1\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:ch_addr_1\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ (fanout=65)

    MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_old_id_0\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:ch_addr_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ (fanout=65)

    MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_0\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_0\ (fanout=1)

    MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_1\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_1\ (fanout=1)

    MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_2\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_2\ (fanout=1)

    MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_3\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_3\ (fanout=1)

    MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_4\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_4\ (fanout=1)

    MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_5\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_5\ (fanout=1)

    MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_6\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_6\ (fanout=1)

    MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_7\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_7\ (fanout=1)

    MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_8\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_8\ (fanout=1)

    MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_9\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_9\ (fanout=1)

    MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_10\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_10\ (fanout=1)

    MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_11\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_11\ (fanout=1)

    MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_12\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_12\ (fanout=1)

    MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_13\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_13\ (fanout=1)

    MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_14\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_14\ (fanout=1)

    MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_15\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_15\ (fanout=1)

    MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_16\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_16\ (fanout=1)

    MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_17\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_17\ (fanout=1)

    MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_18\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_18\ (fanout=1)

    MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_19\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_19\ (fanout=1)

    MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_20\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_20\ (fanout=1)

    MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_21\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_21\ (fanout=1)

    MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_22\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_22\ (fanout=1)

    MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_23\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_23\ (fanout=1)

    MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_24\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_24\ (fanout=1)

    MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_25\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_25\ (fanout=1)

    MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_26\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_26\ (fanout=1)

    MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_27\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_27\ (fanout=1)

    MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_28\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_28\ (fanout=1)

    MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_29\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_29\ (fanout=1)

    MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_30\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_30\ (fanout=1)

    MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_31\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_31\ (fanout=1)

    MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_32\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_32\ (fanout=1)

    MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_33\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_33\ (fanout=1)

    MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_34\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_34\ (fanout=1)

    MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_35\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_35\ (fanout=1)

    MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_36\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_36\ (fanout=1)

    MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_37\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_37\ (fanout=1)

    MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_38\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_38\ (fanout=1)

    MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_39\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_39\ (fanout=1)

    MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_40\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_40\ (fanout=1)

    MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_41\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_41\ (fanout=1)

    MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_42\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_42\ (fanout=1)

    MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_43\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_43\ (fanout=1)

    MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_44\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_44\ (fanout=1)

    MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_45\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_45\ (fanout=1)

    MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_46\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_46\ (fanout=1)

    MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_47\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_47\ (fanout=1)

    MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_48\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_48\ (fanout=1)

    MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_49\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_49\ (fanout=1)

    MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_50\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_50\ (fanout=1)

    MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_51\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_51\ (fanout=1)

    MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_52\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_52\ (fanout=1)

    MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_53\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_53\ (fanout=1)

    MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_54\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_54\ (fanout=1)

    MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_55\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_55\ (fanout=1)

    MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_56\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_56\ (fanout=1)

    MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_57\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_57\ (fanout=1)

    MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_58\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_58\ (fanout=1)

    MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_59\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_59\ (fanout=1)

    MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_60\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_60\ (fanout=1)

    MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_61\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_61\ (fanout=1)

    MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_62\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_62\ (fanout=1)

    MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_63\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_63\ (fanout=1)

    MacroCell: Name=Net_207, Mode=(D-Register)
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: PosEdge(\Joystick_ADC:bSAR_SEQ:enable\)
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:bSAR_SEQ:bus_clk_nrq_reg\ * 
              !\Joystick_ADC:bSAR_SEQ:nrq_reg\
        );
        Output = Net_207 (fanout=3)

    MacroCell: Name=\Joystick_ADC:bSAR_SEQ:bus_clk_nrq_reg\, Mode=(D-Register)
        Total # of inputs        : 3
        Total # of product terms : 2
        List of special equations: 
            Clock  = (ClockBlock_BUS_CLK) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              \Joystick_ADC:bSAR_SEQ:bus_clk_nrq_reg\ * !Net_207
            + \Joystick_ADC:Net_3935\
        );
        Output = \Joystick_ADC:bSAR_SEQ:bus_clk_nrq_reg\ (fanout=3)

    MacroCell: Name=\Joystick_ADC:bSAR_SEQ:nrq_reg\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: PosEdge(\Joystick_ADC:bSAR_SEQ:enable\)
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:bSAR_SEQ:bus_clk_nrq_reg\
        );
        Output = \Joystick_ADC:bSAR_SEQ:nrq_reg\ (fanout=1)

    MacroCell: Name=\RGB_PWM_green:PWMUDB:runmode_enable\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_2605) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \RGB_PWM_green:PWMUDB:control_7\
        );
        Output = \RGB_PWM_green:PWMUDB:runmode_enable\ (fanout=2)

    MacroCell: Name=Net_481, Mode=(D-Register)
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_2605) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \RGB_PWM_green:PWMUDB:runmode_enable\ * 
              \RGB_PWM_green:PWMUDB:cmp1_less\
        );
        Output = Net_481 (fanout=1)

    MacroCell: Name=\UART_LOG:BUART:txn\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 5
        List of special equations: 
            Clock  = (\UART_LOG:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              \UART_LOG:BUART:txn\ * \UART_LOG:BUART:tx_state_1\ * 
              !\UART_LOG:BUART:tx_bitclk\
            + \UART_LOG:BUART:txn\ * \UART_LOG:BUART:tx_state_2\
            + !\UART_LOG:BUART:tx_state_1\ * \UART_LOG:BUART:tx_state_0\ * 
              !\UART_LOG:BUART:tx_shift_out\ * !\UART_LOG:BUART:tx_state_2\
            + !\UART_LOG:BUART:tx_state_1\ * \UART_LOG:BUART:tx_state_0\ * 
              !\UART_LOG:BUART:tx_state_2\ * !\UART_LOG:BUART:tx_bitclk\
            + \UART_LOG:BUART:tx_state_1\ * !\UART_LOG:BUART:tx_state_0\ * 
              !\UART_LOG:BUART:tx_shift_out\ * !\UART_LOG:BUART:tx_state_2\ * 
              !\UART_LOG:BUART:tx_counter_dp\ * \UART_LOG:BUART:tx_bitclk\
        );
        Output = \UART_LOG:BUART:txn\ (fanout=2)

    MacroCell: Name=\UART_LOG:BUART:tx_state_1\, Mode=(T-Register)
        Total # of inputs        : 6
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\UART_LOG:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              \UART_LOG:BUART:tx_state_1\ * \UART_LOG:BUART:tx_state_0\ * 
              \UART_LOG:BUART:tx_bitclk_enable_pre\ * 
              \UART_LOG:BUART:tx_state_2\
            + \UART_LOG:BUART:tx_state_1\ * !\UART_LOG:BUART:tx_state_2\ * 
              \UART_LOG:BUART:tx_counter_dp\ * \UART_LOG:BUART:tx_bitclk\
            + \UART_LOG:BUART:tx_state_0\ * !\UART_LOG:BUART:tx_state_2\ * 
              \UART_LOG:BUART:tx_bitclk\
        );
        Output = \UART_LOG:BUART:tx_state_1\ (fanout=8)

    MacroCell: Name=\UART_LOG:BUART:tx_state_0\, Mode=(T-Register)
        Total # of inputs        : 6
        Total # of product terms : 4
        List of special equations: 
            Clock  = (\UART_LOG:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\UART_LOG:BUART:tx_state_1\ * !\UART_LOG:BUART:tx_state_0\ * 
              \UART_LOG:BUART:tx_bitclk_enable_pre\ * 
              !\UART_LOG:BUART:tx_fifo_empty\
            + !\UART_LOG:BUART:tx_state_1\ * !\UART_LOG:BUART:tx_state_0\ * 
              !\UART_LOG:BUART:tx_fifo_empty\ * !\UART_LOG:BUART:tx_state_2\
            + \UART_LOG:BUART:tx_state_1\ * \UART_LOG:BUART:tx_state_0\ * 
              \UART_LOG:BUART:tx_bitclk_enable_pre\ * 
              \UART_LOG:BUART:tx_fifo_empty\ * \UART_LOG:BUART:tx_state_2\
            + \UART_LOG:BUART:tx_state_0\ * !\UART_LOG:BUART:tx_state_2\ * 
              \UART_LOG:BUART:tx_bitclk\
        );
        Output = \UART_LOG:BUART:tx_state_0\ (fanout=8)

    MacroCell: Name=\UART_LOG:BUART:tx_state_2\, Mode=(T-Register)
        Total # of inputs        : 6
        Total # of product terms : 4
        List of special equations: 
            Clock  = (\UART_LOG:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\UART_LOG:BUART:tx_state_1\ * !\UART_LOG:BUART:tx_state_0\ * 
              \UART_LOG:BUART:tx_bitclk_enable_pre\ * 
              \UART_LOG:BUART:tx_state_2\
            + \UART_LOG:BUART:tx_state_1\ * \UART_LOG:BUART:tx_state_0\ * 
              \UART_LOG:BUART:tx_bitclk_enable_pre\ * 
              \UART_LOG:BUART:tx_state_2\
            + \UART_LOG:BUART:tx_state_1\ * \UART_LOG:BUART:tx_state_0\ * 
              !\UART_LOG:BUART:tx_state_2\ * \UART_LOG:BUART:tx_bitclk\
            + \UART_LOG:BUART:tx_state_1\ * !\UART_LOG:BUART:tx_state_2\ * 
              \UART_LOG:BUART:tx_counter_dp\ * \UART_LOG:BUART:tx_bitclk\
        );
        Output = \UART_LOG:BUART:tx_state_2\ (fanout=7)

    MacroCell: Name=\UART_LOG:BUART:tx_bitclk\, Mode=(D-Register)
        Total # of inputs        : 4
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\UART_LOG:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        !(
              !\UART_LOG:BUART:tx_state_1\ * !\UART_LOG:BUART:tx_state_0\ * 
              \UART_LOG:BUART:tx_state_2\
            + !\UART_LOG:BUART:tx_bitclk_enable_pre\
        );
        Output = \UART_LOG:BUART:tx_bitclk\ (fanout=4)

    MacroCell: Name=\UART_LOG:BUART:tx_ctrl_mark_last\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\UART_LOG:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \UART_LOG:BUART:tx_ctrl_mark_last\ (fanout=8)

    MacroCell: Name=\UART_LOG:BUART:rx_state_0\, Mode=(T-Register)
        Total # of inputs        : 11
        Total # of product terms : 4
        List of special equations: 
            Clock  = (\UART_LOG:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !Net_2248 * !\UART_LOG:BUART:tx_ctrl_mark_last\ * 
              !\UART_LOG:BUART:rx_state_0\ * 
              \UART_LOG:BUART:rx_bitclk_enable\ * 
              !\UART_LOG:BUART:rx_state_3\ * \UART_LOG:BUART:rx_state_2\ * 
              !\UART_LOG:BUART:pollcount_1\
            + !\UART_LOG:BUART:tx_ctrl_mark_last\ * 
              !\UART_LOG:BUART:rx_state_0\ * 
              \UART_LOG:BUART:rx_bitclk_enable\ * 
              !\UART_LOG:BUART:rx_state_3\ * \UART_LOG:BUART:rx_state_2\ * 
              !\UART_LOG:BUART:pollcount_1\ * !\UART_LOG:BUART:pollcount_0\
            + !\UART_LOG:BUART:tx_ctrl_mark_last\ * 
              \UART_LOG:BUART:rx_state_0\ * !\UART_LOG:BUART:rx_state_3\ * 
              !\UART_LOG:BUART:rx_state_2\ * !\UART_LOG:BUART:rx_count_6\ * 
              !\UART_LOG:BUART:rx_count_5\
            + !\UART_LOG:BUART:tx_ctrl_mark_last\ * 
              \UART_LOG:BUART:rx_state_0\ * !\UART_LOG:BUART:rx_state_3\ * 
              !\UART_LOG:BUART:rx_state_2\ * !\UART_LOG:BUART:rx_count_6\ * 
              !\UART_LOG:BUART:rx_count_4\
        );
        Output = \UART_LOG:BUART:rx_state_0\ (fanout=8)

    MacroCell: Name=\UART_LOG:BUART:rx_load_fifo\, Mode=(D-Register)
        Total # of inputs        : 8
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\UART_LOG:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              !\UART_LOG:BUART:tx_ctrl_mark_last\ * 
              !\UART_LOG:BUART:rx_state_0\ * 
              \UART_LOG:BUART:rx_bitclk_enable\ * \UART_LOG:BUART:rx_state_3\ * 
              !\UART_LOG:BUART:rx_state_2\
            + !\UART_LOG:BUART:tx_ctrl_mark_last\ * 
              \UART_LOG:BUART:rx_state_0\ * !\UART_LOG:BUART:rx_state_3\ * 
              !\UART_LOG:BUART:rx_state_2\ * !\UART_LOG:BUART:rx_count_6\ * 
              !\UART_LOG:BUART:rx_count_5\
            + !\UART_LOG:BUART:tx_ctrl_mark_last\ * 
              \UART_LOG:BUART:rx_state_0\ * !\UART_LOG:BUART:rx_state_3\ * 
              !\UART_LOG:BUART:rx_state_2\ * !\UART_LOG:BUART:rx_count_6\ * 
              !\UART_LOG:BUART:rx_count_4\
        );
        Output = \UART_LOG:BUART:rx_load_fifo\ (fanout=2)

    MacroCell: Name=\UART_LOG:BUART:rx_state_3\, Mode=(T-Register)
        Total # of inputs        : 8
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\UART_LOG:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              !\UART_LOG:BUART:tx_ctrl_mark_last\ * 
              !\UART_LOG:BUART:rx_state_0\ * 
              \UART_LOG:BUART:rx_bitclk_enable\ * \UART_LOG:BUART:rx_state_3\ * 
              \UART_LOG:BUART:rx_state_2\
            + !\UART_LOG:BUART:tx_ctrl_mark_last\ * 
              \UART_LOG:BUART:rx_state_0\ * !\UART_LOG:BUART:rx_state_3\ * 
              !\UART_LOG:BUART:rx_state_2\ * !\UART_LOG:BUART:rx_count_6\ * 
              !\UART_LOG:BUART:rx_count_5\
            + !\UART_LOG:BUART:tx_ctrl_mark_last\ * 
              \UART_LOG:BUART:rx_state_0\ * !\UART_LOG:BUART:rx_state_3\ * 
              !\UART_LOG:BUART:rx_state_2\ * !\UART_LOG:BUART:rx_count_6\ * 
              !\UART_LOG:BUART:rx_count_4\
        );
        Output = \UART_LOG:BUART:rx_state_3\ (fanout=7)

    MacroCell: Name=\UART_LOG:BUART:rx_state_2\, Mode=(T-Register)
        Total # of inputs        : 10
        Total # of product terms : 5
        List of special equations: 
            Clock  = (\UART_LOG:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              !Net_2248 * !\UART_LOG:BUART:tx_ctrl_mark_last\ * 
              !\UART_LOG:BUART:rx_state_0\ * !\UART_LOG:BUART:rx_state_3\ * 
              !\UART_LOG:BUART:rx_state_2\ * \UART_LOG:BUART:rx_last\
            + !\UART_LOG:BUART:tx_ctrl_mark_last\ * 
              !\UART_LOG:BUART:rx_state_0\ * 
              \UART_LOG:BUART:rx_bitclk_enable\ * \UART_LOG:BUART:rx_state_3\
            + !\UART_LOG:BUART:tx_ctrl_mark_last\ * 
              !\UART_LOG:BUART:rx_state_0\ * 
              \UART_LOG:BUART:rx_bitclk_enable\ * \UART_LOG:BUART:rx_state_2\
            + !\UART_LOG:BUART:tx_ctrl_mark_last\ * 
              \UART_LOG:BUART:rx_state_0\ * !\UART_LOG:BUART:rx_state_3\ * 
              !\UART_LOG:BUART:rx_state_2\ * !\UART_LOG:BUART:rx_count_6\ * 
              !\UART_LOG:BUART:rx_count_5\
            + !\UART_LOG:BUART:tx_ctrl_mark_last\ * 
              \UART_LOG:BUART:rx_state_0\ * !\UART_LOG:BUART:rx_state_3\ * 
              !\UART_LOG:BUART:rx_state_2\ * !\UART_LOG:BUART:rx_count_6\ * 
              !\UART_LOG:BUART:rx_count_4\
        );
        Output = \UART_LOG:BUART:rx_state_2\ (fanout=7)

    MacroCell: Name=\UART_LOG:BUART:rx_bitclk_enable\, Mode=(D-Register)
        Total # of inputs        : 3
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\UART_LOG:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\UART_LOG:BUART:rx_count_2\ * !\UART_LOG:BUART:rx_count_1\ * 
              !\UART_LOG:BUART:rx_count_0\
        );
        Output = \UART_LOG:BUART:rx_bitclk_enable\ (fanout=6)

    MacroCell: Name=\UART_LOG:BUART:rx_state_stop1_reg\, Mode=(D-Register)
        Total # of inputs        : 4
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\UART_LOG:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        !(
              !\UART_LOG:BUART:tx_ctrl_mark_last\ * 
              !\UART_LOG:BUART:rx_state_0\ * \UART_LOG:BUART:rx_state_3\ * 
              \UART_LOG:BUART:rx_state_2\
        );
        Output = \UART_LOG:BUART:rx_state_stop1_reg\ (fanout=1)

    MacroCell: Name=\UART_LOG:BUART:pollcount_1\, Mode=(D-Register)
        Total # of inputs        : 5
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\UART_LOG:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              !Net_2248 * !\UART_LOG:BUART:rx_count_2\ * 
              !\UART_LOG:BUART:rx_count_1\ * \UART_LOG:BUART:pollcount_1\
            + Net_2248 * !\UART_LOG:BUART:rx_count_2\ * 
              !\UART_LOG:BUART:rx_count_1\ * !\UART_LOG:BUART:pollcount_1\ * 
              \UART_LOG:BUART:pollcount_0\
            + !\UART_LOG:BUART:rx_count_2\ * !\UART_LOG:BUART:rx_count_1\ * 
              \UART_LOG:BUART:pollcount_1\ * !\UART_LOG:BUART:pollcount_0\
        );
        Output = \UART_LOG:BUART:pollcount_1\ (fanout=4)

    MacroCell: Name=\UART_LOG:BUART:pollcount_0\, Mode=(D-Register)
        Total # of inputs        : 4
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\UART_LOG:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !Net_2248 * !\UART_LOG:BUART:rx_count_2\ * 
              !\UART_LOG:BUART:rx_count_1\ * \UART_LOG:BUART:pollcount_0\
            + Net_2248 * !\UART_LOG:BUART:rx_count_2\ * 
              !\UART_LOG:BUART:rx_count_1\ * !\UART_LOG:BUART:pollcount_0\
        );
        Output = \UART_LOG:BUART:pollcount_0\ (fanout=5)

    MacroCell: Name=\UART_LOG:BUART:rx_status_3\, Mode=(D-Register)
        Total # of inputs        : 8
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\UART_LOG:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !Net_2248 * !\UART_LOG:BUART:tx_ctrl_mark_last\ * 
              !\UART_LOG:BUART:rx_state_0\ * 
              \UART_LOG:BUART:rx_bitclk_enable\ * \UART_LOG:BUART:rx_state_3\ * 
              \UART_LOG:BUART:rx_state_2\ * !\UART_LOG:BUART:pollcount_1\
            + !\UART_LOG:BUART:tx_ctrl_mark_last\ * 
              !\UART_LOG:BUART:rx_state_0\ * 
              \UART_LOG:BUART:rx_bitclk_enable\ * \UART_LOG:BUART:rx_state_3\ * 
              \UART_LOG:BUART:rx_state_2\ * !\UART_LOG:BUART:pollcount_1\ * 
              !\UART_LOG:BUART:pollcount_0\
        );
        Output = \UART_LOG:BUART:rx_status_3\ (fanout=1)

    MacroCell: Name=\UART_LOG:BUART:rx_last\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\UART_LOG:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              Net_2248
        );
        Output = \UART_LOG:BUART:rx_last\ (fanout=1)
    </CYPRESSTAG>
    <CYPRESSTAG name="Datapath listing">

    ------------------------------------------------------------
    Datapath listing
    ------------------------------------------------------------

    datapathcell: Name =\RGB_PWM_green:PWMUDB:sP8:pwmdp:u0\
        PORT MAP (
            clock => Net_2605 ,
            cs_addr_2 => \RGB_PWM_green:PWMUDB:tc_i\ ,
            cs_addr_1 => \RGB_PWM_green:PWMUDB:runmode_enable\ ,
            cl0_comb => \RGB_PWM_green:PWMUDB:cmp1_less\ ,
            z0_comb => \RGB_PWM_green:PWMUDB:tc_i\ );
        Properties:
        {
            a0_init = "00000000"
            a1_init = "00000000"
            ce0_sync = 1
            ce1_sync = 1
            cl0_sync = 1
            cl1_sync = 1
            cmsb_sync = 1
            co_msb_sync = 1
            cy_dpconfig = "0000000001000000000000001100000001000000010000000000000011000000000000001100000000000000110000000000000011000000000000001100000011111111000000001111111111111111101000000000000000000100000000000000000000011000"
            d0_init = "00000000"
            d1_init = "00000000"
            f0_blk_sync = 1
            f0_bus_sync = 1
            f1_blk_sync = 1
            f1_bus_sync = 1
            ff0_sync = 1
            ff1_sync = 1
            ov_msb_sync = 1
            so_sync = 1
            z0_sync = 1
            z1_sync = 1
        }
        Clock Polarity: Active High
        Clock Enable: True

    datapathcell: Name =\UART_LOG:BUART:sTX:TxShifter:u0\
        PORT MAP (
            clock => \UART_LOG:Net_9\ ,
            cs_addr_2 => \UART_LOG:BUART:tx_state_1\ ,
            cs_addr_1 => \UART_LOG:BUART:tx_state_0\ ,
            cs_addr_0 => \UART_LOG:BUART:tx_bitclk_enable_pre\ ,
            so_comb => \UART_LOG:BUART:tx_shift_out\ ,
            f0_bus_stat_comb => \UART_LOG:BUART:tx_fifo_notfull\ ,
            f0_blk_stat_comb => \UART_LOG:BUART:tx_fifo_empty\ );
        Properties:
        {
            a0_init = "00000000"
            a1_init = "00000000"
            ce0_sync = 1
            ce1_sync = 1
            cl0_sync = 1
            cl1_sync = 1
            cmsb_sync = 1
            co_msb_sync = 1
            cy_dpconfig = "0000000000000000000000000000000000000000000000000000000011000000000000000000000000000010010000000000000000000000000000000000000011111111000000001111111111111111000000000000000001000100111100000000000000001100"
            d0_init = "00000000"
            d1_init = "00000000"
            f0_blk_sync = 1
            f0_bus_sync = 1
            f1_blk_sync = 1
            f1_bus_sync = 1
            ff0_sync = 1
            ff1_sync = 1
            ov_msb_sync = 1
            so_sync = 1
            z0_sync = 1
            z1_sync = 1
        }
        Clock Polarity: Active High
        Clock Enable: True

    datapathcell: Name =\UART_LOG:BUART:sTX:sCLOCK:TxBitClkGen\
        PORT MAP (
            clock => \UART_LOG:Net_9\ ,
            cs_addr_0 => \UART_LOG:BUART:counter_load_not\ ,
            ce0_reg => \UART_LOG:BUART:tx_bitclk_enable_pre\ ,
            ce1_reg => \UART_LOG:BUART:tx_counter_dp\ );
        Properties:
        {
            a0_init = "00000000"
            a1_init = "00000000"
            ce0_sync = 1
            ce1_sync = 1
            cl0_sync = 1
            cl1_sync = 1
            cmsb_sync = 1
            co_msb_sync = 1
            cy_dpconfig = "1010100001000000001000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011111111000000001111111100000111001000000100000000000101111100000000000000001000"
            d0_init = "00000000"
            d1_init = "00000000"
            f0_blk_sync = 1
            f0_bus_sync = 1
            f1_blk_sync = 1
            f1_bus_sync = 1
            ff0_sync = 1
            ff1_sync = 1
            ov_msb_sync = 1
            so_sync = 1
            z0_sync = 1
            z1_sync = 1
        }
        Clock Polarity: Active High
        Clock Enable: True

    datapathcell: Name =\UART_LOG:BUART:sRX:RxShifter:u0\
        PORT MAP (
            clock => \UART_LOG:Net_9\ ,
            cs_addr_2 => \UART_LOG:BUART:tx_ctrl_mark_last\ ,
            cs_addr_1 => \UART_LOG:BUART:rx_state_0\ ,
            cs_addr_0 => \UART_LOG:BUART:rx_bitclk_enable\ ,
            route_si => \UART_LOG:BUART:rx_postpoll\ ,
            f0_load => \UART_LOG:BUART:rx_load_fifo\ ,
            f0_bus_stat_comb => \UART_LOG:BUART:rx_fifonotempty\ ,
            f0_blk_stat_comb => \UART_LOG:BUART:rx_fifofull\ );
        Properties:
        {
            a0_init = "00000000"
            a1_init = "00000000"
            ce0_sync = 1
            ce1_sync = 1
            cl0_sync = 1
            cl1_sync = 1
            cmsb_sync = 1
            co_msb_sync = 1
            cy_dpconfig = "0000000000000000000000000000000000000000000000000000001001000000000100000000000000010000001100000001000000000000000100100001000011111111000000001111111111111111101000000110001001000001111100000000000000001100"
            d0_init = "00000000"
            d1_init = "00000000"
            f0_blk_sync = 1
            f0_bus_sync = 1
            f1_blk_sync = 1
            f1_bus_sync = 1
            ff0_sync = 1
            ff1_sync = 1
            ov_msb_sync = 1
            so_sync = 1
            z0_sync = 1
            z1_sync = 1
        }
        Clock Polarity: Active High
        Clock Enable: True
    </CYPRESSTAG>
    <CYPRESSTAG name="Status register listing">

    ------------------------------------------------------------
    Status register listing
    ------------------------------------------------------------

    statuscell: Name =\Joystick_ADC:bSAR_SEQ:EOCSts\
        PORT MAP (
            clock => \Joystick_ADC:clock\ ,
            status_0 => Net_207 ,
            clk_en => \Joystick_ADC:bSAR_SEQ:enable\ );
        Properties:
        {
            cy_force_order = 1
            cy_md_select = "00000001"
        }
        Clock Polarity: Active High
        Clock Enable: PosEdge(\Joystick_ADC:bSAR_SEQ:enable\)
    </CYPRESSTAG>
    <CYPRESSTAG name="StatusI register listing">

    ------------------------------------------------------------
    StatusI register listing
    ------------------------------------------------------------

    statusicell: Name =\UART_LOG:BUART:sTX:TxSts\
        PORT MAP (
            clock => \UART_LOG:Net_9\ ,
            status_3 => \UART_LOG:BUART:tx_fifo_notfull\ ,
            status_2 => \UART_LOG:BUART:tx_status_2\ ,
            status_1 => \UART_LOG:BUART:tx_fifo_empty\ ,
            status_0 => \UART_LOG:BUART:tx_status_0\ );
        Properties:
        {
            cy_force_order = 1
            cy_int_mask = "1111111"
            cy_md_select = "0000001"
        }
        Clock Polarity: Active High
        Clock Enable: True

    statusicell: Name =\UART_LOG:BUART:sRX:RxSts\
        PORT MAP (
            clock => \UART_LOG:Net_9\ ,
            status_5 => \UART_LOG:BUART:rx_status_5\ ,
            status_4 => \UART_LOG:BUART:rx_status_4\ ,
            status_3 => \UART_LOG:BUART:rx_status_3\ );
        Properties:
        {
            cy_force_order = 1
            cy_int_mask = "1111111"
            cy_md_select = "1011111"
        }
        Clock Polarity: Active High
        Clock Enable: True
    </CYPRESSTAG>
    <CYPRESSTAG name="Sync listing">

    ------------------------------------------------------------
    Sync listing
    ------------------------------------------------------------

    synccell: Name =\Joystick_ADC:Sync:genblk1[0]:INST\
        PORT MAP (
            clock => ClockBlock_BUS_CLK ,
            in => \Joystick_ADC:nrq\ ,
            out => \Joystick_ADC:Net_3935\ );
        Clock Polarity: Active High
        Clock Enable: True
    </CYPRESSTAG>
    <CYPRESSTAG name="Control register listing">

    ------------------------------------------------------------
    Control register listing
    ------------------------------------------------------------

    controlcell: Name =\Joystick_ADC:bSAR_SEQ:CtrlReg\
        PORT MAP (
            clock => \Joystick_ADC:clock\ ,
            control_7 => \Joystick_ADC:bSAR_SEQ:control_7\ ,
            control_6 => \Joystick_ADC:bSAR_SEQ:control_6\ ,
            control_5 => \Joystick_ADC:bSAR_SEQ:control_5\ ,
            control_4 => \Joystick_ADC:bSAR_SEQ:control_4\ ,
            control_3 => \Joystick_ADC:bSAR_SEQ:control_3\ ,
            control_2 => \Joystick_ADC:bSAR_SEQ:control_2\ ,
            control_1 => \Joystick_ADC:bSAR_SEQ:load_period\ ,
            control_0 => \Joystick_ADC:bSAR_SEQ:enable\ );
        Properties:
        {
            cy_ctrl_mode_0 = "00000111"
            cy_ctrl_mode_1 = "00000110"
            cy_ext_reset = 0
            cy_force_order = 1
            cy_init_value = "00000000"
        }
        Clock Polarity: Active High
        Clock Enable: True

    controlcell: Name =\RGB_PWM_green:PWMUDB:genblk1:ctrlreg\
        PORT MAP (
            clock => Net_2605 ,
            control_7 => \RGB_PWM_green:PWMUDB:control_7\ ,
            control_6 => \RGB_PWM_green:PWMUDB:control_6\ ,
            control_5 => \RGB_PWM_green:PWMUDB:control_5\ ,
            control_4 => \RGB_PWM_green:PWMUDB:control_4\ ,
            control_3 => \RGB_PWM_green:PWMUDB:control_3\ ,
            control_2 => \RGB_PWM_green:PWMUDB:control_2\ ,
            control_1 => \RGB_PWM_green:PWMUDB:control_1\ ,
            control_0 => \RGB_PWM_green:PWMUDB:control_0\ );
        Properties:
        {
            cy_ctrl_mode_0 = "11111111"
            cy_ctrl_mode_1 = "00000000"
            cy_ext_reset = 0
            cy_force_order = 1
            cy_init_value = "00000000"
        }
        Clock Polarity: Active High
        Clock Enable: True
    </CYPRESSTAG>
    <CYPRESSTAG name="Count7 listing">

    ------------------------------------------------------------
    Count7 listing
    ------------------------------------------------------------

    count7cell: Name =\Joystick_ADC:bSAR_SEQ:ChannelCounter\
        PORT MAP (
            clock => \Joystick_ADC:clock\ ,
            load => \Joystick_ADC:bSAR_SEQ:load_period\ ,
            enable => \Joystick_ADC:bSAR_SEQ:cnt_enable\ ,
            count_6 => \Joystick_ADC:bSAR_SEQ:count_6\ ,
            count_5 => \Joystick_ADC:ch_addr_5\ ,
            count_4 => \Joystick_ADC:ch_addr_4\ ,
            count_3 => \Joystick_ADC:ch_addr_3\ ,
            count_2 => \Joystick_ADC:ch_addr_2\ ,
            count_1 => \Joystick_ADC:ch_addr_1\ ,
            count_0 => \Joystick_ADC:ch_addr_0\ ,
            tc => \Joystick_ADC:bSAR_SEQ:cnt_tc\ ,
            clk_en => \Joystick_ADC:bSAR_SEQ:enable\ );
        Properties:
        {
            cy_alt_mode = 0
            cy_init_value = "0000000"
            cy_period = "0000001"
            cy_route_en = 1
            cy_route_ld = 1
        }
        Clock Polarity: Active High
        Clock Enable: PosEdge(\Joystick_ADC:bSAR_SEQ:enable\)

    count7cell: Name =\UART_LOG:BUART:sRX:RxBitCounter\
        PORT MAP (
            clock => \UART_LOG:Net_9\ ,
            load => \UART_LOG:BUART:rx_counter_load\ ,
            count_6 => \UART_LOG:BUART:rx_count_6\ ,
            count_5 => \UART_LOG:BUART:rx_count_5\ ,
            count_4 => \UART_LOG:BUART:rx_count_4\ ,
            count_3 => \UART_LOG:BUART:rx_count_3\ ,
            count_2 => \UART_LOG:BUART:rx_count_2\ ,
            count_1 => \UART_LOG:BUART:rx_count_1\ ,
            count_0 => \UART_LOG:BUART:rx_count_0\ ,
            tc => \UART_LOG:BUART:rx_count7_tc\ );
        Properties:
        {
            cy_alt_mode = 0
            cy_init_value = "0000000"
            cy_period = "1110010"
            cy_route_en = 1
            cy_route_ld = 1
        }
        Clock Polarity: Active High
        Clock Enable: True
    </CYPRESSTAG>
    <CYPRESSTAG name="DRQ listing">

    ------------------------------------------------------------
    DRQ listing
    ------------------------------------------------------------

    drqcell: Name =\Joystick_ADC:TempBuf\
        PORT MAP (
            dmareq => \Joystick_ADC:Net_3830\ ,
            termin => zero ,
            termout => \Joystick_ADC:Net_3698\ );
        Properties:
        {
            drq_type = "00"
            num_tds = 0
        }

    drqcell: Name =\Joystick_ADC:FinalBuf\
        PORT MAP (
            dmareq => \Joystick_ADC:Net_3698\ ,
            termin => zero ,
            termout => \Joystick_ADC:nrq\ );
        Properties:
        {
            drq_type = "00"
            num_tds = 0
        }
    </CYPRESSTAG>
    <CYPRESSTAG name="Interrupt listing">

    ------------------------------------------------------------
    Interrupt listing
    ------------------------------------------------------------

    interrupt: Name =\Joystick_ADC:IRQ\
        PORT MAP (
            interrupt => Net_207 );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }

    interrupt: Name =isr_button_reset
        PORT MAP (
            interrupt => Net_2257 );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }
    </CYPRESSTAG>
</CYPRESSTAG>
<CYPRESSTAG name="Technology mapping summary" expanded>

------------------------------------------------------------
Technology mapping summary
------------------------------------------------------------

Resource Type                 : Used : Free :  Max :  % Used
============================================================
Digital Clocks                :    3 :    5 :    8 : 37.50 %
Analog Clocks                 :    0 :    4 :    4 :  0.00 %
CapSense Buffers              :    0 :    2 :    2 :  0.00 %
Digital Filter Block          :    0 :    1 :    1 :  0.00 %
Interrupts                    :    2 :   30 :   32 :  6.25 %
IO                            :   10 :   38 :   48 : 20.83 %
Segment LCD                   :    0 :    1 :    1 :  0.00 %
CAN 2.0b                      :    0 :    1 :    1 :  0.00 %
I2C                           :    0 :    1 :    1 :  0.00 %
USB                           :    0 :    1 :    1 :  0.00 %
DMA Channels                  :    2 :   22 :   24 :  8.33 %
Timer                         :    0 :    4 :    4 :  0.00 %
UDB                           :      :      :      :        
  Macrocells                  :  102 :   90 :  192 : 53.13 %
  Unique P-terms              :  134 :  250 :  384 : 34.90 %
  Total P-terms               :  143 :      :      :        
  Datapath Cells              :    4 :   20 :   24 : 16.67 %
  Status Cells                :    6 :   18 :   24 : 25.00 %
    Status Registers          :    1 :      :      :        
    StatusI Registers         :    2 :      :      :        
    Sync Cells (x1)           :    1 :      :      :        
    Routed Count7 Load/Enable :    2 :      :      :        
  Control Cells               :    4 :   20 :   24 : 16.67 %
    Control Registers         :    2 :      :      :        
    Count7 Cells              :    2 :      :      :        
Opamp                         :    0 :    4 :    4 :  0.00 %
Comparator                    :    0 :    4 :    4 :  0.00 %
Delta-Sigma ADC               :    0 :    1 :    1 :  0.00 %
LPF                           :    0 :    2 :    2 :  0.00 %
SAR ADC                       :    1 :    1 :    2 : 50.00 %
Analog (SC/CT) Blocks         :    0 :    4 :    4 :  0.00 %
DAC                           :      :      :      :        
  VIDAC                       :    0 :    4 :    4 :  0.00 %
</CYPRESSTAG>
Technology Mapping: Elapsed time ==> 0s.277ms
Tech Mapping phase: Elapsed time ==> 0s.341ms
</CYPRESSTAG>
<CYPRESSTAG name="Analog Placement">
Info: apr.M0002: Analog signal "Net_136" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_155" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_186" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_164" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_165" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_189" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_168" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_169" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_205" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_172" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_173" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_206" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_113" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_115" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_176" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_118" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_119" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_177" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_122" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_123" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_178" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_126" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_127" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_179" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_130" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_131" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_180" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_135" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_137" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_181" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_140" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_141" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_182" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_144" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_145" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_183" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_148" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_149" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_184" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_152" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_153" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_185" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_157" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_159" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_187" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_162" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_188" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_190" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_191" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_192" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_193" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_194" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_195" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_196" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_197" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_198" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_199" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_200" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_201" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_202" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_203" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_204" is connected to one terminal only. (App=cydsfit)
Initial Analog Placement Results:
IO_0@[IOP=(0)][IoId=(0)] : Joystick_XPos(0) (fixed)
IO_1@[IOP=(0)][IoId=(1)] : Joystick_YPos(0) (fixed)
IO_6@[IOP=(0)][IoId=(6)] : LED_red(0) (fixed)
IO_4@[IOP=(2)][IoId=(4)] : RGB_G(0) (fixed)
IO_6@[IOP=(12)][IoId=(6)] : Rx_port(0) (fixed)
IO_7@[IOP=(12)][IoId=(7)] : Tx_port(0) (fixed)
SAR[1]@[FFB(SAR,1)] : \Joystick_ADC:SAR:ADC_SAR\
Vref[13]@[FFB(Vref,13)] : \Joystick_ADC:SAR:vRef_Vdda_1\
Log: apr.M0058: The analog placement iterative improvement is 35% done. (App=cydsfit)
Log: apr.M0058: The analog placement iterative improvement is 80% done. (App=cydsfit)
Analog Placement Results:
IO_0@[IOP=(0)][IoId=(0)] : Joystick_XPos(0) (fixed)
IO_1@[IOP=(0)][IoId=(1)] : Joystick_YPos(0) (fixed)
IO_6@[IOP=(0)][IoId=(6)] : LED_red(0) (fixed)
IO_4@[IOP=(2)][IoId=(4)] : RGB_G(0) (fixed)
IO_6@[IOP=(12)][IoId=(6)] : Rx_port(0) (fixed)
IO_7@[IOP=(12)][IoId=(7)] : Tx_port(0) (fixed)
SAR[0]@[FFB(SAR,0)] : \Joystick_ADC:SAR:ADC_SAR\
Vref[13]@[FFB(Vref,13)] : \Joystick_ADC:SAR:vRef_Vdda_1\

Analog Placement phase: Elapsed time ==> 1s.650ms
</CYPRESSTAG>
<CYPRESSTAG name="Analog Routing">
Analog Routing phase: Elapsed time ==> 0s.001ms
</CYPRESSTAG>
<CYPRESSTAG name="Analog Code Generation">
============ Analog Final Answer Routes ============
Dump of CyAnalogRoutingResultsDB
Map of net to items {
  Net: \Joystick_ADC:Net_2803\ {
    sar_0_vplus
  }
  Net: Net_13 {
    p0_0
  }
  Net: Net_212 {
    p0_1
  }
  Net: Net_136 {
  }
  Net: Net_155 {
  }
  Net: Net_186 {
  }
  Net: Net_164 {
  }
  Net: Net_165 {
  }
  Net: Net_189 {
  }
  Net: Net_168 {
  }
  Net: Net_169 {
  }
  Net: Net_205 {
  }
  Net: Net_172 {
  }
  Net: Net_173 {
  }
  Net: Net_206 {
  }
  Net: Net_113 {
  }
  Net: Net_115 {
  }
  Net: Net_176 {
  }
  Net: Net_118 {
  }
  Net: Net_119 {
  }
  Net: Net_177 {
  }
  Net: Net_122 {
  }
  Net: Net_123 {
  }
  Net: Net_178 {
  }
  Net: Net_126 {
  }
  Net: Net_127 {
  }
  Net: Net_179 {
  }
  Net: Net_130 {
  }
  Net: Net_131 {
  }
  Net: Net_180 {
  }
  Net: Net_135 {
  }
  Net: Net_137 {
  }
  Net: Net_181 {
  }
  Net: Net_140 {
  }
  Net: Net_141 {
  }
  Net: Net_182 {
  }
  Net: Net_144 {
  }
  Net: Net_145 {
  }
  Net: Net_183 {
  }
  Net: Net_148 {
  }
  Net: Net_149 {
  }
  Net: Net_184 {
  }
  Net: Net_152 {
  }
  Net: Net_153 {
  }
  Net: Net_185 {
  }
  Net: Net_157 {
  }
  Net: Net_159 {
  }
  Net: Net_187 {
  }
  Net: Net_162 {
  }
  Net: Net_188 {
  }
  Net: Net_190 {
  }
  Net: Net_191 {
  }
  Net: Net_192 {
  }
  Net: Net_193 {
  }
  Net: Net_194 {
  }
  Net: Net_195 {
  }
  Net: Net_196 {
  }
  Net: Net_197 {
  }
  Net: Net_198 {
  }
  Net: Net_199 {
  }
  Net: Net_200 {
  }
  Net: Net_201 {
  }
  Net: Net_202 {
  }
  Net: Net_203 {
  }
  Net: Net_204 {
  }
  Net: \Joystick_ADC:SAR:Net_126\ {
    sar_0_vrefhi
    sar_0_vminus_x_sar_0_vrefhi
    sar_0_vminus
  }
  Net: \Joystick_ADC:SAR:Net_209\ {
  }
  Net: \Joystick_ADC:SAR:Net_235\ {
    common_sar_vref_vdda/2
    common_sar_vref_vdda/2_x_sar_0_vref_vdda_vdda_2
    sar_0_vref_vdda_vdda_2
    sar_0_vref_x_sar_0_vref_vdda_vdda_2
    sar_0_vref
  }
  Net: AmuxNet::\Joystick_ADC:AMuxHw_2\ {
    sar_0_vplus
    agl4_x_sar_0_vplus
    agl4
    agl4_x_p0_0
    agl5_x_sar_0_vplus
    agl5
    agl5_x_p0_1
    p0_0
    p0_1
  }
}
Map of item to net {
  sar_0_vrefhi                                     -> \Joystick_ADC:SAR:Net_126\
  sar_0_vminus_x_sar_0_vrefhi                      -> \Joystick_ADC:SAR:Net_126\
  sar_0_vminus                                     -> \Joystick_ADC:SAR:Net_126\
  common_sar_vref_vdda/2                           -> \Joystick_ADC:SAR:Net_235\
  common_sar_vref_vdda/2_x_sar_0_vref_vdda_vdda_2  -> \Joystick_ADC:SAR:Net_235\
  sar_0_vref_vdda_vdda_2                           -> \Joystick_ADC:SAR:Net_235\
  sar_0_vref_x_sar_0_vref_vdda_vdda_2              -> \Joystick_ADC:SAR:Net_235\
  sar_0_vref                                       -> \Joystick_ADC:SAR:Net_235\
  sar_0_vplus                                      -> \Joystick_ADC:Net_2803\
  p0_0                                             -> Net_13
  p0_1                                             -> Net_212
  agl4_x_sar_0_vplus                               -> AmuxNet::\Joystick_ADC:AMuxHw_2\
  agl4                                             -> AmuxNet::\Joystick_ADC:AMuxHw_2\
  agl4_x_p0_0                                      -> AmuxNet::\Joystick_ADC:AMuxHw_2\
  agl5_x_sar_0_vplus                               -> AmuxNet::\Joystick_ADC:AMuxHw_2\
  agl5                                             -> AmuxNet::\Joystick_ADC:AMuxHw_2\
  agl5_x_p0_1                                      -> AmuxNet::\Joystick_ADC:AMuxHw_2\
}
Mux Info {
  Mux: \Joystick_ADC:AMuxHw_2\ {
     Mouth: \Joystick_ADC:Net_2803\
     Guts:  AmuxNet::\Joystick_ADC:AMuxHw_2\
     IsSingleSwitching: False
     IsStaticSwitching: True
     IsAtMostOneSwitch: True
    Arm: 0 {
      Net:   Net_13
      Outer: agl4_x_p0_0
      Inner: agl4_x_sar_0_vplus
      Path {
        p0_0
        agl4_x_p0_0
        agl4
        agl4_x_sar_0_vplus
        sar_0_vplus
      }
    }
    Arm: 1 {
      Net:   Net_212
      Outer: agl5_x_p0_1
      Inner: agl5_x_sar_0_vplus
      Path {
        p0_1
        agl5_x_p0_1
        agl5
        agl5_x_sar_0_vplus
        sar_0_vplus
      }
    }
    Arm: 2 {
      Net:   Net_136
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 3 {
      Net:   Net_155
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 4 {
      Net:   Net_186
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 5 {
      Net:   Net_164
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 6 {
      Net:   Net_165
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 7 {
      Net:   Net_189
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 8 {
      Net:   Net_168
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 9 {
      Net:   Net_169
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 10 {
      Net:   Net_205
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 11 {
      Net:   Net_172
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 12 {
      Net:   Net_173
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 13 {
      Net:   Net_206
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 14 {
      Net:   Net_113
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 15 {
      Net:   Net_115
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 16 {
      Net:   Net_176
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 17 {
      Net:   Net_118
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 18 {
      Net:   Net_119
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 19 {
      Net:   Net_177
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 20 {
      Net:   Net_122
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 21 {
      Net:   Net_123
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 22 {
      Net:   Net_178
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 23 {
      Net:   Net_126
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 24 {
      Net:   Net_127
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 25 {
      Net:   Net_179
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 26 {
      Net:   Net_130
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 27 {
      Net:   Net_131
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 28 {
      Net:   Net_180
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 29 {
      Net:   Net_135
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 30 {
      Net:   Net_137
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 31 {
      Net:   Net_181
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 32 {
      Net:   Net_140
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 33 {
      Net:   Net_141
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 34 {
      Net:   Net_182
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 35 {
      Net:   Net_144
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 36 {
      Net:   Net_145
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 37 {
      Net:   Net_183
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 38 {
      Net:   Net_148
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 39 {
      Net:   Net_149
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 40 {
      Net:   Net_184
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 41 {
      Net:   Net_152
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 42 {
      Net:   Net_153
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 43 {
      Net:   Net_185
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 44 {
      Net:   Net_157
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 45 {
      Net:   Net_159
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 46 {
      Net:   Net_187
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 47 {
      Net:   Net_162
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 48 {
      Net:   Net_188
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 49 {
      Net:   Net_190
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 50 {
      Net:   Net_191
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 51 {
      Net:   Net_192
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 52 {
      Net:   Net_193
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 53 {
      Net:   Net_194
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 54 {
      Net:   Net_195
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 55 {
      Net:   Net_196
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 56 {
      Net:   Net_197
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 57 {
      Net:   Net_198
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 58 {
      Net:   Net_199
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 59 {
      Net:   Net_200
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 60 {
      Net:   Net_201
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 61 {
      Net:   Net_202
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 62 {
      Net:   Net_203
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 63 {
      Net:   Net_204
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
  }
}
Dump of CyP35AnalogRoutingResultsDB
IsVddaHalfUsedForComp = False
IsVddaHalfUsedForSar0 = True
IsVddaHalfUsedForSar1 = False
Analog Code Generation phase: Elapsed time ==> 0s.322ms
</CYPRESSTAG>
<CYPRESSTAG name="Digital Placement">
<CYPRESSTAG name="Detailed placement messages">
I2076: Total run-time: 4.0 sec.

</CYPRESSTAG>
<CYPRESSTAG name="PLD Packing">
<CYPRESSTAG name="PLD Packing Summary" expanded>

------------------------------------------------------------
PLD Packing Summary
------------------------------------------------------------
            Resource Type : Used : Free :  Max :  % Used
    ====================================================
                     PLDs :   32 :   16 :   48 :  66.67%

<CYPRESSTAG name="PLD Statistics">

        PLD Resource Type :     Average/LAB
    =======================================
                   Inputs :            7.91
                   Pterms :            4.34
               Macrocells :            3.19
</CYPRESSTAG>
<CYPRESSTAG name="Packed PLD Contents">
Packed PLD Contents not displayed at this verbose level.</CYPRESSTAG>
</CYPRESSTAG>
PLD Packing: Elapsed time ==> 0s.002ms
</CYPRESSTAG>
<CYPRESSTAG name="Partitioning">
<CYPRESSTAG name="Initial Partitioning Summary">
Initial Partitioning Summary not displayed at this verbose level.</CYPRESSTAG>
<CYPRESSTAG name="Final Partitioning Summary">
Final Partitioning Summary not displayed at this verbose level.</CYPRESSTAG>
Partitioning: Elapsed time ==> 0s.055ms
</CYPRESSTAG>
<CYPRESSTAG name="Final Placement Summary">

------------------------------------------------------------
Final Placement Summary
------------------------------------------------------------

       Resource Type :      Count : Avg Inputs : Avg Outputs
    ========================================================
                 UDB :         16 :      10.94 :       6.38
<CYPRESSTAG name="Final Placement Details">
<CYPRESSTAG name="Component Details">

------------------------------------------------------------
Component Placement Details
------------------------------------------------------------
UDB [UDB=(0,0)] contents:
LAB@[UDB=(0,0)][LB=0] #macrocells=4, #inputs=11, #pterms=8
{
    [McSlotId=0]:     MacroCell: Name=\UART_LOG:BUART:rx_state_0\, Mode=(T-Register) @ [UDB=(0,0)][LB=0][MC=0]
        Total # of inputs        : 11
        Total # of product terms : 4
        List of special equations: 
            Clock  = (\UART_LOG:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !Net_2248 * !\UART_LOG:BUART:tx_ctrl_mark_last\ * 
              !\UART_LOG:BUART:rx_state_0\ * 
              \UART_LOG:BUART:rx_bitclk_enable\ * 
              !\UART_LOG:BUART:rx_state_3\ * \UART_LOG:BUART:rx_state_2\ * 
              !\UART_LOG:BUART:pollcount_1\
            + !\UART_LOG:BUART:tx_ctrl_mark_last\ * 
              !\UART_LOG:BUART:rx_state_0\ * 
              \UART_LOG:BUART:rx_bitclk_enable\ * 
              !\UART_LOG:BUART:rx_state_3\ * \UART_LOG:BUART:rx_state_2\ * 
              !\UART_LOG:BUART:pollcount_1\ * !\UART_LOG:BUART:pollcount_0\
            + !\UART_LOG:BUART:tx_ctrl_mark_last\ * 
              \UART_LOG:BUART:rx_state_0\ * !\UART_LOG:BUART:rx_state_3\ * 
              !\UART_LOG:BUART:rx_state_2\ * !\UART_LOG:BUART:rx_count_6\ * 
              !\UART_LOG:BUART:rx_count_5\
            + !\UART_LOG:BUART:tx_ctrl_mark_last\ * 
              \UART_LOG:BUART:rx_state_0\ * !\UART_LOG:BUART:rx_state_3\ * 
              !\UART_LOG:BUART:rx_state_2\ * !\UART_LOG:BUART:rx_count_6\ * 
              !\UART_LOG:BUART:rx_count_4\
        );
        Output = \UART_LOG:BUART:rx_state_0\ (fanout=8)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\UART_LOG:BUART:rx_load_fifo\, Mode=(D-Register) @ [UDB=(0,0)][LB=0][MC=1]
        Total # of inputs        : 8
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\UART_LOG:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              !\UART_LOG:BUART:tx_ctrl_mark_last\ * 
              !\UART_LOG:BUART:rx_state_0\ * 
              \UART_LOG:BUART:rx_bitclk_enable\ * \UART_LOG:BUART:rx_state_3\ * 
              !\UART_LOG:BUART:rx_state_2\
            + !\UART_LOG:BUART:tx_ctrl_mark_last\ * 
              \UART_LOG:BUART:rx_state_0\ * !\UART_LOG:BUART:rx_state_3\ * 
              !\UART_LOG:BUART:rx_state_2\ * !\UART_LOG:BUART:rx_count_6\ * 
              !\UART_LOG:BUART:rx_count_5\
            + !\UART_LOG:BUART:tx_ctrl_mark_last\ * 
              \UART_LOG:BUART:rx_state_0\ * !\UART_LOG:BUART:rx_state_3\ * 
              !\UART_LOG:BUART:rx_state_2\ * !\UART_LOG:BUART:rx_count_6\ * 
              !\UART_LOG:BUART:rx_count_4\
        );
        Output = \UART_LOG:BUART:rx_load_fifo\ (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\UART_LOG:BUART:rx_state_3\, Mode=(T-Register) @ [UDB=(0,0)][LB=0][MC=2]
        Total # of inputs        : 8
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\UART_LOG:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              !\UART_LOG:BUART:tx_ctrl_mark_last\ * 
              !\UART_LOG:BUART:rx_state_0\ * 
              \UART_LOG:BUART:rx_bitclk_enable\ * \UART_LOG:BUART:rx_state_3\ * 
              \UART_LOG:BUART:rx_state_2\
            + !\UART_LOG:BUART:tx_ctrl_mark_last\ * 
              \UART_LOG:BUART:rx_state_0\ * !\UART_LOG:BUART:rx_state_3\ * 
              !\UART_LOG:BUART:rx_state_2\ * !\UART_LOG:BUART:rx_count_6\ * 
              !\UART_LOG:BUART:rx_count_5\
            + !\UART_LOG:BUART:tx_ctrl_mark_last\ * 
              \UART_LOG:BUART:rx_state_0\ * !\UART_LOG:BUART:rx_state_3\ * 
              !\UART_LOG:BUART:rx_state_2\ * !\UART_LOG:BUART:rx_count_6\ * 
              !\UART_LOG:BUART:rx_count_4\
        );
        Output = \UART_LOG:BUART:rx_state_3\ (fanout=7)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\UART_LOG:BUART:rx_status_3\, Mode=(D-Register) @ [UDB=(0,0)][LB=0][MC=3]
        Total # of inputs        : 8
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\UART_LOG:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !Net_2248 * !\UART_LOG:BUART:tx_ctrl_mark_last\ * 
              !\UART_LOG:BUART:rx_state_0\ * 
              \UART_LOG:BUART:rx_bitclk_enable\ * \UART_LOG:BUART:rx_state_3\ * 
              \UART_LOG:BUART:rx_state_2\ * !\UART_LOG:BUART:pollcount_1\
            + !\UART_LOG:BUART:tx_ctrl_mark_last\ * 
              !\UART_LOG:BUART:rx_state_0\ * 
              \UART_LOG:BUART:rx_bitclk_enable\ * \UART_LOG:BUART:rx_state_3\ * 
              \UART_LOG:BUART:rx_state_2\ * !\UART_LOG:BUART:pollcount_1\ * 
              !\UART_LOG:BUART:pollcount_0\
        );
        Output = \UART_LOG:BUART:rx_status_3\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(0,0)][LB=1] #macrocells=4, #inputs=6, #pterms=8
{
    [McSlotId=0]:     MacroCell: Name=\UART_LOG:BUART:rx_bitclk_enable\, Mode=(D-Register) @ [UDB=(0,0)][LB=1][MC=0]
        Total # of inputs        : 3
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\UART_LOG:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\UART_LOG:BUART:rx_count_2\ * !\UART_LOG:BUART:rx_count_1\ * 
              !\UART_LOG:BUART:rx_count_0\
        );
        Output = \UART_LOG:BUART:rx_bitclk_enable\ (fanout=6)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\UART_LOG:BUART:pollcount_0\, Mode=(D-Register) @ [UDB=(0,0)][LB=1][MC=1]
        Total # of inputs        : 4
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\UART_LOG:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !Net_2248 * !\UART_LOG:BUART:rx_count_2\ * 
              !\UART_LOG:BUART:rx_count_1\ * \UART_LOG:BUART:pollcount_0\
            + Net_2248 * !\UART_LOG:BUART:rx_count_2\ * 
              !\UART_LOG:BUART:rx_count_1\ * !\UART_LOG:BUART:pollcount_0\
        );
        Output = \UART_LOG:BUART:pollcount_0\ (fanout=5)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\UART_LOG:BUART:pollcount_1\, Mode=(D-Register) @ [UDB=(0,0)][LB=1][MC=2]
        Total # of inputs        : 5
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\UART_LOG:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              !Net_2248 * !\UART_LOG:BUART:rx_count_2\ * 
              !\UART_LOG:BUART:rx_count_1\ * \UART_LOG:BUART:pollcount_1\
            + Net_2248 * !\UART_LOG:BUART:rx_count_2\ * 
              !\UART_LOG:BUART:rx_count_1\ * !\UART_LOG:BUART:pollcount_1\ * 
              \UART_LOG:BUART:pollcount_0\
            + !\UART_LOG:BUART:rx_count_2\ * !\UART_LOG:BUART:rx_count_1\ * 
              \UART_LOG:BUART:pollcount_1\ * !\UART_LOG:BUART:pollcount_0\
        );
        Output = \UART_LOG:BUART:pollcount_1\ (fanout=4)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\UART_LOG:BUART:rx_postpoll\, Mode=(Combinatorial) @ [UDB=(0,0)][LB=1][MC=3]
        Total # of inputs        : 3
        Total # of product terms : 2
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              Net_2248 * \UART_LOG:BUART:pollcount_0\
            + \UART_LOG:BUART:pollcount_1\
        );
        Output = \UART_LOG:BUART:rx_postpoll\ (fanout=1)
        Properties               : 
        {
        }
}

datapathcell: Name =\UART_LOG:BUART:sRX:RxShifter:u0\
    PORT MAP (
        clock => \UART_LOG:Net_9\ ,
        cs_addr_2 => \UART_LOG:BUART:tx_ctrl_mark_last\ ,
        cs_addr_1 => \UART_LOG:BUART:rx_state_0\ ,
        cs_addr_0 => \UART_LOG:BUART:rx_bitclk_enable\ ,
        route_si => \UART_LOG:BUART:rx_postpoll\ ,
        f0_load => \UART_LOG:BUART:rx_load_fifo\ ,
        f0_bus_stat_comb => \UART_LOG:BUART:rx_fifonotempty\ ,
        f0_blk_stat_comb => \UART_LOG:BUART:rx_fifofull\ );
    Properties:
    {
        a0_init = "00000000"
        a1_init = "00000000"
        ce0_sync = 1
        ce1_sync = 1
        cl0_sync = 1
        cl1_sync = 1
        cmsb_sync = 1
        co_msb_sync = 1
        cy_dpconfig = "0000000000000000000000000000000000000000000000000000001001000000000100000000000000010000001100000001000000000000000100100001000011111111000000001111111111111111101000000110001001000001111100000000000000001100"
        d0_init = "00000000"
        d1_init = "00000000"
        f0_blk_sync = 1
        f0_bus_sync = 1
        f1_blk_sync = 1
        f1_bus_sync = 1
        ff0_sync = 1
        ff1_sync = 1
        ov_msb_sync = 1
        so_sync = 1
        z0_sync = 1
        z1_sync = 1
    }
    Clock Polarity: Active High
    Clock Enable: True

count7cell: Name =\UART_LOG:BUART:sRX:RxBitCounter\
    PORT MAP (
        clock => \UART_LOG:Net_9\ ,
        load => \UART_LOG:BUART:rx_counter_load\ ,
        count_6 => \UART_LOG:BUART:rx_count_6\ ,
        count_5 => \UART_LOG:BUART:rx_count_5\ ,
        count_4 => \UART_LOG:BUART:rx_count_4\ ,
        count_3 => \UART_LOG:BUART:rx_count_3\ ,
        count_2 => \UART_LOG:BUART:rx_count_2\ ,
        count_1 => \UART_LOG:BUART:rx_count_1\ ,
        count_0 => \UART_LOG:BUART:rx_count_0\ ,
        tc => \UART_LOG:BUART:rx_count7_tc\ );
    Properties:
    {
        cy_alt_mode = 0
        cy_init_value = "0000000"
        cy_period = "1110010"
        cy_route_en = 1
        cy_route_ld = 1
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(0,1)] contents:
LAB@[UDB=(0,1)][LB=0] #macrocells=4, #inputs=9, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_38\, Mode=(D-Register) @ [UDB=(0,1)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_38\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_33\, Mode=(D-Register) @ [UDB=(0,1)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_33\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_54\, Mode=(D-Register) @ [UDB=(0,1)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_54\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\UART_LOG:BUART:rx_status_5\, Mode=(Combinatorial) @ [UDB=(0,1)][LB=0][MC=3]
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \UART_LOG:BUART:rx_fifonotempty\ * 
              \UART_LOG:BUART:rx_state_stop1_reg\
        );
        Output = \UART_LOG:BUART:rx_status_5\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(0,1)][LB=1] #macrocells=4, #inputs=12, #pterms=8
{
    [McSlotId=0]:     MacroCell: Name=\UART_LOG:BUART:rx_state_2\, Mode=(T-Register) @ [UDB=(0,1)][LB=1][MC=0]
        Total # of inputs        : 10
        Total # of product terms : 5
        List of special equations: 
            Clock  = (\UART_LOG:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              !Net_2248 * !\UART_LOG:BUART:tx_ctrl_mark_last\ * 
              !\UART_LOG:BUART:rx_state_0\ * !\UART_LOG:BUART:rx_state_3\ * 
              !\UART_LOG:BUART:rx_state_2\ * \UART_LOG:BUART:rx_last\
            + !\UART_LOG:BUART:tx_ctrl_mark_last\ * 
              !\UART_LOG:BUART:rx_state_0\ * 
              \UART_LOG:BUART:rx_bitclk_enable\ * \UART_LOG:BUART:rx_state_3\
            + !\UART_LOG:BUART:tx_ctrl_mark_last\ * 
              !\UART_LOG:BUART:rx_state_0\ * 
              \UART_LOG:BUART:rx_bitclk_enable\ * \UART_LOG:BUART:rx_state_2\
            + !\UART_LOG:BUART:tx_ctrl_mark_last\ * 
              \UART_LOG:BUART:rx_state_0\ * !\UART_LOG:BUART:rx_state_3\ * 
              !\UART_LOG:BUART:rx_state_2\ * !\UART_LOG:BUART:rx_count_6\ * 
              !\UART_LOG:BUART:rx_count_5\
            + !\UART_LOG:BUART:tx_ctrl_mark_last\ * 
              \UART_LOG:BUART:rx_state_0\ * !\UART_LOG:BUART:rx_state_3\ * 
              !\UART_LOG:BUART:rx_state_2\ * !\UART_LOG:BUART:rx_count_6\ * 
              !\UART_LOG:BUART:rx_count_4\
        );
        Output = \UART_LOG:BUART:rx_state_2\ (fanout=7)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\UART_LOG:BUART:rx_status_4\, Mode=(Combinatorial) @ [UDB=(0,1)][LB=1][MC=1]
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \UART_LOG:BUART:rx_load_fifo\ * \UART_LOG:BUART:rx_fifofull\
        );
        Output = \UART_LOG:BUART:rx_status_4\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\UART_LOG:BUART:rx_state_stop1_reg\, Mode=(D-Register) @ [UDB=(0,1)][LB=1][MC=2]
        Total # of inputs        : 4
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\UART_LOG:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        !(
              !\UART_LOG:BUART:tx_ctrl_mark_last\ * 
              !\UART_LOG:BUART:rx_state_0\ * \UART_LOG:BUART:rx_state_3\ * 
              \UART_LOG:BUART:rx_state_2\
        );
        Output = \UART_LOG:BUART:rx_state_stop1_reg\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\UART_LOG:BUART:rx_last\, Mode=(D-Register) @ [UDB=(0,1)][LB=1][MC=3]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\UART_LOG:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              Net_2248
        );
        Output = \UART_LOG:BUART:rx_last\ (fanout=1)
        Properties               : 
        {
        }
}

statusicell: Name =\UART_LOG:BUART:sRX:RxSts\
    PORT MAP (
        clock => \UART_LOG:Net_9\ ,
        status_5 => \UART_LOG:BUART:rx_status_5\ ,
        status_4 => \UART_LOG:BUART:rx_status_4\ ,
        status_3 => \UART_LOG:BUART:rx_status_3\ );
    Properties:
    {
        cy_force_order = 1
        cy_int_mask = "1111111"
        cy_md_select = "1011111"
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(0,2)] contents:
LAB@[UDB=(0,2)][LB=0] #macrocells=2, #inputs=7, #pterms=3
{
    [McSlotId=0]:     MacroCell: Name=\Joystick_ADC:bSAR_SEQ:bus_clk_nrq_reg\, Mode=(D-Register) @ [UDB=(0,2)][LB=0][MC=0]
        Total # of inputs        : 3
        Total # of product terms : 2
        List of special equations: 
            Clock  = (ClockBlock_BUS_CLK) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              \Joystick_ADC:bSAR_SEQ:bus_clk_nrq_reg\ * !Net_207
            + \Joystick_ADC:Net_3935\
        );
        Output = \Joystick_ADC:bSAR_SEQ:bus_clk_nrq_reg\ (fanout=3)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\UART_LOG:BUART:rx_counter_load\, Mode=(Combinatorial) @ [UDB=(0,2)][LB=0][MC=1]
        Total # of inputs        : 4
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\UART_LOG:BUART:tx_ctrl_mark_last\ * 
              !\UART_LOG:BUART:rx_state_0\ * !\UART_LOG:BUART:rx_state_3\ * 
              !\UART_LOG:BUART:rx_state_2\
        );
        Output = \UART_LOG:BUART:rx_counter_load\ (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

LAB@[UDB=(0,2)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_53\, Mode=(D-Register) @ [UDB=(0,2)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_53\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_32\, Mode=(D-Register) @ [UDB=(0,2)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_32\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_27\, Mode=(D-Register) @ [UDB=(0,2)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_27\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_3\, Mode=(D-Register) @ [UDB=(0,2)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_3\ (fanout=1)
        Properties               : 
        {
        }
}

synccell: Name =\Joystick_ADC:Sync:genblk1[0]:INST\
    PORT MAP (
        clock => ClockBlock_BUS_CLK ,
        in => \Joystick_ADC:nrq\ ,
        out => \Joystick_ADC:Net_3935\ );
    Properties:
    {
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(0,3)] contents:
LAB@[UDB=(0,3)][LB=0] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_4\, Mode=(D-Register) @ [UDB=(0,3)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_4\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_62\, Mode=(D-Register) @ [UDB=(0,3)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_62\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_5\, Mode=(D-Register) @ [UDB=(0,3)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_5\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_59\, Mode=(D-Register) @ [UDB=(0,3)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_59\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(0,3)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_24\, Mode=(D-Register) @ [UDB=(0,3)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_24\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_21\, Mode=(D-Register) @ [UDB=(0,3)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_21\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_44\, Mode=(D-Register) @ [UDB=(0,3)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_44\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_63\, Mode=(D-Register) @ [UDB=(0,3)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_63\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(0,4)] contents:
LAB@[UDB=(0,4)][LB=0] #macrocells=2, #inputs=3, #pterms=2
{
    [McSlotId=0]:     MacroCell: Name=Net_481, Mode=(D-Register) @ [UDB=(0,4)][LB=0][MC=0]
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_2605) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \RGB_PWM_green:PWMUDB:runmode_enable\ * 
              \RGB_PWM_green:PWMUDB:cmp1_less\
        );
        Output = Net_481 (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\RGB_PWM_green:PWMUDB:runmode_enable\, Mode=(D-Register) @ [UDB=(0,4)][LB=0][MC=1]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_2605) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \RGB_PWM_green:PWMUDB:control_7\
        );
        Output = \RGB_PWM_green:PWMUDB:runmode_enable\ (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

LAB@[UDB=(0,4)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_52\, Mode=(D-Register) @ [UDB=(0,4)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_52\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_49\, Mode=(D-Register) @ [UDB=(0,4)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_49\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_20\, Mode=(D-Register) @ [UDB=(0,4)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_20\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_57\, Mode=(D-Register) @ [UDB=(0,4)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_57\ (fanout=1)
        Properties               : 
        {
        }
}

datapathcell: Name =\RGB_PWM_green:PWMUDB:sP8:pwmdp:u0\
    PORT MAP (
        clock => Net_2605 ,
        cs_addr_2 => \RGB_PWM_green:PWMUDB:tc_i\ ,
        cs_addr_1 => \RGB_PWM_green:PWMUDB:runmode_enable\ ,
        cl0_comb => \RGB_PWM_green:PWMUDB:cmp1_less\ ,
        z0_comb => \RGB_PWM_green:PWMUDB:tc_i\ );
    Properties:
    {
        a0_init = "00000000"
        a1_init = "00000000"
        ce0_sync = 1
        ce1_sync = 1
        cl0_sync = 1
        cl1_sync = 1
        cmsb_sync = 1
        co_msb_sync = 1
        cy_dpconfig = "0000000001000000000000001100000001000000010000000000000011000000000000001100000000000000110000000000000011000000000000001100000011111111000000001111111111111111101000000000000000000100000000000000000000011000"
        d0_init = "00000000"
        d1_init = "00000000"
        f0_blk_sync = 1
        f0_bus_sync = 1
        f1_blk_sync = 1
        f1_bus_sync = 1
        ff0_sync = 1
        ff1_sync = 1
        ov_msb_sync = 1
        so_sync = 1
        z0_sync = 1
        z1_sync = 1
    }
    Clock Polarity: Active High
    Clock Enable: True

controlcell: Name =\RGB_PWM_green:PWMUDB:genblk1:ctrlreg\
    PORT MAP (
        clock => Net_2605 ,
        control_7 => \RGB_PWM_green:PWMUDB:control_7\ ,
        control_6 => \RGB_PWM_green:PWMUDB:control_6\ ,
        control_5 => \RGB_PWM_green:PWMUDB:control_5\ ,
        control_4 => \RGB_PWM_green:PWMUDB:control_4\ ,
        control_3 => \RGB_PWM_green:PWMUDB:control_3\ ,
        control_2 => \RGB_PWM_green:PWMUDB:control_2\ ,
        control_1 => \RGB_PWM_green:PWMUDB:control_1\ ,
        control_0 => \RGB_PWM_green:PWMUDB:control_0\ );
    Properties:
    {
        cy_ctrl_mode_0 = "11111111"
        cy_ctrl_mode_1 = "00000000"
        cy_ext_reset = 0
        cy_force_order = 1
        cy_init_value = "00000000"
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(0,5)] contents:
LAB@[UDB=(0,5)][LB=0] #macrocells=2, #inputs=7, #pterms=2
{
    [McSlotId=0]: (empty)
    [McSlotId=1]: (empty)
    [McSlotId=2]:     MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_36\, Mode=(D-Register) @ [UDB=(0,5)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_36\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_11\, Mode=(D-Register) @ [UDB=(0,5)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_11\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(0,5)][LB=1] #macrocells=1, #inputs=7, #pterms=1
{
    [McSlotId=0]: (empty)
    [McSlotId=1]: (empty)
    [McSlotId=2]:     MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_30\, Mode=(D-Register) @ [UDB=(0,5)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_30\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]: (empty)
}

UDB [UDB=(1,0)] contents:
LAB@[UDB=(1,0)][LB=0] #macrocells=3, #inputs=7, #pterms=3
{
    [McSlotId=0]:     MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_23\, Mode=(D-Register) @ [UDB=(1,0)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_23\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_29\, Mode=(D-Register) @ [UDB=(1,0)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_29\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_48\, Mode=(D-Register) @ [UDB=(1,0)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_48\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]: (empty)
}

LAB@[UDB=(1,0)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_14\, Mode=(D-Register) @ [UDB=(1,0)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_14\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_58\, Mode=(D-Register) @ [UDB=(1,0)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_58\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_45\, Mode=(D-Register) @ [UDB=(1,0)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_45\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_7\, Mode=(D-Register) @ [UDB=(1,0)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_7\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(1,1)] contents:
LAB@[UDB=(1,1)][LB=0] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_50\, Mode=(D-Register) @ [UDB=(1,1)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_50\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_28\, Mode=(D-Register) @ [UDB=(1,1)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_28\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_47\, Mode=(D-Register) @ [UDB=(1,1)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_47\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_37\, Mode=(D-Register) @ [UDB=(1,1)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_37\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(1,1)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_51\, Mode=(D-Register) @ [UDB=(1,1)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_51\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_8\, Mode=(D-Register) @ [UDB=(1,1)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_8\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_12\, Mode=(D-Register) @ [UDB=(1,1)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_12\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_16\, Mode=(D-Register) @ [UDB=(1,1)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_16\ (fanout=1)
        Properties               : 
        {
        }
}

statuscell: Name =\Joystick_ADC:bSAR_SEQ:EOCSts\
    PORT MAP (
        clock => \Joystick_ADC:clock\ ,
        status_0 => Net_207 ,
        clk_en => \Joystick_ADC:bSAR_SEQ:enable\ );
    Properties:
    {
        cy_force_order = 1
        cy_md_select = "00000001"
    }
    Clock Polarity: Active High
    Clock Enable: PosEdge(\Joystick_ADC:bSAR_SEQ:enable\)

UDB [UDB=(1,2)] contents:
LAB@[UDB=(1,2)][LB=0] #macrocells=4, #inputs=8, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_61\, Mode=(D-Register) @ [UDB=(1,2)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_61\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_2\, Mode=(D-Register) @ [UDB=(1,2)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_2\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_46\, Mode=(D-Register) @ [UDB=(1,2)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_46\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=Net_2252, Mode=(Combinatorial) @ [UDB=(1,2)][LB=0][MC=3]
        Total # of inputs        : 1
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\UART_LOG:BUART:txn\
        );
        Output = Net_2252 (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(1,2)][LB=1] #macrocells=3, #inputs=4, #pterms=3
{
    [McSlotId=0]:     MacroCell: Name=Net_207, Mode=(D-Register) @ [UDB=(1,2)][LB=1][MC=0]
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: PosEdge(\Joystick_ADC:bSAR_SEQ:enable\)
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:bSAR_SEQ:bus_clk_nrq_reg\ * 
              !\Joystick_ADC:bSAR_SEQ:nrq_reg\
        );
        Output = Net_207 (fanout=3)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\Joystick_ADC:bSAR_SEQ:nrq_reg\, Mode=(D-Register) @ [UDB=(1,2)][LB=1][MC=1]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: PosEdge(\Joystick_ADC:bSAR_SEQ:enable\)
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:bSAR_SEQ:bus_clk_nrq_reg\
        );
        Output = \Joystick_ADC:bSAR_SEQ:nrq_reg\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]:     MacroCell: Name=\Joystick_ADC:bSAR_SEQ:cnt_enable\, Mode=(Combinatorial) @ [UDB=(1,2)][LB=1][MC=3]
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        !(
              !Net_208 * !\Joystick_ADC:bSAR_SEQ:load_period\
        );
        Output = \Joystick_ADC:bSAR_SEQ:cnt_enable\ (fanout=2)
        Properties               : 
        {
        }
}

controlcell: Name =\Joystick_ADC:bSAR_SEQ:CtrlReg\
    PORT MAP (
        clock => \Joystick_ADC:clock\ ,
        control_7 => \Joystick_ADC:bSAR_SEQ:control_7\ ,
        control_6 => \Joystick_ADC:bSAR_SEQ:control_6\ ,
        control_5 => \Joystick_ADC:bSAR_SEQ:control_5\ ,
        control_4 => \Joystick_ADC:bSAR_SEQ:control_4\ ,
        control_3 => \Joystick_ADC:bSAR_SEQ:control_3\ ,
        control_2 => \Joystick_ADC:bSAR_SEQ:control_2\ ,
        control_1 => \Joystick_ADC:bSAR_SEQ:load_period\ ,
        control_0 => \Joystick_ADC:bSAR_SEQ:enable\ );
    Properties:
    {
        cy_ctrl_mode_0 = "00000111"
        cy_ctrl_mode_1 = "00000110"
        cy_ext_reset = 0
        cy_force_order = 1
        cy_init_value = "00000000"
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(1,3)] contents:
LAB@[UDB=(1,3)][LB=0] #macrocells=3, #inputs=6, #pterms=6
{
    [McSlotId=0]:     MacroCell: Name=\UART_LOG:BUART:tx_state_2\, Mode=(T-Register) @ [UDB=(1,3)][LB=0][MC=0]
        Total # of inputs        : 6
        Total # of product terms : 4
        List of special equations: 
            Clock  = (\UART_LOG:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\UART_LOG:BUART:tx_state_1\ * !\UART_LOG:BUART:tx_state_0\ * 
              \UART_LOG:BUART:tx_bitclk_enable_pre\ * 
              \UART_LOG:BUART:tx_state_2\
            + \UART_LOG:BUART:tx_state_1\ * \UART_LOG:BUART:tx_state_0\ * 
              \UART_LOG:BUART:tx_bitclk_enable_pre\ * 
              \UART_LOG:BUART:tx_state_2\
            + \UART_LOG:BUART:tx_state_1\ * \UART_LOG:BUART:tx_state_0\ * 
              !\UART_LOG:BUART:tx_state_2\ * \UART_LOG:BUART:tx_bitclk\
            + \UART_LOG:BUART:tx_state_1\ * !\UART_LOG:BUART:tx_state_2\ * 
              \UART_LOG:BUART:tx_counter_dp\ * \UART_LOG:BUART:tx_bitclk\
        );
        Output = \UART_LOG:BUART:tx_state_2\ (fanout=7)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\UART_LOG:BUART:tx_bitclk\, Mode=(D-Register) @ [UDB=(1,3)][LB=0][MC=1]
        Total # of inputs        : 4
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\UART_LOG:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        !(
              !\UART_LOG:BUART:tx_state_1\ * !\UART_LOG:BUART:tx_state_0\ * 
              \UART_LOG:BUART:tx_state_2\
            + !\UART_LOG:BUART:tx_bitclk_enable_pre\
        );
        Output = \UART_LOG:BUART:tx_bitclk\ (fanout=4)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\UART_LOG:BUART:tx_ctrl_mark_last\, Mode=(T-Register) @ [UDB=(1,3)][LB=0][MC=2]
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\UART_LOG:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \UART_LOG:BUART:tx_ctrl_mark_last\ (fanout=8)
        Properties               : 
        {
        }

    [McSlotId=3]: (empty)
}

LAB@[UDB=(1,3)][LB=1] #macrocells=4, #inputs=11, #pterms=5
{
    [McSlotId=0]:     MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_40\, Mode=(D-Register) @ [UDB=(1,3)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_40\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\UART_LOG:BUART:counter_load_not\, Mode=(Combinatorial) @ [UDB=(1,3)][LB=1][MC=1]
        Total # of inputs        : 4
        Total # of product terms : 2
            Clock Enable: True
        Main Equation            : 2 pterms
        !(
              !\UART_LOG:BUART:tx_state_1\ * !\UART_LOG:BUART:tx_state_0\ * 
              \UART_LOG:BUART:tx_bitclk_enable_pre\
            + !\UART_LOG:BUART:tx_state_1\ * !\UART_LOG:BUART:tx_state_0\ * 
              !\UART_LOG:BUART:tx_state_2\
        );
        Output = \UART_LOG:BUART:counter_load_not\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_39\, Mode=(D-Register) @ [UDB=(1,3)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_39\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_34\, Mode=(D-Register) @ [UDB=(1,3)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_34\ (fanout=1)
        Properties               : 
        {
        }
}

datapathcell: Name =\UART_LOG:BUART:sTX:sCLOCK:TxBitClkGen\
    PORT MAP (
        clock => \UART_LOG:Net_9\ ,
        cs_addr_0 => \UART_LOG:BUART:counter_load_not\ ,
        ce0_reg => \UART_LOG:BUART:tx_bitclk_enable_pre\ ,
        ce1_reg => \UART_LOG:BUART:tx_counter_dp\ );
    Properties:
    {
        a0_init = "00000000"
        a1_init = "00000000"
        ce0_sync = 1
        ce1_sync = 1
        cl0_sync = 1
        cl1_sync = 1
        cmsb_sync = 1
        co_msb_sync = 1
        cy_dpconfig = "1010100001000000001000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011111111000000001111111100000111001000000100000000000101111100000000000000001000"
        d0_init = "00000000"
        d1_init = "00000000"
        f0_blk_sync = 1
        f0_bus_sync = 1
        f1_blk_sync = 1
        f1_bus_sync = 1
        ff0_sync = 1
        ff1_sync = 1
        ov_msb_sync = 1
        so_sync = 1
        z0_sync = 1
        z1_sync = 1
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(1,4)] contents:
LAB@[UDB=(1,4)][LB=0] #macrocells=1, #inputs=6, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\UART_LOG:BUART:tx_state_0\, Mode=(T-Register) @ [UDB=(1,4)][LB=0][MC=0]
        Total # of inputs        : 6
        Total # of product terms : 4
        List of special equations: 
            Clock  = (\UART_LOG:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\UART_LOG:BUART:tx_state_1\ * !\UART_LOG:BUART:tx_state_0\ * 
              \UART_LOG:BUART:tx_bitclk_enable_pre\ * 
              !\UART_LOG:BUART:tx_fifo_empty\
            + !\UART_LOG:BUART:tx_state_1\ * !\UART_LOG:BUART:tx_state_0\ * 
              !\UART_LOG:BUART:tx_fifo_empty\ * !\UART_LOG:BUART:tx_state_2\
            + \UART_LOG:BUART:tx_state_1\ * \UART_LOG:BUART:tx_state_0\ * 
              \UART_LOG:BUART:tx_bitclk_enable_pre\ * 
              \UART_LOG:BUART:tx_fifo_empty\ * \UART_LOG:BUART:tx_state_2\
            + \UART_LOG:BUART:tx_state_0\ * !\UART_LOG:BUART:tx_state_2\ * 
              \UART_LOG:BUART:tx_bitclk\
        );
        Output = \UART_LOG:BUART:tx_state_0\ (fanout=8)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

LAB@[UDB=(1,4)][LB=1] #macrocells=2, #inputs=8, #pterms=8
{
    [McSlotId=0]:     MacroCell: Name=\UART_LOG:BUART:txn\, Mode=(D-Register) @ [UDB=(1,4)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 5
        List of special equations: 
            Clock  = (\UART_LOG:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              \UART_LOG:BUART:txn\ * \UART_LOG:BUART:tx_state_1\ * 
              !\UART_LOG:BUART:tx_bitclk\
            + \UART_LOG:BUART:txn\ * \UART_LOG:BUART:tx_state_2\
            + !\UART_LOG:BUART:tx_state_1\ * \UART_LOG:BUART:tx_state_0\ * 
              !\UART_LOG:BUART:tx_shift_out\ * !\UART_LOG:BUART:tx_state_2\
            + !\UART_LOG:BUART:tx_state_1\ * \UART_LOG:BUART:tx_state_0\ * 
              !\UART_LOG:BUART:tx_state_2\ * !\UART_LOG:BUART:tx_bitclk\
            + \UART_LOG:BUART:tx_state_1\ * !\UART_LOG:BUART:tx_state_0\ * 
              !\UART_LOG:BUART:tx_shift_out\ * !\UART_LOG:BUART:tx_state_2\ * 
              !\UART_LOG:BUART:tx_counter_dp\ * \UART_LOG:BUART:tx_bitclk\
        );
        Output = \UART_LOG:BUART:txn\ (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\UART_LOG:BUART:tx_state_1\, Mode=(T-Register) @ [UDB=(1,4)][LB=1][MC=1]
        Total # of inputs        : 6
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\UART_LOG:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              \UART_LOG:BUART:tx_state_1\ * \UART_LOG:BUART:tx_state_0\ * 
              \UART_LOG:BUART:tx_bitclk_enable_pre\ * 
              \UART_LOG:BUART:tx_state_2\
            + \UART_LOG:BUART:tx_state_1\ * !\UART_LOG:BUART:tx_state_2\ * 
              \UART_LOG:BUART:tx_counter_dp\ * \UART_LOG:BUART:tx_bitclk\
            + \UART_LOG:BUART:tx_state_0\ * !\UART_LOG:BUART:tx_state_2\ * 
              \UART_LOG:BUART:tx_bitclk\
        );
        Output = \UART_LOG:BUART:tx_state_1\ (fanout=8)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

datapathcell: Name =\UART_LOG:BUART:sTX:TxShifter:u0\
    PORT MAP (
        clock => \UART_LOG:Net_9\ ,
        cs_addr_2 => \UART_LOG:BUART:tx_state_1\ ,
        cs_addr_1 => \UART_LOG:BUART:tx_state_0\ ,
        cs_addr_0 => \UART_LOG:BUART:tx_bitclk_enable_pre\ ,
        so_comb => \UART_LOG:BUART:tx_shift_out\ ,
        f0_bus_stat_comb => \UART_LOG:BUART:tx_fifo_notfull\ ,
        f0_blk_stat_comb => \UART_LOG:BUART:tx_fifo_empty\ );
    Properties:
    {
        a0_init = "00000000"
        a1_init = "00000000"
        ce0_sync = 1
        ce1_sync = 1
        cl0_sync = 1
        cl1_sync = 1
        cmsb_sync = 1
        co_msb_sync = 1
        cy_dpconfig = "0000000000000000000000000000000000000000000000000000000011000000000000000000000000000010010000000000000000000000000000000000000011111111000000001111111111111111000000000000000001000100111100000000000000001100"
        d0_init = "00000000"
        d1_init = "00000000"
        f0_blk_sync = 1
        f0_bus_sync = 1
        f1_blk_sync = 1
        f1_bus_sync = 1
        ff0_sync = 1
        ff1_sync = 1
        ov_msb_sync = 1
        so_sync = 1
        z0_sync = 1
        z1_sync = 1
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(1,5)] contents:
LAB@[UDB=(1,5)][LB=0] #macrocells=3, #inputs=8, #pterms=3
{
    [McSlotId=0]: (empty)
    [McSlotId=1]:     MacroCell: Name=\UART_LOG:BUART:tx_status_2\, Mode=(Combinatorial) @ [UDB=(1,5)][LB=0][MC=1]
        Total # of inputs        : 1
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\UART_LOG:BUART:tx_fifo_notfull\
        );
        Output = \UART_LOG:BUART:tx_status_2\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_31\, Mode=(D-Register) @ [UDB=(1,5)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_31\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_56\, Mode=(D-Register) @ [UDB=(1,5)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_56\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(1,5)][LB=1] #macrocells=2, #inputs=12, #pterms=2
{
    [McSlotId=0]:     MacroCell: Name=\UART_LOG:BUART:tx_status_0\, Mode=(Combinatorial) @ [UDB=(1,5)][LB=1][MC=0]
        Total # of inputs        : 5
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\UART_LOG:BUART:tx_state_1\ * !\UART_LOG:BUART:tx_state_0\ * 
              \UART_LOG:BUART:tx_bitclk_enable_pre\ * 
              \UART_LOG:BUART:tx_fifo_empty\ * \UART_LOG:BUART:tx_state_2\
        );
        Output = \UART_LOG:BUART:tx_status_0\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]:     MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_41\, Mode=(D-Register) @ [UDB=(1,5)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_41\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]: (empty)
}

statusicell: Name =\UART_LOG:BUART:sTX:TxSts\
    PORT MAP (
        clock => \UART_LOG:Net_9\ ,
        status_3 => \UART_LOG:BUART:tx_fifo_notfull\ ,
        status_2 => \UART_LOG:BUART:tx_status_2\ ,
        status_1 => \UART_LOG:BUART:tx_fifo_empty\ ,
        status_0 => \UART_LOG:BUART:tx_status_0\ );
    Properties:
    {
        cy_force_order = 1
        cy_int_mask = "1111111"
        cy_md_select = "0000001"
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(2,0)] is empty.
UDB [UDB=(2,1)] contents:
LAB@[UDB=(2,1)][LB=0] #macrocells=3, #inputs=12, #pterms=7
{
    [McSlotId=0]: (empty)
    [McSlotId=1]:     MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_is_active\, Mode=(Combinatorial) @ [UDB=(2,1)][LB=0][MC=1]
        Total # of inputs        : 9
        Total # of product terms : 5
            Clock Enable: True
        Main Equation            : 5 pterms
        !(
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \Joystick_ADC:ch_addr_5\
            + !\Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \Joystick_ADC:ch_addr_4\
            + !\Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \Joystick_ADC:ch_addr_3\
            + !\Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \Joystick_ADC:ch_addr_2\
            + \Joystick_ADC:AMuxHw_2_Decoder_is_active_split\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_is_active\ (fanout=64)
        Properties               : 
        {
            soft = 1
        }

    [McSlotId=2]:     MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_6\, Mode=(D-Register) @ [UDB=(2,1)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_6\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_35\, Mode=(D-Register) @ [UDB=(2,1)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_35\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(2,1)][LB=1] #macrocells=1, #inputs=12, #pterms=8
{
    [McSlotId=0]:     MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_is_active_split\, Mode=(Combinatorial) @ [UDB=(2,1)][LB=1][MC=0]
        Total # of inputs        : 12
        Total # of product terms : 8
            Clock Enable: True
        Main Equation            : 8 pterms
        (
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\Joystick_ADC:ch_addr_5\
            + \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\Joystick_ADC:ch_addr_4\
            + \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\Joystick_ADC:ch_addr_3\
            + \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\Joystick_ADC:ch_addr_2\
            + !\Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \Joystick_ADC:ch_addr_1\
            + \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\Joystick_ADC:ch_addr_1\
            + !\Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ * 
              \Joystick_ADC:ch_addr_0\
            + \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ * 
              !\Joystick_ADC:ch_addr_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_is_active_split\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

UDB [UDB=(2,2)] contents:
LAB@[UDB=(2,2)][LB=0] #macrocells=4, #inputs=9, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_15\, Mode=(D-Register) @ [UDB=(2,2)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_15\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_19\, Mode=(D-Register) @ [UDB=(2,2)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_19\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_old_id_3\, Mode=(D-Register) @ [UDB=(2,2)][LB=0][MC=2]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:ch_addr_3\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ (fanout=66)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_old_id_4\, Mode=(D-Register) @ [UDB=(2,2)][LB=0][MC=3]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:ch_addr_4\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ (fanout=66)
        Properties               : 
        {
        }
}

LAB@[UDB=(2,2)][LB=1] #macrocells=4, #inputs=9, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_55\, Mode=(D-Register) @ [UDB=(2,2)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_55\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_9\, Mode=(D-Register) @ [UDB=(2,2)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_9\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_old_id_1\, Mode=(D-Register) @ [UDB=(2,2)][LB=1][MC=2]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:ch_addr_1\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ (fanout=65)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_old_id_0\, Mode=(D-Register) @ [UDB=(2,2)][LB=1][MC=3]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:ch_addr_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\ (fanout=65)
        Properties               : 
        {
        }
}

count7cell: Name =\Joystick_ADC:bSAR_SEQ:ChannelCounter\
    PORT MAP (
        clock => \Joystick_ADC:clock\ ,
        load => \Joystick_ADC:bSAR_SEQ:load_period\ ,
        enable => \Joystick_ADC:bSAR_SEQ:cnt_enable\ ,
        count_6 => \Joystick_ADC:bSAR_SEQ:count_6\ ,
        count_5 => \Joystick_ADC:ch_addr_5\ ,
        count_4 => \Joystick_ADC:ch_addr_4\ ,
        count_3 => \Joystick_ADC:ch_addr_3\ ,
        count_2 => \Joystick_ADC:ch_addr_2\ ,
        count_1 => \Joystick_ADC:ch_addr_1\ ,
        count_0 => \Joystick_ADC:ch_addr_0\ ,
        tc => \Joystick_ADC:bSAR_SEQ:cnt_tc\ ,
        clk_en => \Joystick_ADC:bSAR_SEQ:enable\ );
    Properties:
    {
        cy_alt_mode = 0
        cy_init_value = "0000000"
        cy_period = "0000001"
        cy_route_en = 1
        cy_route_ld = 1
    }
    Clock Polarity: Active High
    Clock Enable: PosEdge(\Joystick_ADC:bSAR_SEQ:enable\)

UDB [UDB=(2,3)] is empty.
UDB [UDB=(2,4)] is empty.
UDB [UDB=(2,5)] is empty.
UDB [UDB=(3,0)] is empty.
UDB [UDB=(3,1)] contents:
LAB@[UDB=(3,1)][LB=0] #macrocells=4, #inputs=8, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_old_id_2\, Mode=(D-Register) @ [UDB=(3,1)][LB=0][MC=0]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:ch_addr_2\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ (fanout=66)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_10\, Mode=(D-Register) @ [UDB=(3,1)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_10\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_60\, Mode=(D-Register) @ [UDB=(3,1)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_60\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_18\, Mode=(D-Register) @ [UDB=(3,1)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_18\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(3,1)][LB=1] #macrocells=4, #inputs=8, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_17\, Mode=(D-Register) @ [UDB=(3,1)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_17\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_13\, Mode=(D-Register) @ [UDB=(3,1)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_13\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_22\, Mode=(D-Register) @ [UDB=(3,1)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_22\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_old_id_5\, Mode=(D-Register) @ [UDB=(3,1)][LB=1][MC=3]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:ch_addr_5\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ (fanout=66)
        Properties               : 
        {
        }
}

UDB [UDB=(3,2)] contents:
LAB@[UDB=(3,2)][LB=0] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_1\, Mode=(D-Register) @ [UDB=(3,2)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_1\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_42\, Mode=(D-Register) @ [UDB=(3,2)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_42\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_25\, Mode=(D-Register) @ [UDB=(3,2)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_25\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_43\, Mode=(D-Register) @ [UDB=(3,2)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_43\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(3,2)][LB=1] #macrocells=2, #inputs=7, #pterms=2
{
    [McSlotId=0]:     MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_0\, Mode=(D-Register) @ [UDB=(3,2)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_0\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]: (empty)
    [McSlotId=3]:     MacroCell: Name=\Joystick_ADC:AMuxHw_2_Decoder_one_hot_26\, Mode=(D-Register) @ [UDB=(3,2)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\Joystick_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Joystick_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \Joystick_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\Joystick_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \Joystick_ADC:AMuxHw_2_Decoder_one_hot_26\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(3,3)] is empty.
UDB [UDB=(3,4)] is empty.
UDB [UDB=(3,5)] is empty.
Intr container @ [IntrContainer=(0)]: 
  Intr@ [IntrContainer=(0)][IntrId=(0)] 
    interrupt: Name =\Joystick_ADC:IRQ\
        PORT MAP (
            interrupt => Net_207 );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }
  Intr@ [IntrContainer=(0)][IntrId=(1)] 
    interrupt: Name =isr_button_reset
        PORT MAP (
            interrupt => Net_2257 );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }
Drq container @ [DrqContainer=(0)]: 
  Dma@ [DrqContainer=(0)][DrqId=(0)] 
    drqcell: Name =\Joystick_ADC:FinalBuf\
        PORT MAP (
            dmareq => \Joystick_ADC:Net_3698\ ,
            termin => zero ,
            termout => \Joystick_ADC:nrq\ );
        Properties:
        {
            drq_type = "00"
            num_tds = 0
        }
  Dma@ [DrqContainer=(0)][DrqId=(1)] 
    drqcell: Name =\Joystick_ADC:TempBuf\
        PORT MAP (
            dmareq => \Joystick_ADC:Net_3830\ ,
            termin => zero ,
            termout => \Joystick_ADC:Net_3698\ );
        Properties:
        {
            drq_type = "00"
            num_tds = 0
        }
Port 0 contains the following IO cells:
[IoId=0]: 
Pin : Name = Joystick_XPos(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => Joystick_XPos(0)__PA ,
        analog_term => Net_13 ,
        pad => Joystick_XPos(0)_PAD ,
        pin_input => \Joystick_ADC:AMuxHw_2_Decoder_one_hot_0\ );
    Properties:
    {
    }

[IoId=1]: 
Pin : Name = Joystick_YPos(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => Joystick_YPos(0)__PA ,
        analog_term => Net_212 ,
        pad => Joystick_YPos(0)_PAD ,
        pin_input => \Joystick_ADC:AMuxHw_2_Decoder_one_hot_1\ );
    Properties:
    {
    }

[IoId=2]: 
Pin : Name = WD_ResetButton(0)
    Attributes:
        In Group/Port: True
        In Sync Option: NOSYNC
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_DIGITAL
        VTrip: CMOS
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL, ROUTABLE
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => WD_ResetButton(0)__PA ,
        fb => Net_2257 ,
        pad => WD_ResetButton(0)_PAD );
    Properties:
    {
    }

[IoId=6]: 
Pin : Name = LED_red(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => LED_red(0)__PA ,
        pad => LED_red(0)_PAD );
    Properties:
    {
    }

Port 1 contains the following IO cells:
Port 2 contains the following IO cells:
[IoId=4]: 
Pin : Name = RGB_G(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL, ROUTABLE
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => RGB_G(0)__PA ,
        pin_input => Net_481 ,
        pad => RGB_G(0)_PAD );
    Properties:
    {
    }

Port 3 contains the following IO cells:
Port 12 contains the following IO cells:
[IoId=6]: 
Pin : Name = Rx_port(0)
    Attributes:
        In Group/Port: True
        In Sync Option: SYNC
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_DIGITAL
        VTrip: CMOS
        Slew: FAST
        Input Sync needed: True
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL, ROUTABLE
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => Rx_port(0)__PA ,
        fb => Net_2248 ,
        pad => Rx_port(0)_PAD );
    Properties:
    {
    }

[IoId=7]: 
Pin : Name = Tx_port(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL, ROUTABLE
        Initial Value: 1
        IO Voltage: 0
    PORT MAP (
        pa_out => Tx_port(0)__PA ,
        pin_input => Net_2252 ,
        pad => Tx_port(0)_PAD );
    Properties:
    {
    }

Port 15 contains the following IO cells:
ARM group 0: empty
CAN group 0: empty
Cache group 0: empty
CapSense group 0: empty
Clock group 0: 
    Clock Block @ F(Clock,0): 
    clockblockcell: Name =ClockBlock
        PORT MAP (
            imo => ClockBlock_IMO ,
            pllout => ClockBlock_PLL_OUT ,
            ilo => ClockBlock_ILO ,
            clk_100k => ClockBlock_100k ,
            clk_1k => ClockBlock_1k ,
            clk_32k => ClockBlock_32k ,
            xtal => ClockBlock_XTAL ,
            clk_32k_xtal => ClockBlock_XTAL_32KHZ ,
            clk_sync => ClockBlock_MASTER_CLK ,
            clk_bus_glb => ClockBlock_BUS_CLK ,
            clk_bus => ClockBlock_BUS_CLK_local ,
            dclk_glb_0 => \Joystick_ADC:clock\ ,
            dclk_0 => \Joystick_ADC:clock_local\ ,
            dclk_glb_1 => \UART_LOG:Net_9\ ,
            dclk_1 => \UART_LOG:Net_9_local\ ,
            dclk_glb_2 => Net_2605 ,
            dclk_2 => Net_2605_local );
        Properties:
        {
        }
Comparator group 0: empty
DFB group 0: empty
DSM group 0: empty
Decimator group 0: empty
EMIF group 0: empty
I2C group 0: empty
LCD group 0: empty
LVD group 0: empty
PICU group 0: empty
PM group 0: empty
SC group 0: empty
SPC group 0: empty
Timer group 0: empty
USB group 0: empty
VIDAC group 0: empty
OpAmp group 0: empty
CsAbuf group 0: empty
Vref group 0: 
    Vref Block @ F(Vref,13): 
    vrefcell: Name =\Joystick_ADC:SAR:vRef_Vdda_1\
        PORT MAP (
            vout => \Joystick_ADC:SAR:Net_235\ );
        Properties:
        {
            autoenable = 1
            guid = "4720866E-BC14-478d-B8A0-3E44F38CADAC"
            ignoresleep = 0
            name = "Vdda/2"
        }
LPF group 0: empty
SAR group 0: 
    SAR Block @ F(SAR,0): 
    sarcell: Name =\Joystick_ADC:SAR:ADC_SAR\
        PORT MAP (
            vplus => \Joystick_ADC:Net_2803\ ,
            vminus => \Joystick_ADC:SAR:Net_126\ ,
            ext_pin => \Joystick_ADC:SAR:Net_209\ ,
            vrefhi_out => \Joystick_ADC:SAR:Net_126\ ,
            vref => \Joystick_ADC:SAR:Net_235\ ,
            clk_udb => \Joystick_ADC:clock_local\ ,
            irq => \Joystick_ADC:SAR:Net_252\ ,
            next => Net_208 ,
            data_out_udb_11 => \Joystick_ADC:SAR:Net_207_11\ ,
            data_out_udb_10 => \Joystick_ADC:SAR:Net_207_10\ ,
            data_out_udb_9 => \Joystick_ADC:SAR:Net_207_9\ ,
            data_out_udb_8 => \Joystick_ADC:SAR:Net_207_8\ ,
            data_out_udb_7 => \Joystick_ADC:SAR:Net_207_7\ ,
            data_out_udb_6 => \Joystick_ADC:SAR:Net_207_6\ ,
            data_out_udb_5 => \Joystick_ADC:SAR:Net_207_5\ ,
            data_out_udb_4 => \Joystick_ADC:SAR:Net_207_4\ ,
            data_out_udb_3 => \Joystick_ADC:SAR:Net_207_3\ ,
            data_out_udb_2 => \Joystick_ADC:SAR:Net_207_2\ ,
            data_out_udb_1 => \Joystick_ADC:SAR:Net_207_1\ ,
            data_out_udb_0 => \Joystick_ADC:SAR:Net_207_0\ ,
            eof_udb => \Joystick_ADC:Net_3830\ );
        Properties:
        {
            cy_registers = ""
        }
ANAIF group 0: empty
PHUB group 0: empty

Blocks not positioned by the digital component placer:
    Amux Block @ <No Location>: 
    amuxcell: Name =\Joystick_ADC:AMuxHw_2\
        PORT MAP (
            muxin_63 => Net_204 ,
            muxin_62 => Net_203 ,
            muxin_61 => Net_202 ,
            muxin_60 => Net_201 ,
            muxin_59 => Net_200 ,
            muxin_58 => Net_199 ,
            muxin_57 => Net_198 ,
            muxin_56 => Net_197 ,
            muxin_55 => Net_196 ,
            muxin_54 => Net_195 ,
            muxin_53 => Net_194 ,
            muxin_52 => Net_193 ,
            muxin_51 => Net_192 ,
            muxin_50 => Net_191 ,
            muxin_49 => Net_190 ,
            muxin_48 => Net_188 ,
            muxin_47 => Net_162 ,
            muxin_46 => Net_187 ,
            muxin_45 => Net_159 ,
            muxin_44 => Net_157 ,
            muxin_43 => Net_185 ,
            muxin_42 => Net_153 ,
            muxin_41 => Net_152 ,
            muxin_40 => Net_184 ,
            muxin_39 => Net_149 ,
            muxin_38 => Net_148 ,
            muxin_37 => Net_183 ,
            muxin_36 => Net_145 ,
            muxin_35 => Net_144 ,
            muxin_34 => Net_182 ,
            muxin_33 => Net_141 ,
            muxin_32 => Net_140 ,
            muxin_31 => Net_181 ,
            muxin_30 => Net_137 ,
            muxin_29 => Net_135 ,
            muxin_28 => Net_180 ,
            muxin_27 => Net_131 ,
            muxin_26 => Net_130 ,
            muxin_25 => Net_179 ,
            muxin_24 => Net_127 ,
            muxin_23 => Net_126 ,
            muxin_22 => Net_178 ,
            muxin_21 => Net_123 ,
            muxin_20 => Net_122 ,
            muxin_19 => Net_177 ,
            muxin_18 => Net_119 ,
            muxin_17 => Net_118 ,
            muxin_16 => Net_176 ,
            muxin_15 => Net_115 ,
            muxin_14 => Net_113 ,
            muxin_13 => Net_206 ,
            muxin_12 => Net_173 ,
            muxin_11 => Net_172 ,
            muxin_10 => Net_205 ,
            muxin_9 => Net_169 ,
            muxin_8 => Net_168 ,
            muxin_7 => Net_189 ,
            muxin_6 => Net_165 ,
            muxin_5 => Net_164 ,
            muxin_4 => Net_186 ,
            muxin_3 => Net_155 ,
            muxin_2 => Net_136 ,
            muxin_1 => Net_212 ,
            muxin_0 => Net_13 ,
            hw_ctrl_en_63 => \Joystick_ADC:AMuxHw_2_Decoder_one_hot_63\ ,
            hw_ctrl_en_62 => \Joystick_ADC:AMuxHw_2_Decoder_one_hot_62\ ,
            hw_ctrl_en_61 => \Joystick_ADC:AMuxHw_2_Decoder_one_hot_61\ ,
            hw_ctrl_en_60 => \Joystick_ADC:AMuxHw_2_Decoder_one_hot_60\ ,
            hw_ctrl_en_59 => \Joystick_ADC:AMuxHw_2_Decoder_one_hot_59\ ,
            hw_ctrl_en_58 => \Joystick_ADC:AMuxHw_2_Decoder_one_hot_58\ ,
            hw_ctrl_en_57 => \Joystick_ADC:AMuxHw_2_Decoder_one_hot_57\ ,
            hw_ctrl_en_56 => \Joystick_ADC:AMuxHw_2_Decoder_one_hot_56\ ,
            hw_ctrl_en_55 => \Joystick_ADC:AMuxHw_2_Decoder_one_hot_55\ ,
            hw_ctrl_en_54 => \Joystick_ADC:AMuxHw_2_Decoder_one_hot_54\ ,
            hw_ctrl_en_53 => \Joystick_ADC:AMuxHw_2_Decoder_one_hot_53\ ,
            hw_ctrl_en_52 => \Joystick_ADC:AMuxHw_2_Decoder_one_hot_52\ ,
            hw_ctrl_en_51 => \Joystick_ADC:AMuxHw_2_Decoder_one_hot_51\ ,
            hw_ctrl_en_50 => \Joystick_ADC:AMuxHw_2_Decoder_one_hot_50\ ,
            hw_ctrl_en_49 => \Joystick_ADC:AMuxHw_2_Decoder_one_hot_49\ ,
            hw_ctrl_en_48 => \Joystick_ADC:AMuxHw_2_Decoder_one_hot_48\ ,
            hw_ctrl_en_47 => \Joystick_ADC:AMuxHw_2_Decoder_one_hot_47\ ,
            hw_ctrl_en_46 => \Joystick_ADC:AMuxHw_2_Decoder_one_hot_46\ ,
            hw_ctrl_en_45 => \Joystick_ADC:AMuxHw_2_Decoder_one_hot_45\ ,
            hw_ctrl_en_44 => \Joystick_ADC:AMuxHw_2_Decoder_one_hot_44\ ,
            hw_ctrl_en_43 => \Joystick_ADC:AMuxHw_2_Decoder_one_hot_43\ ,
            hw_ctrl_en_42 => \Joystick_ADC:AMuxHw_2_Decoder_one_hot_42\ ,
            hw_ctrl_en_41 => \Joystick_ADC:AMuxHw_2_Decoder_one_hot_41\ ,
            hw_ctrl_en_40 => \Joystick_ADC:AMuxHw_2_Decoder_one_hot_40\ ,
            hw_ctrl_en_39 => \Joystick_ADC:AMuxHw_2_Decoder_one_hot_39\ ,
            hw_ctrl_en_38 => \Joystick_ADC:AMuxHw_2_Decoder_one_hot_38\ ,
            hw_ctrl_en_37 => \Joystick_ADC:AMuxHw_2_Decoder_one_hot_37\ ,
            hw_ctrl_en_36 => \Joystick_ADC:AMuxHw_2_Decoder_one_hot_36\ ,
            hw_ctrl_en_35 => \Joystick_ADC:AMuxHw_2_Decoder_one_hot_35\ ,
            hw_ctrl_en_34 => \Joystick_ADC:AMuxHw_2_Decoder_one_hot_34\ ,
            hw_ctrl_en_33 => \Joystick_ADC:AMuxHw_2_Decoder_one_hot_33\ ,
            hw_ctrl_en_32 => \Joystick_ADC:AMuxHw_2_Decoder_one_hot_32\ ,
            hw_ctrl_en_31 => \Joystick_ADC:AMuxHw_2_Decoder_one_hot_31\ ,
            hw_ctrl_en_30 => \Joystick_ADC:AMuxHw_2_Decoder_one_hot_30\ ,
            hw_ctrl_en_29 => \Joystick_ADC:AMuxHw_2_Decoder_one_hot_29\ ,
            hw_ctrl_en_28 => \Joystick_ADC:AMuxHw_2_Decoder_one_hot_28\ ,
            hw_ctrl_en_27 => \Joystick_ADC:AMuxHw_2_Decoder_one_hot_27\ ,
            hw_ctrl_en_26 => \Joystick_ADC:AMuxHw_2_Decoder_one_hot_26\ ,
            hw_ctrl_en_25 => \Joystick_ADC:AMuxHw_2_Decoder_one_hot_25\ ,
            hw_ctrl_en_24 => \Joystick_ADC:AMuxHw_2_Decoder_one_hot_24\ ,
            hw_ctrl_en_23 => \Joystick_ADC:AMuxHw_2_Decoder_one_hot_23\ ,
            hw_ctrl_en_22 => \Joystick_ADC:AMuxHw_2_Decoder_one_hot_22\ ,
            hw_ctrl_en_21 => \Joystick_ADC:AMuxHw_2_Decoder_one_hot_21\ ,
            hw_ctrl_en_20 => \Joystick_ADC:AMuxHw_2_Decoder_one_hot_20\ ,
            hw_ctrl_en_19 => \Joystick_ADC:AMuxHw_2_Decoder_one_hot_19\ ,
            hw_ctrl_en_18 => \Joystick_ADC:AMuxHw_2_Decoder_one_hot_18\ ,
            hw_ctrl_en_17 => \Joystick_ADC:AMuxHw_2_Decoder_one_hot_17\ ,
            hw_ctrl_en_16 => \Joystick_ADC:AMuxHw_2_Decoder_one_hot_16\ ,
            hw_ctrl_en_15 => \Joystick_ADC:AMuxHw_2_Decoder_one_hot_15\ ,
            hw_ctrl_en_14 => \Joystick_ADC:AMuxHw_2_Decoder_one_hot_14\ ,
            hw_ctrl_en_13 => \Joystick_ADC:AMuxHw_2_Decoder_one_hot_13\ ,
            hw_ctrl_en_12 => \Joystick_ADC:AMuxHw_2_Decoder_one_hot_12\ ,
            hw_ctrl_en_11 => \Joystick_ADC:AMuxHw_2_Decoder_one_hot_11\ ,
            hw_ctrl_en_10 => \Joystick_ADC:AMuxHw_2_Decoder_one_hot_10\ ,
            hw_ctrl_en_9 => \Joystick_ADC:AMuxHw_2_Decoder_one_hot_9\ ,
            hw_ctrl_en_8 => \Joystick_ADC:AMuxHw_2_Decoder_one_hot_8\ ,
            hw_ctrl_en_7 => \Joystick_ADC:AMuxHw_2_Decoder_one_hot_7\ ,
            hw_ctrl_en_6 => \Joystick_ADC:AMuxHw_2_Decoder_one_hot_6\ ,
            hw_ctrl_en_5 => \Joystick_ADC:AMuxHw_2_Decoder_one_hot_5\ ,
            hw_ctrl_en_4 => \Joystick_ADC:AMuxHw_2_Decoder_one_hot_4\ ,
            hw_ctrl_en_3 => \Joystick_ADC:AMuxHw_2_Decoder_one_hot_3\ ,
            hw_ctrl_en_2 => \Joystick_ADC:AMuxHw_2_Decoder_one_hot_2\ ,
            vout => \Joystick_ADC:Net_2803\ );
        Properties:
        {
            api_type = 2
            connect_mode = 1
            cy_registers = ""
            hw_control = 1
            init_mux_sel = "0000000000000000000000000000000000000000000000000000000000000000"
            muxin_width = 64
            one_active = 1
        }
</CYPRESSTAG>
<CYPRESSTAG name="Port Configuration Details">

------------------------------------------------------------
Port Configuration report
------------------------------------------------------------
     |     |       | Interrupt |                  |                   | 
Port | Pin | Fixed |      Type |       Drive Mode |              Name | Connections
-----+-----+-------+-----------+------------------+-------------------+---------------------------------------------------------------
   0 |   0 |     * |      NONE |      HI_Z_ANALOG |  Joystick_XPos(0) | In(\Joystick_ADC:AMuxHw_2_Decoder_one_hot_0\), Analog(Net_13)
     |   1 |     * |      NONE |      HI_Z_ANALOG |  Joystick_YPos(0) | In(\Joystick_ADC:AMuxHw_2_Decoder_one_hot_1\), Analog(Net_212)
     |   2 |       |      NONE |     HI_Z_DIGITAL | WD_ResetButton(0) | FB(Net_2257)
     |   6 |     * |      NONE |         CMOS_OUT |        LED_red(0) | 
-----+-----+-------+-----------+------------------+-------------------+---------------------------------------------------------------
   2 |   4 |     * |      NONE |         CMOS_OUT |          RGB_G(0) | In(Net_481)
-----+-----+-------+-----------+------------------+-------------------+---------------------------------------------------------------
  12 |   6 |     * |      NONE |     HI_Z_DIGITAL |        Rx_port(0) | FB(Net_2248)
     |   7 |     * |      NONE |         CMOS_OUT |        Tx_port(0) | In(Net_2252)
--------------------------------------------------------------------------------------------------------------------------------------
</CYPRESSTAG>
</CYPRESSTAG>
</CYPRESSTAG>
Digital component placer commit/Report: Elapsed time ==> 0s.132ms
Digital Placement phase: Elapsed time ==> 5s.009ms
</CYPRESSTAG>
<CYPRESSTAG name="Digital Routing">
"C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\bin/sjrouter.exe" --xml-path "C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\dev\psoc5/psoc5lp/route_arch-rrg.cydata" --vh2-path "EGasPedal_r.vh2" --pcf-path "EGasPedal.pco" --des-name "EGasPedal" --dsf-path "EGasPedal.dsf" --sdc-path "EGasPedal.sdc" --lib-path "EGasPedal_r.lib"
Routing successful.
Digital Routing phase: Elapsed time ==> 3s.439ms
</CYPRESSTAG>
<CYPRESSTAG name="Bitstream Generation">
Bitstream Generation phase: Elapsed time ==> 0s.207ms
</CYPRESSTAG>
<CYPRESSTAG name="Bitstream Verification">
Bitstream Verification phase: Elapsed time ==> 0s.063ms
</CYPRESSTAG>
<CYPRESSTAG name="Static timing analysis">
Timing report is in EGasPedal_timing.html.
Static timing analysis phase: Elapsed time ==> 0s.651ms
</CYPRESSTAG>
<CYPRESSTAG name="Data reporting">
Data reporting phase: Elapsed time ==> 0s.000ms
</CYPRESSTAG>
<CYPRESSTAG name="Database update...">
Design database save phase: Elapsed time ==> 0s.317ms
</CYPRESSTAG>
cydsfit: Elapsed time ==> 12s.202ms
</CYPRESSTAG>
Fitter phase: Elapsed time ==> 12s.204ms
API generation phase: Elapsed time ==> 7s.709ms
Dependency generation phase: Elapsed time ==> 0s.038ms
Cleanup phase: Elapsed time ==> 0s.005ms
